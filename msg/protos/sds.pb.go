// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sds.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqGetPPList struct {
	MyAddress            *PPBaseInfo `protobuf:"bytes,1,opt,name=my_address,json=myAddress,proto3" json:"my_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqGetPPList) Reset()         { *m = ReqGetPPList{} }
func (m *ReqGetPPList) String() string { return proto.CompactTextString(m) }
func (*ReqGetPPList) ProtoMessage()    {}
func (*ReqGetPPList) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{0}
}

func (m *ReqGetPPList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetPPList.Unmarshal(m, b)
}
func (m *ReqGetPPList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetPPList.Marshal(b, m, deterministic)
}
func (m *ReqGetPPList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetPPList.Merge(m, src)
}
func (m *ReqGetPPList) XXX_Size() int {
	return xxx_messageInfo_ReqGetPPList.Size(m)
}
func (m *ReqGetPPList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetPPList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetPPList proto.InternalMessageInfo

func (m *ReqGetPPList) GetMyAddress() *PPBaseInfo {
	if m != nil {
		return m.MyAddress
	}
	return nil
}

type RspGetPPList struct {
	PpList               []*PPBaseInfo `protobuf:"bytes,1,rep,name=pp_list,json=ppList,proto3" json:"pp_list,omitempty"`
	Result               *Result       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RspGetPPList) Reset()         { *m = RspGetPPList{} }
func (m *RspGetPPList) String() string { return proto.CompactTextString(m) }
func (*RspGetPPList) ProtoMessage()    {}
func (*RspGetPPList) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{1}
}

func (m *RspGetPPList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGetPPList.Unmarshal(m, b)
}
func (m *RspGetPPList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGetPPList.Marshal(b, m, deterministic)
}
func (m *RspGetPPList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGetPPList.Merge(m, src)
}
func (m *RspGetPPList) XXX_Size() int {
	return xxx_messageInfo_RspGetPPList.Size(m)
}
func (m *RspGetPPList) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGetPPList.DiscardUnknown(m)
}

var xxx_messageInfo_RspGetPPList proto.InternalMessageInfo

func (m *RspGetPPList) GetPpList() []*PPBaseInfo {
	if m != nil {
		return m.PpList
	}
	return nil
}

func (m *RspGetPPList) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqRegister struct {
	Address              *PPBaseInfo `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey            []byte      `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	MyAddress            *PPBaseInfo `protobuf:"bytes,3,opt,name=my_address,json=myAddress,proto3" json:"my_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqRegister) Reset()         { *m = ReqRegister{} }
func (m *ReqRegister) String() string { return proto.CompactTextString(m) }
func (*ReqRegister) ProtoMessage()    {}
func (*ReqRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{2}
}

func (m *ReqRegister) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRegister.Unmarshal(m, b)
}
func (m *ReqRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRegister.Marshal(b, m, deterministic)
}
func (m *ReqRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRegister.Merge(m, src)
}
func (m *ReqRegister) XXX_Size() int {
	return xxx_messageInfo_ReqRegister.Size(m)
}
func (m *ReqRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRegister.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRegister proto.InternalMessageInfo

func (m *ReqRegister) GetAddress() *PPBaseInfo {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ReqRegister) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ReqRegister) GetMyAddress() *PPBaseInfo {
	if m != nil {
		return m.MyAddress
	}
	return nil
}

type RspRegister struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	IsPP                 bool     `protobuf:"varint,3,opt,name=isPP,proto3" json:"isPP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspRegister) Reset()         { *m = RspRegister{} }
func (m *RspRegister) String() string { return proto.CompactTextString(m) }
func (*RspRegister) ProtoMessage()    {}
func (*RspRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{3}
}

func (m *RspRegister) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspRegister.Unmarshal(m, b)
}
func (m *RspRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspRegister.Marshal(b, m, deterministic)
}
func (m *RspRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspRegister.Merge(m, src)
}
func (m *RspRegister) XXX_Size() int {
	return xxx_messageInfo_RspRegister.Size(m)
}
func (m *RspRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_RspRegister.DiscardUnknown(m)
}

var xxx_messageInfo_RspRegister proto.InternalMessageInfo

func (m *RspRegister) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspRegister) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspRegister) GetIsPP() bool {
	if m != nil {
		return m.IsPP
	}
	return false
}

type ReqMining struct {
	Address              *PPBaseInfo `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey            []byte      `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Sign                 []byte      `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqMining) Reset()         { *m = ReqMining{} }
func (m *ReqMining) String() string { return proto.CompactTextString(m) }
func (*ReqMining) ProtoMessage()    {}
func (*ReqMining) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{4}
}

func (m *ReqMining) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqMining.Unmarshal(m, b)
}
func (m *ReqMining) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqMining.Marshal(b, m, deterministic)
}
func (m *ReqMining) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqMining.Merge(m, src)
}
func (m *ReqMining) XXX_Size() int {
	return xxx_messageInfo_ReqMining.Size(m)
}
func (m *ReqMining) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqMining.DiscardUnknown(m)
}

var xxx_messageInfo_ReqMining proto.InternalMessageInfo

func (m *ReqMining) GetAddress() *PPBaseInfo {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ReqMining) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ReqMining) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type RspMining struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspMining) Reset()         { *m = RspMining{} }
func (m *RspMining) String() string { return proto.CompactTextString(m) }
func (*RspMining) ProtoMessage()    {}
func (*RspMining) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{5}
}

func (m *RspMining) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspMining.Unmarshal(m, b)
}
func (m *RspMining) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspMining.Marshal(b, m, deterministic)
}
func (m *RspMining) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspMining.Merge(m, src)
}
func (m *RspMining) XXX_Size() int {
	return xxx_messageInfo_RspMining.Size(m)
}
func (m *RspMining) XXX_DiscardUnknown() {
	xxx_messageInfo_RspMining.DiscardUnknown(m)
}

var xxx_messageInfo_RspMining proto.InternalMessageInfo

func (m *RspMining) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqUploadFile struct {
	FileInfo             *FileInfo   `protobuf:"bytes,1,opt,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	MyAddress            *PPBaseInfo `protobuf:"bytes,2,opt,name=my_address,json=myAddress,proto3" json:"my_address,omitempty"`
	Sign                 []byte      `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	ReqId                string      `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	IsCover              bool        `protobuf:"varint,5,opt,name=is_cover,json=isCover,proto3" json:"is_cover,omitempty"`
	IsVideoStream        bool        `protobuf:"varint,6,opt,name=is_video_stream,json=isVideoStream,proto3" json:"is_video_stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqUploadFile) Reset()         { *m = ReqUploadFile{} }
func (m *ReqUploadFile) String() string { return proto.CompactTextString(m) }
func (*ReqUploadFile) ProtoMessage()    {}
func (*ReqUploadFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{6}
}

func (m *ReqUploadFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUploadFile.Unmarshal(m, b)
}
func (m *ReqUploadFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUploadFile.Marshal(b, m, deterministic)
}
func (m *ReqUploadFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUploadFile.Merge(m, src)
}
func (m *ReqUploadFile) XXX_Size() int {
	return xxx_messageInfo_ReqUploadFile.Size(m)
}
func (m *ReqUploadFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUploadFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUploadFile proto.InternalMessageInfo

func (m *ReqUploadFile) GetFileInfo() *FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *ReqUploadFile) GetMyAddress() *PPBaseInfo {
	if m != nil {
		return m.MyAddress
	}
	return nil
}

func (m *ReqUploadFile) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ReqUploadFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqUploadFile) GetIsCover() bool {
	if m != nil {
		return m.IsCover
	}
	return false
}

func (m *ReqUploadFile) GetIsVideoStream() bool {
	if m != nil {
		return m.IsVideoStream
	}
	return false
}

type RspUploadFile struct {
	StorageCer           string          `protobuf:"bytes,1,opt,name=storage_cer,json=storageCer,proto3" json:"storage_cer,omitempty"`
	PpList               []*SliceNumAddr `protobuf:"bytes,2,rep,name=pp_list,json=ppList,proto3" json:"pp_list,omitempty"`
	FileHash             string          `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	TaskId               string          `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TotalSlice           int64           `protobuf:"varint,5,opt,name=total_slice,json=totalSlice,proto3" json:"total_slice,omitempty"`
	Result               *Result         `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string          `protobuf:"bytes,7,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	OwnerWalletAddress   string          `protobuf:"bytes,8,opt,name=owner_wallet_address,json=ownerWalletAddress,proto3" json:"owner_wallet_address,omitempty"`
	IsVideoStream        bool            `protobuf:"varint,9,opt,name=is_video_stream,json=isVideoStream,proto3" json:"is_video_stream,omitempty"`
	VideoSliceDuration   uint64          `protobuf:"varint,10,opt,name=video_slice_duration,json=videoSliceDuration,proto3" json:"video_slice_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RspUploadFile) Reset()         { *m = RspUploadFile{} }
func (m *RspUploadFile) String() string { return proto.CompactTextString(m) }
func (*RspUploadFile) ProtoMessage()    {}
func (*RspUploadFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{7}
}

func (m *RspUploadFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspUploadFile.Unmarshal(m, b)
}
func (m *RspUploadFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspUploadFile.Marshal(b, m, deterministic)
}
func (m *RspUploadFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspUploadFile.Merge(m, src)
}
func (m *RspUploadFile) XXX_Size() int {
	return xxx_messageInfo_RspUploadFile.Size(m)
}
func (m *RspUploadFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RspUploadFile.DiscardUnknown(m)
}

var xxx_messageInfo_RspUploadFile proto.InternalMessageInfo

func (m *RspUploadFile) GetStorageCer() string {
	if m != nil {
		return m.StorageCer
	}
	return ""
}

func (m *RspUploadFile) GetPpList() []*SliceNumAddr {
	if m != nil {
		return m.PpList
	}
	return nil
}

func (m *RspUploadFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspUploadFile) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *RspUploadFile) GetTotalSlice() int64 {
	if m != nil {
		return m.TotalSlice
	}
	return 0
}

func (m *RspUploadFile) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspUploadFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspUploadFile) GetOwnerWalletAddress() string {
	if m != nil {
		return m.OwnerWalletAddress
	}
	return ""
}

func (m *RspUploadFile) GetIsVideoStream() bool {
	if m != nil {
		return m.IsVideoStream
	}
	return false
}

func (m *RspUploadFile) GetVideoSliceDuration() uint64 {
	if m != nil {
		return m.VideoSliceDuration
	}
	return 0
}

type ReqUploadFileSlice struct {
	SliceNumAddr         *SliceNumAddr    `protobuf:"bytes,1,opt,name=slice_num_addr,json=sliceNumAddr,proto3" json:"slice_num_addr,omitempty"`
	FileCrc              uint32           `protobuf:"varint,2,opt,name=file_crc,json=fileCrc,proto3" json:"file_crc,omitempty"`
	SliceInfo            *SliceOffsetInfo `protobuf:"bytes,3,opt,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	Data                 []byte           `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	FileHash             string           `protobuf:"bytes,5,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	P2PAddress           string           `protobuf:"bytes,6,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string           `protobuf:"bytes,7,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	TaskId               string           `protobuf:"bytes,8,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SliceSize            uint64           `protobuf:"varint,9,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReqUploadFileSlice) Reset()         { *m = ReqUploadFileSlice{} }
func (m *ReqUploadFileSlice) String() string { return proto.CompactTextString(m) }
func (*ReqUploadFileSlice) ProtoMessage()    {}
func (*ReqUploadFileSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{8}
}

func (m *ReqUploadFileSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUploadFileSlice.Unmarshal(m, b)
}
func (m *ReqUploadFileSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUploadFileSlice.Marshal(b, m, deterministic)
}
func (m *ReqUploadFileSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUploadFileSlice.Merge(m, src)
}
func (m *ReqUploadFileSlice) XXX_Size() int {
	return xxx_messageInfo_ReqUploadFileSlice.Size(m)
}
func (m *ReqUploadFileSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUploadFileSlice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUploadFileSlice proto.InternalMessageInfo

func (m *ReqUploadFileSlice) GetSliceNumAddr() *SliceNumAddr {
	if m != nil {
		return m.SliceNumAddr
	}
	return nil
}

func (m *ReqUploadFileSlice) GetFileCrc() uint32 {
	if m != nil {
		return m.FileCrc
	}
	return 0
}

func (m *ReqUploadFileSlice) GetSliceInfo() *SliceOffsetInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

func (m *ReqUploadFileSlice) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReqUploadFileSlice) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqUploadFileSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqUploadFileSlice) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqUploadFileSlice) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqUploadFileSlice) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

type RspUploadFileSlice struct {
	Result               *Result       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	SliceNumAddr         *SliceNumAddr `protobuf:"bytes,2,opt,name=slice_num_addr,json=sliceNumAddr,proto3" json:"slice_num_addr,omitempty"`
	FileHash             string        `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	SliceHash            string        `protobuf:"bytes,4,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	P2PAddress           string        `protobuf:"bytes,5,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string        `protobuf:"bytes,6,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	SliceSize            uint64        `protobuf:"varint,7,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	TaskId               string        `protobuf:"bytes,8,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RspUploadFileSlice) Reset()         { *m = RspUploadFileSlice{} }
func (m *RspUploadFileSlice) String() string { return proto.CompactTextString(m) }
func (*RspUploadFileSlice) ProtoMessage()    {}
func (*RspUploadFileSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{9}
}

func (m *RspUploadFileSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspUploadFileSlice.Unmarshal(m, b)
}
func (m *RspUploadFileSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspUploadFileSlice.Marshal(b, m, deterministic)
}
func (m *RspUploadFileSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspUploadFileSlice.Merge(m, src)
}
func (m *RspUploadFileSlice) XXX_Size() int {
	return xxx_messageInfo_RspUploadFileSlice.Size(m)
}
func (m *RspUploadFileSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_RspUploadFileSlice.DiscardUnknown(m)
}

var xxx_messageInfo_RspUploadFileSlice proto.InternalMessageInfo

func (m *RspUploadFileSlice) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspUploadFileSlice) GetSliceNumAddr() *SliceNumAddr {
	if m != nil {
		return m.SliceNumAddr
	}
	return nil
}

func (m *RspUploadFileSlice) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspUploadFileSlice) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

func (m *RspUploadFileSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspUploadFileSlice) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspUploadFileSlice) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

func (m *RspUploadFileSlice) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type UploadSpeedOfProgress struct {
	FileHash             string   `protobuf:"bytes,1,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	SliceSize            uint64   `protobuf:"varint,2,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadSpeedOfProgress) Reset()         { *m = UploadSpeedOfProgress{} }
func (m *UploadSpeedOfProgress) String() string { return proto.CompactTextString(m) }
func (*UploadSpeedOfProgress) ProtoMessage()    {}
func (*UploadSpeedOfProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{10}
}

func (m *UploadSpeedOfProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadSpeedOfProgress.Unmarshal(m, b)
}
func (m *UploadSpeedOfProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadSpeedOfProgress.Marshal(b, m, deterministic)
}
func (m *UploadSpeedOfProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadSpeedOfProgress.Merge(m, src)
}
func (m *UploadSpeedOfProgress) XXX_Size() int {
	return xxx_messageInfo_UploadSpeedOfProgress.Size(m)
}
func (m *UploadSpeedOfProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadSpeedOfProgress.DiscardUnknown(m)
}

var xxx_messageInfo_UploadSpeedOfProgress proto.InternalMessageInfo

func (m *UploadSpeedOfProgress) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *UploadSpeedOfProgress) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

type ReportUploadSliceResult struct {
	SliceNumAddr         *SliceNumAddr `protobuf:"bytes,1,opt,name=slice_num_addr,json=sliceNumAddr,proto3" json:"slice_num_addr,omitempty"`
	SliceHash            string        `protobuf:"bytes,2,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	FileHash             string        `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	UploadSuccess        bool          `protobuf:"varint,4,opt,name=upload_success,json=uploadSuccess,proto3" json:"upload_success,omitempty"`
	IsPP                 bool          `protobuf:"varint,5,opt,name=isPP,proto3" json:"isPP,omitempty"`
	SliceSize            uint64        `protobuf:"varint,6,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	Sign                 []byte        `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	TaskId               string        `protobuf:"bytes,8,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	P2PAddress           string        `protobuf:"bytes,9,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string        `protobuf:"bytes,10,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReportUploadSliceResult) Reset()         { *m = ReportUploadSliceResult{} }
func (m *ReportUploadSliceResult) String() string { return proto.CompactTextString(m) }
func (*ReportUploadSliceResult) ProtoMessage()    {}
func (*ReportUploadSliceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{11}
}

func (m *ReportUploadSliceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportUploadSliceResult.Unmarshal(m, b)
}
func (m *ReportUploadSliceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportUploadSliceResult.Marshal(b, m, deterministic)
}
func (m *ReportUploadSliceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportUploadSliceResult.Merge(m, src)
}
func (m *ReportUploadSliceResult) XXX_Size() int {
	return xxx_messageInfo_ReportUploadSliceResult.Size(m)
}
func (m *ReportUploadSliceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportUploadSliceResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReportUploadSliceResult proto.InternalMessageInfo

func (m *ReportUploadSliceResult) GetSliceNumAddr() *SliceNumAddr {
	if m != nil {
		return m.SliceNumAddr
	}
	return nil
}

func (m *ReportUploadSliceResult) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

func (m *ReportUploadSliceResult) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReportUploadSliceResult) GetUploadSuccess() bool {
	if m != nil {
		return m.UploadSuccess
	}
	return false
}

func (m *ReportUploadSliceResult) GetIsPP() bool {
	if m != nil {
		return m.IsPP
	}
	return false
}

func (m *ReportUploadSliceResult) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

func (m *ReportUploadSliceResult) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ReportUploadSliceResult) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReportUploadSliceResult) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReportUploadSliceResult) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

type RspReportUploadSliceResult struct {
	Result               *Result       `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	SliceNumAddr         *SliceNumAddr `protobuf:"bytes,2,opt,name=slice_num_addr,json=sliceNumAddr,proto3" json:"slice_num_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RspReportUploadSliceResult) Reset()         { *m = RspReportUploadSliceResult{} }
func (m *RspReportUploadSliceResult) String() string { return proto.CompactTextString(m) }
func (*RspReportUploadSliceResult) ProtoMessage()    {}
func (*RspReportUploadSliceResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{12}
}

func (m *RspReportUploadSliceResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspReportUploadSliceResult.Unmarshal(m, b)
}
func (m *RspReportUploadSliceResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspReportUploadSliceResult.Marshal(b, m, deterministic)
}
func (m *RspReportUploadSliceResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspReportUploadSliceResult.Merge(m, src)
}
func (m *RspReportUploadSliceResult) XXX_Size() int {
	return xxx_messageInfo_RspReportUploadSliceResult.Size(m)
}
func (m *RspReportUploadSliceResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RspReportUploadSliceResult.DiscardUnknown(m)
}

var xxx_messageInfo_RspReportUploadSliceResult proto.InternalMessageInfo

func (m *RspReportUploadSliceResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspReportUploadSliceResult) GetSliceNumAddr() *SliceNumAddr {
	if m != nil {
		return m.SliceNumAddr
	}
	return nil
}

type Uploaded struct {
	ReporterAddress      string   `protobuf:"bytes,1,opt,name=reporter_address,json=reporterAddress,proto3" json:"reporter_address,omitempty"`
	UploaderAddress      string   `protobuf:"bytes,2,opt,name=uploader_address,json=uploaderAddress,proto3" json:"uploader_address,omitempty"`
	FileHash             string   `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Uploaded) Reset()         { *m = Uploaded{} }
func (m *Uploaded) String() string { return proto.CompactTextString(m) }
func (*Uploaded) ProtoMessage()    {}
func (*Uploaded) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{13}
}

func (m *Uploaded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Uploaded.Unmarshal(m, b)
}
func (m *Uploaded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Uploaded.Marshal(b, m, deterministic)
}
func (m *Uploaded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Uploaded.Merge(m, src)
}
func (m *Uploaded) XXX_Size() int {
	return xxx_messageInfo_Uploaded.Size(m)
}
func (m *Uploaded) XXX_DiscardUnknown() {
	xxx_messageInfo_Uploaded.DiscardUnknown(m)
}

var xxx_messageInfo_Uploaded proto.InternalMessageInfo

func (m *Uploaded) GetReporterAddress() string {
	if m != nil {
		return m.ReporterAddress
	}
	return ""
}

func (m *Uploaded) GetUploaderAddress() string {
	if m != nil {
		return m.UploaderAddress
	}
	return ""
}

func (m *Uploaded) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

type ReqFindMyFileList struct {
	P2PAddress           string       `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileName             string       `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Directory            string       `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	ReqId                string       `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	FileType             FileSortType `protobuf:"varint,6,opt,name=file_type,json=fileType,proto3,enum=protos.FileSortType" json:"file_type,omitempty"`
	IsUp                 bool         `protobuf:"varint,7,opt,name=is_up,json=isUp,proto3" json:"is_up,omitempty"`
	Keyword              string       `protobuf:"bytes,8,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqFindMyFileList) Reset()         { *m = ReqFindMyFileList{} }
func (m *ReqFindMyFileList) String() string { return proto.CompactTextString(m) }
func (*ReqFindMyFileList) ProtoMessage()    {}
func (*ReqFindMyFileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{14}
}

func (m *ReqFindMyFileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFindMyFileList.Unmarshal(m, b)
}
func (m *ReqFindMyFileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFindMyFileList.Marshal(b, m, deterministic)
}
func (m *ReqFindMyFileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFindMyFileList.Merge(m, src)
}
func (m *ReqFindMyFileList) XXX_Size() int {
	return xxx_messageInfo_ReqFindMyFileList.Size(m)
}
func (m *ReqFindMyFileList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFindMyFileList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFindMyFileList proto.InternalMessageInfo

func (m *ReqFindMyFileList) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqFindMyFileList) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqFindMyFileList) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *ReqFindMyFileList) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *ReqFindMyFileList) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqFindMyFileList) GetFileType() FileSortType {
	if m != nil {
		return m.FileType
	}
	return FileSortType_DEF
}

func (m *ReqFindMyFileList) GetIsUp() bool {
	if m != nil {
		return m.IsUp
	}
	return false
}

func (m *ReqFindMyFileList) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type RspFindMyFileList struct {
	FileInfo             []*FileInfo `protobuf:"bytes,1,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	P2PAddress           string      `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result     `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspFindMyFileList) Reset()         { *m = RspFindMyFileList{} }
func (m *RspFindMyFileList) String() string { return proto.CompactTextString(m) }
func (*RspFindMyFileList) ProtoMessage()    {}
func (*RspFindMyFileList) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{15}
}

func (m *RspFindMyFileList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFindMyFileList.Unmarshal(m, b)
}
func (m *RspFindMyFileList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFindMyFileList.Marshal(b, m, deterministic)
}
func (m *RspFindMyFileList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFindMyFileList.Merge(m, src)
}
func (m *RspFindMyFileList) XXX_Size() int {
	return xxx_messageInfo_RspFindMyFileList.Size(m)
}
func (m *RspFindMyFileList) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFindMyFileList.DiscardUnknown(m)
}

var xxx_messageInfo_RspFindMyFileList proto.InternalMessageInfo

func (m *RspFindMyFileList) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *RspFindMyFileList) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFindMyFileList) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFindMyFileList) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFindMyFileList) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqFindDirectoryTree struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	PathHash             string   `protobuf:"bytes,3,opt,name=path_hash,json=pathHash,proto3" json:"path_hash,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqFindDirectoryTree) Reset()         { *m = ReqFindDirectoryTree{} }
func (m *ReqFindDirectoryTree) String() string { return proto.CompactTextString(m) }
func (*ReqFindDirectoryTree) ProtoMessage()    {}
func (*ReqFindDirectoryTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{16}
}

func (m *ReqFindDirectoryTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFindDirectoryTree.Unmarshal(m, b)
}
func (m *ReqFindDirectoryTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFindDirectoryTree.Marshal(b, m, deterministic)
}
func (m *ReqFindDirectoryTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFindDirectoryTree.Merge(m, src)
}
func (m *ReqFindDirectoryTree) XXX_Size() int {
	return xxx_messageInfo_ReqFindDirectoryTree.Size(m)
}
func (m *ReqFindDirectoryTree) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFindDirectoryTree.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFindDirectoryTree proto.InternalMessageInfo

func (m *ReqFindDirectoryTree) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqFindDirectoryTree) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqFindDirectoryTree) GetPathHash() string {
	if m != nil {
		return m.PathHash
	}
	return ""
}

func (m *ReqFindDirectoryTree) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspFindDirectoryTree struct {
	P2PAddress           string      `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Directory            string      `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
	FileInfo             []*FileInfo `protobuf:"bytes,4,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	ReqId                string      `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result     `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspFindDirectoryTree) Reset()         { *m = RspFindDirectoryTree{} }
func (m *RspFindDirectoryTree) String() string { return proto.CompactTextString(m) }
func (*RspFindDirectoryTree) ProtoMessage()    {}
func (*RspFindDirectoryTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{17}
}

func (m *RspFindDirectoryTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFindDirectoryTree.Unmarshal(m, b)
}
func (m *RspFindDirectoryTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFindDirectoryTree.Marshal(b, m, deterministic)
}
func (m *RspFindDirectoryTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFindDirectoryTree.Merge(m, src)
}
func (m *RspFindDirectoryTree) XXX_Size() int {
	return xxx_messageInfo_RspFindDirectoryTree.Size(m)
}
func (m *RspFindDirectoryTree) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFindDirectoryTree.DiscardUnknown(m)
}

var xxx_messageInfo_RspFindDirectoryTree proto.InternalMessageInfo

func (m *RspFindDirectoryTree) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFindDirectoryTree) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFindDirectoryTree) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *RspFindDirectoryTree) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *RspFindDirectoryTree) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFindDirectoryTree) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqFileStorageInfo struct {
	FileIndexes          *FileIndexes `protobuf:"bytes,1,opt,name=file_indexes,json=fileIndexes,proto3" json:"file_indexes,omitempty"`
	Sign                 []byte       `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	ReqId                string       `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	IsVideoStream        bool         `protobuf:"varint,4,opt,name=is_video_stream,json=isVideoStream,proto3" json:"is_video_stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqFileStorageInfo) Reset()         { *m = ReqFileStorageInfo{} }
func (m *ReqFileStorageInfo) String() string { return proto.CompactTextString(m) }
func (*ReqFileStorageInfo) ProtoMessage()    {}
func (*ReqFileStorageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{18}
}

func (m *ReqFileStorageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFileStorageInfo.Unmarshal(m, b)
}
func (m *ReqFileStorageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFileStorageInfo.Marshal(b, m, deterministic)
}
func (m *ReqFileStorageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFileStorageInfo.Merge(m, src)
}
func (m *ReqFileStorageInfo) XXX_Size() int {
	return xxx_messageInfo_ReqFileStorageInfo.Size(m)
}
func (m *ReqFileStorageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFileStorageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFileStorageInfo proto.InternalMessageInfo

func (m *ReqFileStorageInfo) GetFileIndexes() *FileIndexes {
	if m != nil {
		return m.FileIndexes
	}
	return nil
}

func (m *ReqFileStorageInfo) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ReqFileStorageInfo) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqFileStorageInfo) GetIsVideoStream() bool {
	if m != nil {
		return m.IsVideoStream
	}
	return false
}

type RspFileStorageInfo struct {
	VisitCer             string               `protobuf:"bytes,1,opt,name=visit_cer,json=visitCer,proto3" json:"visit_cer,omitempty"`
	P2PAddress           string               `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string               `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	SliceInfo            []*DownloadSliceInfo `protobuf:"bytes,4,rep,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	FileHash             string               `protobuf:"bytes,5,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileName             string               `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Result               *Result              `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string               `protobuf:"bytes,8,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	SavePath             string               `protobuf:"bytes,9,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	FileSize             uint64               `protobuf:"varint,10,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	IsVideoStream        bool                 `protobuf:"varint,11,opt,name=is_video_stream,json=isVideoStream,proto3" json:"is_video_stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RspFileStorageInfo) Reset()         { *m = RspFileStorageInfo{} }
func (m *RspFileStorageInfo) String() string { return proto.CompactTextString(m) }
func (*RspFileStorageInfo) ProtoMessage()    {}
func (*RspFileStorageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{19}
}

func (m *RspFileStorageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFileStorageInfo.Unmarshal(m, b)
}
func (m *RspFileStorageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFileStorageInfo.Marshal(b, m, deterministic)
}
func (m *RspFileStorageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFileStorageInfo.Merge(m, src)
}
func (m *RspFileStorageInfo) XXX_Size() int {
	return xxx_messageInfo_RspFileStorageInfo.Size(m)
}
func (m *RspFileStorageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFileStorageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspFileStorageInfo proto.InternalMessageInfo

func (m *RspFileStorageInfo) GetVisitCer() string {
	if m != nil {
		return m.VisitCer
	}
	return ""
}

func (m *RspFileStorageInfo) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFileStorageInfo) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFileStorageInfo) GetSliceInfo() []*DownloadSliceInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

func (m *RspFileStorageInfo) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspFileStorageInfo) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *RspFileStorageInfo) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspFileStorageInfo) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFileStorageInfo) GetSavePath() string {
	if m != nil {
		return m.SavePath
	}
	return ""
}

func (m *RspFileStorageInfo) GetFileSize() uint64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *RspFileStorageInfo) GetIsVideoStream() bool {
	if m != nil {
		return m.IsVideoStream
	}
	return false
}

type ReqDownloadSlice struct {
	SliceInfo            *SliceOffsetInfo `protobuf:"bytes,1,opt,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	P2PAddress           string           `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string           `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string           `protobuf:"bytes,4,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	TaskId               string           `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SavePath             string           `protobuf:"bytes,6,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	ReqId                string           `protobuf:"bytes,7,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReqDownloadSlice) Reset()         { *m = ReqDownloadSlice{} }
func (m *ReqDownloadSlice) String() string { return proto.CompactTextString(m) }
func (*ReqDownloadSlice) ProtoMessage()    {}
func (*ReqDownloadSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{20}
}

func (m *ReqDownloadSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDownloadSlice.Unmarshal(m, b)
}
func (m *ReqDownloadSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDownloadSlice.Marshal(b, m, deterministic)
}
func (m *ReqDownloadSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDownloadSlice.Merge(m, src)
}
func (m *ReqDownloadSlice) XXX_Size() int {
	return xxx_messageInfo_ReqDownloadSlice.Size(m)
}
func (m *ReqDownloadSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDownloadSlice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDownloadSlice proto.InternalMessageInfo

func (m *ReqDownloadSlice) GetSliceInfo() *SliceOffsetInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

func (m *ReqDownloadSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDownloadSlice) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDownloadSlice) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqDownloadSlice) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqDownloadSlice) GetSavePath() string {
	if m != nil {
		return m.SavePath
	}
	return ""
}

func (m *ReqDownloadSlice) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspDownloadSlice struct {
	SliceInfo            *SliceOffsetInfo `protobuf:"bytes,1,opt,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	FileCrc              uint32           `protobuf:"varint,2,opt,name=file_crc,json=fileCrc,proto3" json:"file_crc,omitempty"`
	FileHash             string           `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	Data                 []byte           `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	P2PAddress           string           `protobuf:"bytes,5,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string           `protobuf:"bytes,6,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	TaskId               string           `protobuf:"bytes,7,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SliceSize            uint64           `protobuf:"varint,8,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	NeedReport           bool             `protobuf:"varint,9,opt,name=needReport,proto3" json:"needReport,omitempty"`
	SavePath             string           `protobuf:"bytes,10,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	Result               *Result          `protobuf:"bytes,11,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string           `protobuf:"bytes,12,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RspDownloadSlice) Reset()         { *m = RspDownloadSlice{} }
func (m *RspDownloadSlice) String() string { return proto.CompactTextString(m) }
func (*RspDownloadSlice) ProtoMessage()    {}
func (*RspDownloadSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{21}
}

func (m *RspDownloadSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDownloadSlice.Unmarshal(m, b)
}
func (m *RspDownloadSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDownloadSlice.Marshal(b, m, deterministic)
}
func (m *RspDownloadSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDownloadSlice.Merge(m, src)
}
func (m *RspDownloadSlice) XXX_Size() int {
	return xxx_messageInfo_RspDownloadSlice.Size(m)
}
func (m *RspDownloadSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDownloadSlice.DiscardUnknown(m)
}

var xxx_messageInfo_RspDownloadSlice proto.InternalMessageInfo

func (m *RspDownloadSlice) GetSliceInfo() *SliceOffsetInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

func (m *RspDownloadSlice) GetFileCrc() uint32 {
	if m != nil {
		return m.FileCrc
	}
	return 0
}

func (m *RspDownloadSlice) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspDownloadSlice) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RspDownloadSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDownloadSlice) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDownloadSlice) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *RspDownloadSlice) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

func (m *RspDownloadSlice) GetNeedReport() bool {
	if m != nil {
		return m.NeedReport
	}
	return false
}

func (m *RspDownloadSlice) GetSavePath() string {
	if m != nil {
		return m.SavePath
	}
	return ""
}

func (m *RspDownloadSlice) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspDownloadSlice) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type ReqDownloadSliceWrong struct {
	P2PAddress           string            `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string            `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	TaskId               string            `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SliceHash            string            `protobuf:"bytes,4,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	Type                 DownloadWrongType `protobuf:"varint,5,opt,name=type,proto3,enum=protos.DownloadWrongType" json:"type,omitempty"`
	SavePath             string            `protobuf:"bytes,6,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReqDownloadSliceWrong) Reset()         { *m = ReqDownloadSliceWrong{} }
func (m *ReqDownloadSliceWrong) String() string { return proto.CompactTextString(m) }
func (*ReqDownloadSliceWrong) ProtoMessage()    {}
func (*ReqDownloadSliceWrong) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{22}
}

func (m *ReqDownloadSliceWrong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDownloadSliceWrong.Unmarshal(m, b)
}
func (m *ReqDownloadSliceWrong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDownloadSliceWrong.Marshal(b, m, deterministic)
}
func (m *ReqDownloadSliceWrong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDownloadSliceWrong.Merge(m, src)
}
func (m *ReqDownloadSliceWrong) XXX_Size() int {
	return xxx_messageInfo_ReqDownloadSliceWrong.Size(m)
}
func (m *ReqDownloadSliceWrong) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDownloadSliceWrong.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDownloadSliceWrong proto.InternalMessageInfo

func (m *ReqDownloadSliceWrong) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDownloadSliceWrong) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDownloadSliceWrong) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqDownloadSliceWrong) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

func (m *ReqDownloadSliceWrong) GetType() DownloadWrongType {
	if m != nil {
		return m.Type
	}
	return DownloadWrongType_LOSESLICE
}

func (m *ReqDownloadSliceWrong) GetSavePath() string {
	if m != nil {
		return m.SavePath
	}
	return ""
}

type RspDownloadSliceWrong struct {
	P2PAddress           string             `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string             `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string             `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	TaskId               string             `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	NewSliceInfo         *DownloadSliceInfo `protobuf:"bytes,5,opt,name=new_slice_info,json=newSliceInfo,proto3" json:"new_slice_info,omitempty"`
	SavePath             string             `protobuf:"bytes,6,opt,name=save_path,json=savePath,proto3" json:"save_path,omitempty"`
	Result               *Result            `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RspDownloadSliceWrong) Reset()         { *m = RspDownloadSliceWrong{} }
func (m *RspDownloadSliceWrong) String() string { return proto.CompactTextString(m) }
func (*RspDownloadSliceWrong) ProtoMessage()    {}
func (*RspDownloadSliceWrong) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{23}
}

func (m *RspDownloadSliceWrong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDownloadSliceWrong.Unmarshal(m, b)
}
func (m *RspDownloadSliceWrong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDownloadSliceWrong.Marshal(b, m, deterministic)
}
func (m *RspDownloadSliceWrong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDownloadSliceWrong.Merge(m, src)
}
func (m *RspDownloadSliceWrong) XXX_Size() int {
	return xxx_messageInfo_RspDownloadSliceWrong.Size(m)
}
func (m *RspDownloadSliceWrong) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDownloadSliceWrong.DiscardUnknown(m)
}

var xxx_messageInfo_RspDownloadSliceWrong proto.InternalMessageInfo

func (m *RspDownloadSliceWrong) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDownloadSliceWrong) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDownloadSliceWrong) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspDownloadSliceWrong) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *RspDownloadSliceWrong) GetNewSliceInfo() *DownloadSliceInfo {
	if m != nil {
		return m.NewSliceInfo
	}
	return nil
}

func (m *RspDownloadSliceWrong) GetSavePath() string {
	if m != nil {
		return m.SavePath
	}
	return ""
}

func (m *RspDownloadSliceWrong) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDownloadSlicePause struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string   `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDownloadSlicePause) Reset()         { *m = ReqDownloadSlicePause{} }
func (m *ReqDownloadSlicePause) String() string { return proto.CompactTextString(m) }
func (*ReqDownloadSlicePause) ProtoMessage()    {}
func (*ReqDownloadSlicePause) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{24}
}

func (m *ReqDownloadSlicePause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDownloadSlicePause.Unmarshal(m, b)
}
func (m *ReqDownloadSlicePause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDownloadSlicePause.Marshal(b, m, deterministic)
}
func (m *ReqDownloadSlicePause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDownloadSlicePause.Merge(m, src)
}
func (m *ReqDownloadSlicePause) XXX_Size() int {
	return xxx_messageInfo_ReqDownloadSlicePause.Size(m)
}
func (m *ReqDownloadSlicePause) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDownloadSlicePause.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDownloadSlicePause proto.InternalMessageInfo

func (m *ReqDownloadSlicePause) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDownloadSlicePause) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDownloadSlicePause) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqDownloadSlicePause) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspDownloadSlicePause struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string   `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDownloadSlicePause) Reset()         { *m = RspDownloadSlicePause{} }
func (m *RspDownloadSlicePause) String() string { return proto.CompactTextString(m) }
func (*RspDownloadSlicePause) ProtoMessage()    {}
func (*RspDownloadSlicePause) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{25}
}

func (m *RspDownloadSlicePause) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDownloadSlicePause.Unmarshal(m, b)
}
func (m *RspDownloadSlicePause) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDownloadSlicePause.Marshal(b, m, deterministic)
}
func (m *RspDownloadSlicePause) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDownloadSlicePause.Merge(m, src)
}
func (m *RspDownloadSlicePause) XXX_Size() int {
	return xxx_messageInfo_RspDownloadSlicePause.Size(m)
}
func (m *RspDownloadSlicePause) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDownloadSlicePause.DiscardUnknown(m)
}

var xxx_messageInfo_RspDownloadSlicePause proto.InternalMessageInfo

func (m *RspDownloadSlicePause) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDownloadSlicePause) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDownloadSlicePause) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspDownloadSlicePause) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspDownloadSlicePause) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqReportDownloadResult struct {
	IsPP                    bool               `protobuf:"varint,1,opt,name=isPP,proto3" json:"isPP,omitempty"`
	SliceInfo               *DownloadSliceInfo `protobuf:"bytes,2,opt,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	FileHash                string             `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	DownloaderP2PAddress    string             `protobuf:"bytes,4,opt,name=downloader_p2p_address,json=downloaderP2pAddress,proto3" json:"downloader_p2p_address,omitempty"`
	DownloaderWalletAddress string             `protobuf:"bytes,5,opt,name=downloader_wallet_address,json=downloaderWalletAddress,proto3" json:"downloader_wallet_address,omitempty"`
	MyP2PAddress            string             `protobuf:"bytes,6,opt,name=my_p2p_address,json=myP2pAddress,proto3" json:"my_p2p_address,omitempty"`
	MyWalletAddress         string             `protobuf:"bytes,7,opt,name=my_wallet_address,json=myWalletAddress,proto3" json:"my_wallet_address,omitempty"`
	Sign                    []byte             `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`
	TaskId                  string             `protobuf:"bytes,9,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *ReqReportDownloadResult) Reset()         { *m = ReqReportDownloadResult{} }
func (m *ReqReportDownloadResult) String() string { return proto.CompactTextString(m) }
func (*ReqReportDownloadResult) ProtoMessage()    {}
func (*ReqReportDownloadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{26}
}

func (m *ReqReportDownloadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqReportDownloadResult.Unmarshal(m, b)
}
func (m *ReqReportDownloadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqReportDownloadResult.Marshal(b, m, deterministic)
}
func (m *ReqReportDownloadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqReportDownloadResult.Merge(m, src)
}
func (m *ReqReportDownloadResult) XXX_Size() int {
	return xxx_messageInfo_ReqReportDownloadResult.Size(m)
}
func (m *ReqReportDownloadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqReportDownloadResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReqReportDownloadResult proto.InternalMessageInfo

func (m *ReqReportDownloadResult) GetIsPP() bool {
	if m != nil {
		return m.IsPP
	}
	return false
}

func (m *ReqReportDownloadResult) GetSliceInfo() *DownloadSliceInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

func (m *ReqReportDownloadResult) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqReportDownloadResult) GetDownloaderP2PAddress() string {
	if m != nil {
		return m.DownloaderP2PAddress
	}
	return ""
}

func (m *ReqReportDownloadResult) GetDownloaderWalletAddress() string {
	if m != nil {
		return m.DownloaderWalletAddress
	}
	return ""
}

func (m *ReqReportDownloadResult) GetMyP2PAddress() string {
	if m != nil {
		return m.MyP2PAddress
	}
	return ""
}

func (m *ReqReportDownloadResult) GetMyWalletAddress() string {
	if m != nil {
		return m.MyWalletAddress
	}
	return ""
}

func (m *ReqReportDownloadResult) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ReqReportDownloadResult) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type RspReportDownloadResult struct {
	Result               *Result            `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	SliceInfo            *DownloadSliceInfo `protobuf:"bytes,2,opt,name=slice_info,json=sliceInfo,proto3" json:"slice_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RspReportDownloadResult) Reset()         { *m = RspReportDownloadResult{} }
func (m *RspReportDownloadResult) String() string { return proto.CompactTextString(m) }
func (*RspReportDownloadResult) ProtoMessage()    {}
func (*RspReportDownloadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{27}
}

func (m *RspReportDownloadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspReportDownloadResult.Unmarshal(m, b)
}
func (m *RspReportDownloadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspReportDownloadResult.Marshal(b, m, deterministic)
}
func (m *RspReportDownloadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspReportDownloadResult.Merge(m, src)
}
func (m *RspReportDownloadResult) XXX_Size() int {
	return xxx_messageInfo_RspReportDownloadResult.Size(m)
}
func (m *RspReportDownloadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RspReportDownloadResult.DiscardUnknown(m)
}

var xxx_messageInfo_RspReportDownloadResult proto.InternalMessageInfo

func (m *RspReportDownloadResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspReportDownloadResult) GetSliceInfo() *DownloadSliceInfo {
	if m != nil {
		return m.SliceInfo
	}
	return nil
}

type ReqReportTaskBP struct {
	TaskId               string      `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Reporter             *PPBaseInfo `protobuf:"bytes,2,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Traffic              uint64      `protobuf:"varint,3,opt,name=traffic,proto3" json:"traffic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqReportTaskBP) Reset()         { *m = ReqReportTaskBP{} }
func (m *ReqReportTaskBP) String() string { return proto.CompactTextString(m) }
func (*ReqReportTaskBP) ProtoMessage()    {}
func (*ReqReportTaskBP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{28}
}

func (m *ReqReportTaskBP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqReportTaskBP.Unmarshal(m, b)
}
func (m *ReqReportTaskBP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqReportTaskBP.Marshal(b, m, deterministic)
}
func (m *ReqReportTaskBP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqReportTaskBP.Merge(m, src)
}
func (m *ReqReportTaskBP) XXX_Size() int {
	return xxx_messageInfo_ReqReportTaskBP.Size(m)
}
func (m *ReqReportTaskBP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqReportTaskBP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqReportTaskBP proto.InternalMessageInfo

func (m *ReqReportTaskBP) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqReportTaskBP) GetReporter() *PPBaseInfo {
	if m != nil {
		return m.Reporter
	}
	return nil
}

func (m *ReqReportTaskBP) GetTraffic() uint64 {
	if m != nil {
		return m.Traffic
	}
	return 0
}

type ReqRegisterNewPP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	DiskSize             uint64   `protobuf:"varint,3,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	MemorySize           uint64   `protobuf:"varint,4,opt,name=memory_size,json=memorySize,proto3" json:"memory_size,omitempty"`
	OsAndVer             string   `protobuf:"bytes,5,opt,name=os_and_ver,json=osAndVer,proto3" json:"os_and_ver,omitempty"`
	CpuInfo              string   `protobuf:"bytes,6,opt,name=cpu_info,json=cpuInfo,proto3" json:"cpu_info,omitempty"`
	MacAddress           string   `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Version              uint32   `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	PubKey               []byte   `protobuf:"bytes,9,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Sign                 []byte   `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRegisterNewPP) Reset()         { *m = ReqRegisterNewPP{} }
func (m *ReqRegisterNewPP) String() string { return proto.CompactTextString(m) }
func (*ReqRegisterNewPP) ProtoMessage()    {}
func (*ReqRegisterNewPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{29}
}

func (m *ReqRegisterNewPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRegisterNewPP.Unmarshal(m, b)
}
func (m *ReqRegisterNewPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRegisterNewPP.Marshal(b, m, deterministic)
}
func (m *ReqRegisterNewPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRegisterNewPP.Merge(m, src)
}
func (m *ReqRegisterNewPP) XXX_Size() int {
	return xxx_messageInfo_ReqRegisterNewPP.Size(m)
}
func (m *ReqRegisterNewPP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRegisterNewPP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRegisterNewPP proto.InternalMessageInfo

func (m *ReqRegisterNewPP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqRegisterNewPP) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqRegisterNewPP) GetDiskSize() uint64 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *ReqRegisterNewPP) GetMemorySize() uint64 {
	if m != nil {
		return m.MemorySize
	}
	return 0
}

func (m *ReqRegisterNewPP) GetOsAndVer() string {
	if m != nil {
		return m.OsAndVer
	}
	return ""
}

func (m *ReqRegisterNewPP) GetCpuInfo() string {
	if m != nil {
		return m.CpuInfo
	}
	return ""
}

func (m *ReqRegisterNewPP) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *ReqRegisterNewPP) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ReqRegisterNewPP) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ReqRegisterNewPP) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type RspRegisterNewPP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspRegisterNewPP) Reset()         { *m = RspRegisterNewPP{} }
func (m *RspRegisterNewPP) String() string { return proto.CompactTextString(m) }
func (*RspRegisterNewPP) ProtoMessage()    {}
func (*RspRegisterNewPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{30}
}

func (m *RspRegisterNewPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspRegisterNewPP.Unmarshal(m, b)
}
func (m *RspRegisterNewPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspRegisterNewPP.Marshal(b, m, deterministic)
}
func (m *RspRegisterNewPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspRegisterNewPP.Merge(m, src)
}
func (m *RspRegisterNewPP) XXX_Size() int {
	return xxx_messageInfo_RspRegisterNewPP.Size(m)
}
func (m *RspRegisterNewPP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspRegisterNewPP.DiscardUnknown(m)
}

var xxx_messageInfo_RspRegisterNewPP proto.InternalMessageInfo

func (m *RspRegisterNewPP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqActivatePP struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqActivatePP) Reset()         { *m = ReqActivatePP{} }
func (m *ReqActivatePP) String() string { return proto.CompactTextString(m) }
func (*ReqActivatePP) ProtoMessage()    {}
func (*ReqActivatePP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{31}
}

func (m *ReqActivatePP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqActivatePP.Unmarshal(m, b)
}
func (m *ReqActivatePP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqActivatePP.Marshal(b, m, deterministic)
}
func (m *ReqActivatePP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqActivatePP.Merge(m, src)
}
func (m *ReqActivatePP) XXX_Size() int {
	return xxx_messageInfo_ReqActivatePP.Size(m)
}
func (m *ReqActivatePP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqActivatePP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqActivatePP proto.InternalMessageInfo

func (m *ReqActivatePP) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *ReqActivatePP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

type RspActivatePP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ActivationState      uint32   `protobuf:"varint,2,opt,name=activation_state,json=activationState,proto3" json:"activation_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspActivatePP) Reset()         { *m = RspActivatePP{} }
func (m *RspActivatePP) String() string { return proto.CompactTextString(m) }
func (*RspActivatePP) ProtoMessage()    {}
func (*RspActivatePP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{32}
}

func (m *RspActivatePP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspActivatePP.Unmarshal(m, b)
}
func (m *RspActivatePP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspActivatePP.Marshal(b, m, deterministic)
}
func (m *RspActivatePP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspActivatePP.Merge(m, src)
}
func (m *RspActivatePP) XXX_Size() int {
	return xxx_messageInfo_RspActivatePP.Size(m)
}
func (m *RspActivatePP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspActivatePP.DiscardUnknown(m)
}

var xxx_messageInfo_RspActivatePP proto.InternalMessageInfo

func (m *RspActivatePP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspActivatePP) GetActivationState() uint32 {
	if m != nil {
		return m.ActivationState
	}
	return 0
}

type ReqActivatedPP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	P2PPubkey            string   `protobuf:"bytes,2,opt,name=p2p_pubkey,json=p2pPubkey,proto3" json:"p2p_pubkey,omitempty"`
	OzoneLimitChanges    string   `protobuf:"bytes,3,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqActivatedPP) Reset()         { *m = ReqActivatedPP{} }
func (m *ReqActivatedPP) String() string { return proto.CompactTextString(m) }
func (*ReqActivatedPP) ProtoMessage()    {}
func (*ReqActivatedPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{33}
}

func (m *ReqActivatedPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqActivatedPP.Unmarshal(m, b)
}
func (m *ReqActivatedPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqActivatedPP.Marshal(b, m, deterministic)
}
func (m *ReqActivatedPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqActivatedPP.Merge(m, src)
}
func (m *ReqActivatedPP) XXX_Size() int {
	return xxx_messageInfo_ReqActivatedPP.Size(m)
}
func (m *ReqActivatedPP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqActivatedPP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqActivatedPP proto.InternalMessageInfo

func (m *ReqActivatedPP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqActivatedPP) GetP2PPubkey() string {
	if m != nil {
		return m.P2PPubkey
	}
	return ""
}

func (m *ReqActivatedPP) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

type ReqActivatedSP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	OzoneLimitChanges    string   `protobuf:"bytes,2,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqActivatedSP) Reset()         { *m = ReqActivatedSP{} }
func (m *ReqActivatedSP) String() string { return proto.CompactTextString(m) }
func (*ReqActivatedSP) ProtoMessage()    {}
func (*ReqActivatedSP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{34}
}

func (m *ReqActivatedSP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqActivatedSP.Unmarshal(m, b)
}
func (m *ReqActivatedSP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqActivatedSP.Marshal(b, m, deterministic)
}
func (m *ReqActivatedSP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqActivatedSP.Merge(m, src)
}
func (m *ReqActivatedSP) XXX_Size() int {
	return xxx_messageInfo_ReqActivatedSP.Size(m)
}
func (m *ReqActivatedSP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqActivatedSP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqActivatedSP proto.InternalMessageInfo

func (m *ReqActivatedSP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqActivatedSP) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

type RspActivatedPP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspActivatedPP) Reset()         { *m = RspActivatedPP{} }
func (m *RspActivatedPP) String() string { return proto.CompactTextString(m) }
func (*RspActivatedPP) ProtoMessage()    {}
func (*RspActivatedPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{35}
}

func (m *RspActivatedPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspActivatedPP.Unmarshal(m, b)
}
func (m *RspActivatedPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspActivatedPP.Marshal(b, m, deterministic)
}
func (m *RspActivatedPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspActivatedPP.Merge(m, src)
}
func (m *RspActivatedPP) XXX_Size() int {
	return xxx_messageInfo_RspActivatedPP.Size(m)
}
func (m *RspActivatedPP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspActivatedPP.DiscardUnknown(m)
}

var xxx_messageInfo_RspActivatedPP proto.InternalMessageInfo

func (m *RspActivatedPP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDeactivatePP struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeactivatePP) Reset()         { *m = ReqDeactivatePP{} }
func (m *ReqDeactivatePP) String() string { return proto.CompactTextString(m) }
func (*ReqDeactivatePP) ProtoMessage()    {}
func (*ReqDeactivatePP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{36}
}

func (m *ReqDeactivatePP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeactivatePP.Unmarshal(m, b)
}
func (m *ReqDeactivatePP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeactivatePP.Marshal(b, m, deterministic)
}
func (m *ReqDeactivatePP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeactivatePP.Merge(m, src)
}
func (m *ReqDeactivatePP) XXX_Size() int {
	return xxx_messageInfo_ReqDeactivatePP.Size(m)
}
func (m *ReqDeactivatePP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeactivatePP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeactivatePP proto.InternalMessageInfo

func (m *ReqDeactivatePP) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *ReqDeactivatePP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

type RspDeactivatePP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeactivatePP) Reset()         { *m = RspDeactivatePP{} }
func (m *RspDeactivatePP) String() string { return proto.CompactTextString(m) }
func (*RspDeactivatePP) ProtoMessage()    {}
func (*RspDeactivatePP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{37}
}

func (m *RspDeactivatePP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeactivatePP.Unmarshal(m, b)
}
func (m *RspDeactivatePP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeactivatePP.Marshal(b, m, deterministic)
}
func (m *RspDeactivatePP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeactivatePP.Merge(m, src)
}
func (m *RspDeactivatePP) XXX_Size() int {
	return xxx_messageInfo_RspDeactivatePP.Size(m)
}
func (m *RspDeactivatePP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeactivatePP.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeactivatePP proto.InternalMessageInfo

func (m *RspDeactivatePP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqUnbondingPP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	OzoneLimitChanges    string   `protobuf:"bytes,2,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	UnbondingMatureTime  string   `protobuf:"bytes,3,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUnbondingPP) Reset()         { *m = ReqUnbondingPP{} }
func (m *ReqUnbondingPP) String() string { return proto.CompactTextString(m) }
func (*ReqUnbondingPP) ProtoMessage()    {}
func (*ReqUnbondingPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{38}
}

func (m *ReqUnbondingPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUnbondingPP.Unmarshal(m, b)
}
func (m *ReqUnbondingPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUnbondingPP.Marshal(b, m, deterministic)
}
func (m *ReqUnbondingPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUnbondingPP.Merge(m, src)
}
func (m *ReqUnbondingPP) XXX_Size() int {
	return xxx_messageInfo_ReqUnbondingPP.Size(m)
}
func (m *ReqUnbondingPP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUnbondingPP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUnbondingPP proto.InternalMessageInfo

func (m *ReqUnbondingPP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqUnbondingPP) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *ReqUnbondingPP) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

type RspUnbondingPP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspUnbondingPP) Reset()         { *m = RspUnbondingPP{} }
func (m *RspUnbondingPP) String() string { return proto.CompactTextString(m) }
func (*RspUnbondingPP) ProtoMessage()    {}
func (*RspUnbondingPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{39}
}

func (m *RspUnbondingPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspUnbondingPP.Unmarshal(m, b)
}
func (m *RspUnbondingPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspUnbondingPP.Marshal(b, m, deterministic)
}
func (m *RspUnbondingPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspUnbondingPP.Merge(m, src)
}
func (m *RspUnbondingPP) XXX_Size() int {
	return xxx_messageInfo_RspUnbondingPP.Size(m)
}
func (m *RspUnbondingPP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspUnbondingPP.DiscardUnknown(m)
}

var xxx_messageInfo_RspUnbondingPP proto.InternalMessageInfo

func (m *RspUnbondingPP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDeactivatedPP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeactivatedPP) Reset()         { *m = ReqDeactivatedPP{} }
func (m *ReqDeactivatedPP) String() string { return proto.CompactTextString(m) }
func (*ReqDeactivatedPP) ProtoMessage()    {}
func (*ReqDeactivatedPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{40}
}

func (m *ReqDeactivatedPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeactivatedPP.Unmarshal(m, b)
}
func (m *ReqDeactivatedPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeactivatedPP.Marshal(b, m, deterministic)
}
func (m *ReqDeactivatedPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeactivatedPP.Merge(m, src)
}
func (m *ReqDeactivatedPP) XXX_Size() int {
	return xxx_messageInfo_ReqDeactivatedPP.Size(m)
}
func (m *ReqDeactivatedPP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeactivatedPP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeactivatedPP proto.InternalMessageInfo

func (m *ReqDeactivatedPP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

type RspDeactivatedPP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeactivatedPP) Reset()         { *m = RspDeactivatedPP{} }
func (m *RspDeactivatedPP) String() string { return proto.CompactTextString(m) }
func (*RspDeactivatedPP) ProtoMessage()    {}
func (*RspDeactivatedPP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{41}
}

func (m *RspDeactivatedPP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeactivatedPP.Unmarshal(m, b)
}
func (m *RspDeactivatedPP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeactivatedPP.Marshal(b, m, deterministic)
}
func (m *RspDeactivatedPP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeactivatedPP.Merge(m, src)
}
func (m *RspDeactivatedPP) XXX_Size() int {
	return xxx_messageInfo_RspDeactivatedPP.Size(m)
}
func (m *RspDeactivatedPP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeactivatedPP.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeactivatedPP proto.InternalMessageInfo

func (m *RspDeactivatedPP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqUnbondingSP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	OzoneLimitChanges    string   `protobuf:"bytes,2,opt,name=ozone_limit_changes,json=ozoneLimitChanges,proto3" json:"ozone_limit_changes,omitempty"`
	UnbondingMatureTime  string   `protobuf:"bytes,3,opt,name=unbonding_mature_time,json=unbondingMatureTime,proto3" json:"unbonding_mature_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqUnbondingSP) Reset()         { *m = ReqUnbondingSP{} }
func (m *ReqUnbondingSP) String() string { return proto.CompactTextString(m) }
func (*ReqUnbondingSP) ProtoMessage()    {}
func (*ReqUnbondingSP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{42}
}

func (m *ReqUnbondingSP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqUnbondingSP.Unmarshal(m, b)
}
func (m *ReqUnbondingSP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqUnbondingSP.Marshal(b, m, deterministic)
}
func (m *ReqUnbondingSP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqUnbondingSP.Merge(m, src)
}
func (m *ReqUnbondingSP) XXX_Size() int {
	return xxx_messageInfo_ReqUnbondingSP.Size(m)
}
func (m *ReqUnbondingSP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqUnbondingSP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqUnbondingSP proto.InternalMessageInfo

func (m *ReqUnbondingSP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqUnbondingSP) GetOzoneLimitChanges() string {
	if m != nil {
		return m.OzoneLimitChanges
	}
	return ""
}

func (m *ReqUnbondingSP) GetUnbondingMatureTime() string {
	if m != nil {
		return m.UnbondingMatureTime
	}
	return ""
}

type RspUnbondingSP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspUnbondingSP) Reset()         { *m = RspUnbondingSP{} }
func (m *RspUnbondingSP) String() string { return proto.CompactTextString(m) }
func (*RspUnbondingSP) ProtoMessage()    {}
func (*RspUnbondingSP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{43}
}

func (m *RspUnbondingSP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspUnbondingSP.Unmarshal(m, b)
}
func (m *RspUnbondingSP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspUnbondingSP.Marshal(b, m, deterministic)
}
func (m *RspUnbondingSP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspUnbondingSP.Merge(m, src)
}
func (m *RspUnbondingSP) XXX_Size() int {
	return xxx_messageInfo_RspUnbondingSP.Size(m)
}
func (m *RspUnbondingSP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspUnbondingSP.DiscardUnknown(m)
}

var xxx_messageInfo_RspUnbondingSP proto.InternalMessageInfo

func (m *RspUnbondingSP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDeactivatedSP struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeactivatedSP) Reset()         { *m = ReqDeactivatedSP{} }
func (m *ReqDeactivatedSP) String() string { return proto.CompactTextString(m) }
func (*ReqDeactivatedSP) ProtoMessage()    {}
func (*ReqDeactivatedSP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{44}
}

func (m *ReqDeactivatedSP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeactivatedSP.Unmarshal(m, b)
}
func (m *ReqDeactivatedSP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeactivatedSP.Marshal(b, m, deterministic)
}
func (m *ReqDeactivatedSP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeactivatedSP.Merge(m, src)
}
func (m *ReqDeactivatedSP) XXX_Size() int {
	return xxx_messageInfo_ReqDeactivatedSP.Size(m)
}
func (m *ReqDeactivatedSP) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeactivatedSP.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeactivatedSP proto.InternalMessageInfo

func (m *ReqDeactivatedSP) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

type RspDeactivatedSP struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeactivatedSP) Reset()         { *m = RspDeactivatedSP{} }
func (m *RspDeactivatedSP) String() string { return proto.CompactTextString(m) }
func (*RspDeactivatedSP) ProtoMessage()    {}
func (*RspDeactivatedSP) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{45}
}

func (m *RspDeactivatedSP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeactivatedSP.Unmarshal(m, b)
}
func (m *RspDeactivatedSP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeactivatedSP.Marshal(b, m, deterministic)
}
func (m *RspDeactivatedSP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeactivatedSP.Merge(m, src)
}
func (m *RspDeactivatedSP) XXX_Size() int {
	return xxx_messageInfo_RspDeactivatedSP.Size(m)
}
func (m *RspDeactivatedSP) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeactivatedSP.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeactivatedSP proto.InternalMessageInfo

func (m *RspDeactivatedSP) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqPrepay struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPrepay) Reset()         { *m = ReqPrepay{} }
func (m *ReqPrepay) String() string { return proto.CompactTextString(m) }
func (*ReqPrepay) ProtoMessage()    {}
func (*ReqPrepay) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{46}
}

func (m *ReqPrepay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPrepay.Unmarshal(m, b)
}
func (m *ReqPrepay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPrepay.Marshal(b, m, deterministic)
}
func (m *ReqPrepay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPrepay.Merge(m, src)
}
func (m *ReqPrepay) XXX_Size() int {
	return xxx_messageInfo_ReqPrepay.Size(m)
}
func (m *ReqPrepay) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPrepay.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPrepay proto.InternalMessageInfo

func (m *ReqPrepay) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *ReqPrepay) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqPrepay) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

type RspPrepay struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspPrepay) Reset()         { *m = RspPrepay{} }
func (m *RspPrepay) String() string { return proto.CompactTextString(m) }
func (*RspPrepay) ProtoMessage()    {}
func (*RspPrepay) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{47}
}

func (m *RspPrepay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspPrepay.Unmarshal(m, b)
}
func (m *RspPrepay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspPrepay.Marshal(b, m, deterministic)
}
func (m *RspPrepay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspPrepay.Merge(m, src)
}
func (m *RspPrepay) XXX_Size() int {
	return xxx_messageInfo_RspPrepay.Size(m)
}
func (m *RspPrepay) XXX_DiscardUnknown() {
	xxx_messageInfo_RspPrepay.DiscardUnknown(m)
}

var xxx_messageInfo_RspPrepay proto.InternalMessageInfo

func (m *RspPrepay) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqPrepaid struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	PurchasedUoz         string   `protobuf:"bytes,2,opt,name=purchased_uoz,json=purchasedUoz,proto3" json:"purchased_uoz,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqPrepaid) Reset()         { *m = ReqPrepaid{} }
func (m *ReqPrepaid) String() string { return proto.CompactTextString(m) }
func (*ReqPrepaid) ProtoMessage()    {}
func (*ReqPrepaid) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{48}
}

func (m *ReqPrepaid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqPrepaid.Unmarshal(m, b)
}
func (m *ReqPrepaid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqPrepaid.Marshal(b, m, deterministic)
}
func (m *ReqPrepaid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqPrepaid.Merge(m, src)
}
func (m *ReqPrepaid) XXX_Size() int {
	return xxx_messageInfo_ReqPrepaid.Size(m)
}
func (m *ReqPrepaid) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqPrepaid.DiscardUnknown(m)
}

var xxx_messageInfo_ReqPrepaid proto.InternalMessageInfo

func (m *ReqPrepaid) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqPrepaid) GetPurchasedUoz() string {
	if m != nil {
		return m.PurchasedUoz
	}
	return ""
}

type RspPrepaid struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspPrepaid) Reset()         { *m = RspPrepaid{} }
func (m *RspPrepaid) String() string { return proto.CompactTextString(m) }
func (*RspPrepaid) ProtoMessage()    {}
func (*RspPrepaid) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{49}
}

func (m *RspPrepaid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspPrepaid.Unmarshal(m, b)
}
func (m *RspPrepaid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspPrepaid.Marshal(b, m, deterministic)
}
func (m *RspPrepaid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspPrepaid.Merge(m, src)
}
func (m *RspPrepaid) XXX_Size() int {
	return xxx_messageInfo_RspPrepaid.Size(m)
}
func (m *RspPrepaid) XXX_DiscardUnknown() {
	xxx_messageInfo_RspPrepaid.DiscardUnknown(m)
}

var xxx_messageInfo_RspPrepaid proto.InternalMessageInfo

func (m *RspPrepaid) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDeleteFile struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string   `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	Sign                 []byte   `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	ReqId                string   `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteFile) Reset()         { *m = ReqDeleteFile{} }
func (m *ReqDeleteFile) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteFile) ProtoMessage()    {}
func (*ReqDeleteFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{50}
}

func (m *ReqDeleteFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteFile.Unmarshal(m, b)
}
func (m *ReqDeleteFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteFile.Marshal(b, m, deterministic)
}
func (m *ReqDeleteFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteFile.Merge(m, src)
}
func (m *ReqDeleteFile) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteFile.Size(m)
}
func (m *ReqDeleteFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteFile proto.InternalMessageInfo

func (m *ReqDeleteFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDeleteFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDeleteFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqDeleteFile) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *ReqDeleteFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspDeleteFile struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	FileHash             string   `protobuf:"bytes,3,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	Result               *Result  `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string   `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeleteFile) Reset()         { *m = RspDeleteFile{} }
func (m *RspDeleteFile) String() string { return proto.CompactTextString(m) }
func (*RspDeleteFile) ProtoMessage()    {}
func (*RspDeleteFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{51}
}

func (m *RspDeleteFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeleteFile.Unmarshal(m, b)
}
func (m *RspDeleteFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeleteFile.Marshal(b, m, deterministic)
}
func (m *RspDeleteFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeleteFile.Merge(m, src)
}
func (m *RspDeleteFile) XXX_Size() int {
	return xxx_messageInfo_RspDeleteFile.Size(m)
}
func (m *RspDeleteFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeleteFile.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeleteFile proto.InternalMessageInfo

func (m *RspDeleteFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDeleteFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDeleteFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *RspDeleteFile) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspDeleteFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

// file transfer
// SP notify new PP to get file from storing PP，slice info are included
// new pp transfer to old pp, slice infos are not included,
type ReqTransferNotice struct {
	SliceStorageInfo     *SliceStorageInfo `protobuf:"bytes,1,opt,name=slice_storage_info,json=sliceStorageInfo,proto3" json:"slice_storage_info,omitempty"`
	TransferCer          string            `protobuf:"bytes,2,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	FromSp               bool              `protobuf:"varint,3,opt,name=from_sp,json=fromSp,proto3" json:"from_sp,omitempty"`
	StoragePpInfo        *PPBaseInfo       `protobuf:"bytes,4,opt,name=storage_pp_info,json=storagePpInfo,proto3" json:"storage_pp_info,omitempty"`
	DeleteOrigin         bool              `protobuf:"varint,5,opt,name=deleteOrigin,proto3" json:"deleteOrigin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReqTransferNotice) Reset()         { *m = ReqTransferNotice{} }
func (m *ReqTransferNotice) String() string { return proto.CompactTextString(m) }
func (*ReqTransferNotice) ProtoMessage()    {}
func (*ReqTransferNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{52}
}

func (m *ReqTransferNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransferNotice.Unmarshal(m, b)
}
func (m *ReqTransferNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransferNotice.Marshal(b, m, deterministic)
}
func (m *ReqTransferNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransferNotice.Merge(m, src)
}
func (m *ReqTransferNotice) XXX_Size() int {
	return xxx_messageInfo_ReqTransferNotice.Size(m)
}
func (m *ReqTransferNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransferNotice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransferNotice proto.InternalMessageInfo

func (m *ReqTransferNotice) GetSliceStorageInfo() *SliceStorageInfo {
	if m != nil {
		return m.SliceStorageInfo
	}
	return nil
}

func (m *ReqTransferNotice) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *ReqTransferNotice) GetFromSp() bool {
	if m != nil {
		return m.FromSp
	}
	return false
}

func (m *ReqTransferNotice) GetStoragePpInfo() *PPBaseInfo {
	if m != nil {
		return m.StoragePpInfo
	}
	return nil
}

func (m *ReqTransferNotice) GetDeleteOrigin() bool {
	if m != nil {
		return m.DeleteOrigin
	}
	return false
}

type RspTransferNotice struct {
	Result               *Result     `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TransferCer          string      `protobuf:"bytes,2,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	StoragePpInfo        *PPBaseInfo `protobuf:"bytes,3,opt,name=storage_pp_info,json=storagePpInfo,proto3" json:"storage_pp_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspTransferNotice) Reset()         { *m = RspTransferNotice{} }
func (m *RspTransferNotice) String() string { return proto.CompactTextString(m) }
func (*RspTransferNotice) ProtoMessage()    {}
func (*RspTransferNotice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{53}
}

func (m *RspTransferNotice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspTransferNotice.Unmarshal(m, b)
}
func (m *RspTransferNotice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspTransferNotice.Marshal(b, m, deterministic)
}
func (m *RspTransferNotice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspTransferNotice.Merge(m, src)
}
func (m *RspTransferNotice) XXX_Size() int {
	return xxx_messageInfo_RspTransferNotice.Size(m)
}
func (m *RspTransferNotice) XXX_DiscardUnknown() {
	xxx_messageInfo_RspTransferNotice.DiscardUnknown(m)
}

var xxx_messageInfo_RspTransferNotice proto.InternalMessageInfo

func (m *RspTransferNotice) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspTransferNotice) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *RspTransferNotice) GetStoragePpInfo() *PPBaseInfo {
	if m != nil {
		return m.StoragePpInfo
	}
	return nil
}

//  storagePP-SP
type ReqValidateTransferCer struct {
	TransferCer          string      `protobuf:"bytes,1,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	NewPp                *PPBaseInfo `protobuf:"bytes,2,opt,name=new_pp,json=newPp,proto3" json:"new_pp,omitempty"`
	OriginalPp           *PPBaseInfo `protobuf:"bytes,3,opt,name=original_pp,json=originalPp,proto3" json:"original_pp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqValidateTransferCer) Reset()         { *m = ReqValidateTransferCer{} }
func (m *ReqValidateTransferCer) String() string { return proto.CompactTextString(m) }
func (*ReqValidateTransferCer) ProtoMessage()    {}
func (*ReqValidateTransferCer) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{54}
}

func (m *ReqValidateTransferCer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqValidateTransferCer.Unmarshal(m, b)
}
func (m *ReqValidateTransferCer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqValidateTransferCer.Marshal(b, m, deterministic)
}
func (m *ReqValidateTransferCer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqValidateTransferCer.Merge(m, src)
}
func (m *ReqValidateTransferCer) XXX_Size() int {
	return xxx_messageInfo_ReqValidateTransferCer.Size(m)
}
func (m *ReqValidateTransferCer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqValidateTransferCer.DiscardUnknown(m)
}

var xxx_messageInfo_ReqValidateTransferCer proto.InternalMessageInfo

func (m *ReqValidateTransferCer) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *ReqValidateTransferCer) GetNewPp() *PPBaseInfo {
	if m != nil {
		return m.NewPp
	}
	return nil
}

func (m *ReqValidateTransferCer) GetOriginalPp() *PPBaseInfo {
	if m != nil {
		return m.OriginalPp
	}
	return nil
}

//  SP-PP PP-PP
type RspValidateTransferCer struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TransferCer          string   `protobuf:"bytes,2,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspValidateTransferCer) Reset()         { *m = RspValidateTransferCer{} }
func (m *RspValidateTransferCer) String() string { return proto.CompactTextString(m) }
func (*RspValidateTransferCer) ProtoMessage()    {}
func (*RspValidateTransferCer) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{55}
}

func (m *RspValidateTransferCer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspValidateTransferCer.Unmarshal(m, b)
}
func (m *RspValidateTransferCer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspValidateTransferCer.Marshal(b, m, deterministic)
}
func (m *RspValidateTransferCer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspValidateTransferCer.Merge(m, src)
}
func (m *RspValidateTransferCer) XXX_Size() int {
	return xxx_messageInfo_RspValidateTransferCer.Size(m)
}
func (m *RspValidateTransferCer) XXX_DiscardUnknown() {
	xxx_messageInfo_RspValidateTransferCer.DiscardUnknown(m)
}

var xxx_messageInfo_RspValidateTransferCer proto.InternalMessageInfo

func (m *RspValidateTransferCer) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspValidateTransferCer) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

type ReqTransferDownload struct {
	TransferCer          string   `protobuf:"bytes,1,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTransferDownload) Reset()         { *m = ReqTransferDownload{} }
func (m *ReqTransferDownload) String() string { return proto.CompactTextString(m) }
func (*ReqTransferDownload) ProtoMessage()    {}
func (*ReqTransferDownload) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{56}
}

func (m *ReqTransferDownload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransferDownload.Unmarshal(m, b)
}
func (m *ReqTransferDownload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransferDownload.Marshal(b, m, deterministic)
}
func (m *ReqTransferDownload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransferDownload.Merge(m, src)
}
func (m *ReqTransferDownload) XXX_Size() int {
	return xxx_messageInfo_ReqTransferDownload.Size(m)
}
func (m *ReqTransferDownload) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransferDownload.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransferDownload proto.InternalMessageInfo

func (m *ReqTransferDownload) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

type RspTransferDownload struct {
	TransferCer          string   `protobuf:"bytes,1,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	SliceSize            uint64   `protobuf:"varint,4,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspTransferDownload) Reset()         { *m = RspTransferDownload{} }
func (m *RspTransferDownload) String() string { return proto.CompactTextString(m) }
func (*RspTransferDownload) ProtoMessage()    {}
func (*RspTransferDownload) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{57}
}

func (m *RspTransferDownload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspTransferDownload.Unmarshal(m, b)
}
func (m *RspTransferDownload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspTransferDownload.Marshal(b, m, deterministic)
}
func (m *RspTransferDownload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspTransferDownload.Merge(m, src)
}
func (m *RspTransferDownload) XXX_Size() int {
	return xxx_messageInfo_RspTransferDownload.Size(m)
}
func (m *RspTransferDownload) XXX_DiscardUnknown() {
	xxx_messageInfo_RspTransferDownload.DiscardUnknown(m)
}

var xxx_messageInfo_RspTransferDownload proto.InternalMessageInfo

func (m *RspTransferDownload) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *RspTransferDownload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RspTransferDownload) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RspTransferDownload) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

func (m *RspTransferDownload) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type RspTransferDownloadResult struct {
	TransferCer          string   `protobuf:"bytes,1,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	Result               *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspTransferDownloadResult) Reset()         { *m = RspTransferDownloadResult{} }
func (m *RspTransferDownloadResult) String() string { return proto.CompactTextString(m) }
func (*RspTransferDownloadResult) ProtoMessage()    {}
func (*RspTransferDownloadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{58}
}

func (m *RspTransferDownloadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspTransferDownloadResult.Unmarshal(m, b)
}
func (m *RspTransferDownloadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspTransferDownloadResult.Marshal(b, m, deterministic)
}
func (m *RspTransferDownloadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspTransferDownloadResult.Merge(m, src)
}
func (m *RspTransferDownloadResult) XXX_Size() int {
	return xxx_messageInfo_RspTransferDownloadResult.Size(m)
}
func (m *RspTransferDownloadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RspTransferDownloadResult.DiscardUnknown(m)
}

var xxx_messageInfo_RspTransferDownloadResult proto.InternalMessageInfo

func (m *RspTransferDownloadResult) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *RspTransferDownloadResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqReportTransferResult struct {
	TransferCer          string      `protobuf:"bytes,1,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	NewPp                *PPBaseInfo `protobuf:"bytes,2,opt,name=new_pp,json=newPp,proto3" json:"new_pp,omitempty"`
	Result               *Result     `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	IsNew                bool        `protobuf:"varint,4,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	OriginDeleted        bool        `protobuf:"varint,5,opt,name=origin_deleted,json=originDeleted,proto3" json:"origin_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqReportTransferResult) Reset()         { *m = ReqReportTransferResult{} }
func (m *ReqReportTransferResult) String() string { return proto.CompactTextString(m) }
func (*ReqReportTransferResult) ProtoMessage()    {}
func (*ReqReportTransferResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{59}
}

func (m *ReqReportTransferResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqReportTransferResult.Unmarshal(m, b)
}
func (m *ReqReportTransferResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqReportTransferResult.Marshal(b, m, deterministic)
}
func (m *ReqReportTransferResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqReportTransferResult.Merge(m, src)
}
func (m *ReqReportTransferResult) XXX_Size() int {
	return xxx_messageInfo_ReqReportTransferResult.Size(m)
}
func (m *ReqReportTransferResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqReportTransferResult.DiscardUnknown(m)
}

var xxx_messageInfo_ReqReportTransferResult proto.InternalMessageInfo

func (m *ReqReportTransferResult) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

func (m *ReqReportTransferResult) GetNewPp() *PPBaseInfo {
	if m != nil {
		return m.NewPp
	}
	return nil
}

func (m *ReqReportTransferResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ReqReportTransferResult) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *ReqReportTransferResult) GetOriginDeleted() bool {
	if m != nil {
		return m.OriginDeleted
	}
	return false
}

type RspReportTransferResult struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	TransferCer          string   `protobuf:"bytes,2,opt,name=transfer_cer,json=transferCer,proto3" json:"transfer_cer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspReportTransferResult) Reset()         { *m = RspReportTransferResult{} }
func (m *RspReportTransferResult) String() string { return proto.CompactTextString(m) }
func (*RspReportTransferResult) ProtoMessage()    {}
func (*RspReportTransferResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{60}
}

func (m *RspReportTransferResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspReportTransferResult.Unmarshal(m, b)
}
func (m *RspReportTransferResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspReportTransferResult.Marshal(b, m, deterministic)
}
func (m *RspReportTransferResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspReportTransferResult.Merge(m, src)
}
func (m *RspReportTransferResult) XXX_Size() int {
	return xxx_messageInfo_RspReportTransferResult.Size(m)
}
func (m *RspReportTransferResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RspReportTransferResult.DiscardUnknown(m)
}

var xxx_messageInfo_RspReportTransferResult proto.InternalMessageInfo

func (m *RspReportTransferResult) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspReportTransferResult) GetTransferCer() string {
	if m != nil {
		return m.TransferCer
	}
	return ""
}

// sp - pp get storage info
type ReqGetHDInfo struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetHDInfo) Reset()         { *m = ReqGetHDInfo{} }
func (m *ReqGetHDInfo) String() string { return proto.CompactTextString(m) }
func (*ReqGetHDInfo) ProtoMessage()    {}
func (*ReqGetHDInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{61}
}

func (m *ReqGetHDInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetHDInfo.Unmarshal(m, b)
}
func (m *ReqGetHDInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetHDInfo.Marshal(b, m, deterministic)
}
func (m *ReqGetHDInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetHDInfo.Merge(m, src)
}
func (m *ReqGetHDInfo) XXX_Size() int {
	return xxx_messageInfo_ReqGetHDInfo.Size(m)
}
func (m *ReqGetHDInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetHDInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetHDInfo proto.InternalMessageInfo

func (m *ReqGetHDInfo) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqGetHDInfo) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

type RspGetHDInfo struct {
	DiskSize             uint64   `protobuf:"varint,1,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	DiskFree             uint64   `protobuf:"varint,2,opt,name=disk_free,json=diskFree,proto3" json:"disk_free,omitempty"`
	P2PAddress           string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspGetHDInfo) Reset()         { *m = RspGetHDInfo{} }
func (m *RspGetHDInfo) String() string { return proto.CompactTextString(m) }
func (*RspGetHDInfo) ProtoMessage()    {}
func (*RspGetHDInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{62}
}

func (m *RspGetHDInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGetHDInfo.Unmarshal(m, b)
}
func (m *RspGetHDInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGetHDInfo.Marshal(b, m, deterministic)
}
func (m *RspGetHDInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGetHDInfo.Merge(m, src)
}
func (m *RspGetHDInfo) XXX_Size() int {
	return xxx_messageInfo_RspGetHDInfo.Size(m)
}
func (m *RspGetHDInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGetHDInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspGetHDInfo proto.InternalMessageInfo

func (m *RspGetHDInfo) GetDiskSize() uint64 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func (m *RspGetHDInfo) GetDiskFree() uint64 {
	if m != nil {
		return m.DiskFree
	}
	return 0
}

func (m *RspGetHDInfo) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspGetHDInfo) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

//
type ReqSendChatMessages struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type                 MsgType  `protobuf:"varint,3,opt,name=type,proto3,enum=protos.MsgType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqSendChatMessages) Reset()         { *m = ReqSendChatMessages{} }
func (m *ReqSendChatMessages) String() string { return proto.CompactTextString(m) }
func (*ReqSendChatMessages) ProtoMessage()    {}
func (*ReqSendChatMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{63}
}

func (m *ReqSendChatMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSendChatMessages.Unmarshal(m, b)
}
func (m *ReqSendChatMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSendChatMessages.Marshal(b, m, deterministic)
}
func (m *ReqSendChatMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSendChatMessages.Merge(m, src)
}
func (m *ReqSendChatMessages) XXX_Size() int {
	return xxx_messageInfo_ReqSendChatMessages.Size(m)
}
func (m *ReqSendChatMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSendChatMessages.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSendChatMessages proto.InternalMessageInfo

func (m *ReqSendChatMessages) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqSendChatMessages) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReqSendChatMessages) GetType() MsgType {
	if m != nil {
		return m.Type
	}
	return MsgType_DEFAULT
}

type RspSendChatMessages struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspSendChatMessages) Reset()         { *m = RspSendChatMessages{} }
func (m *RspSendChatMessages) String() string { return proto.CompactTextString(m) }
func (*RspSendChatMessages) ProtoMessage()    {}
func (*RspSendChatMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{64}
}

func (m *RspSendChatMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspSendChatMessages.Unmarshal(m, b)
}
func (m *RspSendChatMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspSendChatMessages.Marshal(b, m, deterministic)
}
func (m *RspSendChatMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspSendChatMessages.Merge(m, src)
}
func (m *RspSendChatMessages) XXX_Size() int {
	return xxx_messageInfo_RspSendChatMessages.Size(m)
}
func (m *RspSendChatMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_RspSendChatMessages.DiscardUnknown(m)
}

var xxx_messageInfo_RspSendChatMessages proto.InternalMessageInfo

func (m *RspSendChatMessages) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// sp
type ReqDeleteSlice struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	SliceHash            string   `protobuf:"bytes,2,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteSlice) Reset()         { *m = ReqDeleteSlice{} }
func (m *ReqDeleteSlice) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteSlice) ProtoMessage()    {}
func (*ReqDeleteSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{65}
}

func (m *ReqDeleteSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteSlice.Unmarshal(m, b)
}
func (m *ReqDeleteSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteSlice.Marshal(b, m, deterministic)
}
func (m *ReqDeleteSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteSlice.Merge(m, src)
}
func (m *ReqDeleteSlice) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteSlice.Size(m)
}
func (m *ReqDeleteSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteSlice.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteSlice proto.InternalMessageInfo

func (m *ReqDeleteSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDeleteSlice) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

type RspDeleteSlice struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	SliceHash            string   `protobuf:"bytes,2,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	Result               *Result  `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeleteSlice) Reset()         { *m = RspDeleteSlice{} }
func (m *RspDeleteSlice) String() string { return proto.CompactTextString(m) }
func (*RspDeleteSlice) ProtoMessage()    {}
func (*RspDeleteSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{66}
}

func (m *RspDeleteSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeleteSlice.Unmarshal(m, b)
}
func (m *RspDeleteSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeleteSlice.Marshal(b, m, deterministic)
}
func (m *RspDeleteSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeleteSlice.Merge(m, src)
}
func (m *RspDeleteSlice) XXX_Size() int {
	return xxx_messageInfo_RspDeleteSlice.Size(m)
}
func (m *RspDeleteSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeleteSlice.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeleteSlice proto.InternalMessageInfo

func (m *RspDeleteSlice) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDeleteSlice) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

func (m *RspDeleteSlice) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

//
type ReqMakeDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Directory            string   `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqMakeDirectory) Reset()         { *m = ReqMakeDirectory{} }
func (m *ReqMakeDirectory) String() string { return proto.CompactTextString(m) }
func (*ReqMakeDirectory) ProtoMessage()    {}
func (*ReqMakeDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{67}
}

func (m *ReqMakeDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqMakeDirectory.Unmarshal(m, b)
}
func (m *ReqMakeDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqMakeDirectory.Marshal(b, m, deterministic)
}
func (m *ReqMakeDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqMakeDirectory.Merge(m, src)
}
func (m *ReqMakeDirectory) XXX_Size() int {
	return xxx_messageInfo_ReqMakeDirectory.Size(m)
}
func (m *ReqMakeDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqMakeDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_ReqMakeDirectory proto.InternalMessageInfo

func (m *ReqMakeDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqMakeDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqMakeDirectory) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *ReqMakeDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspMakeDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspMakeDirectory) Reset()         { *m = RspMakeDirectory{} }
func (m *RspMakeDirectory) String() string { return proto.CompactTextString(m) }
func (*RspMakeDirectory) ProtoMessage()    {}
func (*RspMakeDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{68}
}

func (m *RspMakeDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspMakeDirectory.Unmarshal(m, b)
}
func (m *RspMakeDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspMakeDirectory.Marshal(b, m, deterministic)
}
func (m *RspMakeDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspMakeDirectory.Merge(m, src)
}
func (m *RspMakeDirectory) XXX_Size() int {
	return xxx_messageInfo_RspMakeDirectory.Size(m)
}
func (m *RspMakeDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_RspMakeDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_RspMakeDirectory proto.InternalMessageInfo

func (m *RspMakeDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspMakeDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspMakeDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspMakeDirectory) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqRemoveDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Directory            string   `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRemoveDirectory) Reset()         { *m = ReqRemoveDirectory{} }
func (m *ReqRemoveDirectory) String() string { return proto.CompactTextString(m) }
func (*ReqRemoveDirectory) ProtoMessage()    {}
func (*ReqRemoveDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{69}
}

func (m *ReqRemoveDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRemoveDirectory.Unmarshal(m, b)
}
func (m *ReqRemoveDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRemoveDirectory.Marshal(b, m, deterministic)
}
func (m *ReqRemoveDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRemoveDirectory.Merge(m, src)
}
func (m *ReqRemoveDirectory) XXX_Size() int {
	return xxx_messageInfo_ReqRemoveDirectory.Size(m)
}
func (m *ReqRemoveDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRemoveDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRemoveDirectory proto.InternalMessageInfo

func (m *ReqRemoveDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqRemoveDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqRemoveDirectory) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *ReqRemoveDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspRemoveDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspRemoveDirectory) Reset()         { *m = RspRemoveDirectory{} }
func (m *RspRemoveDirectory) String() string { return proto.CompactTextString(m) }
func (*RspRemoveDirectory) ProtoMessage()    {}
func (*RspRemoveDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{70}
}

func (m *RspRemoveDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspRemoveDirectory.Unmarshal(m, b)
}
func (m *RspRemoveDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspRemoveDirectory.Marshal(b, m, deterministic)
}
func (m *RspRemoveDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspRemoveDirectory.Merge(m, src)
}
func (m *RspRemoveDirectory) XXX_Size() int {
	return xxx_messageInfo_RspRemoveDirectory.Size(m)
}
func (m *RspRemoveDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_RspRemoveDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_RspRemoveDirectory proto.InternalMessageInfo

func (m *RspRemoveDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspRemoveDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspRemoveDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspRemoveDirectory) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqMoveFileDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	DirectoryTarget      string   `protobuf:"bytes,4,opt,name=directory_target,json=directoryTarget,proto3" json:"directory_target,omitempty"`
	DirectoryOriginal    string   `protobuf:"bytes,5,opt,name=directory_original,json=directoryOriginal,proto3" json:"directory_original,omitempty"`
	FileHash             string   `protobuf:"bytes,6,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqMoveFileDirectory) Reset()         { *m = ReqMoveFileDirectory{} }
func (m *ReqMoveFileDirectory) String() string { return proto.CompactTextString(m) }
func (*ReqMoveFileDirectory) ProtoMessage()    {}
func (*ReqMoveFileDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{71}
}

func (m *ReqMoveFileDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqMoveFileDirectory.Unmarshal(m, b)
}
func (m *ReqMoveFileDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqMoveFileDirectory.Marshal(b, m, deterministic)
}
func (m *ReqMoveFileDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqMoveFileDirectory.Merge(m, src)
}
func (m *ReqMoveFileDirectory) XXX_Size() int {
	return xxx_messageInfo_ReqMoveFileDirectory.Size(m)
}
func (m *ReqMoveFileDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqMoveFileDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_ReqMoveFileDirectory proto.InternalMessageInfo

func (m *ReqMoveFileDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqMoveFileDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqMoveFileDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqMoveFileDirectory) GetDirectoryTarget() string {
	if m != nil {
		return m.DirectoryTarget
	}
	return ""
}

func (m *ReqMoveFileDirectory) GetDirectoryOriginal() string {
	if m != nil {
		return m.DirectoryOriginal
	}
	return ""
}

func (m *ReqMoveFileDirectory) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

type RspMoveFileDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	FilePath             string   `protobuf:"bytes,4,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspMoveFileDirectory) Reset()         { *m = RspMoveFileDirectory{} }
func (m *RspMoveFileDirectory) String() string { return proto.CompactTextString(m) }
func (*RspMoveFileDirectory) ProtoMessage()    {}
func (*RspMoveFileDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{72}
}

func (m *RspMoveFileDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspMoveFileDirectory.Unmarshal(m, b)
}
func (m *RspMoveFileDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspMoveFileDirectory.Marshal(b, m, deterministic)
}
func (m *RspMoveFileDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspMoveFileDirectory.Merge(m, src)
}
func (m *RspMoveFileDirectory) XXX_Size() int {
	return xxx_messageInfo_RspMoveFileDirectory.Size(m)
}
func (m *RspMoveFileDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_RspMoveFileDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_RspMoveFileDirectory proto.InternalMessageInfo

func (m *RspMoveFileDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspMoveFileDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspMoveFileDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspMoveFileDirectory) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *RspMoveFileDirectory) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqBLSPublicKey struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBLSPublicKey) Reset()         { *m = ReqBLSPublicKey{} }
func (m *ReqBLSPublicKey) String() string { return proto.CompactTextString(m) }
func (*ReqBLSPublicKey) ProtoMessage()    {}
func (*ReqBLSPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{73}
}

func (m *ReqBLSPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBLSPublicKey.Unmarshal(m, b)
}
func (m *ReqBLSPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBLSPublicKey.Marshal(b, m, deterministic)
}
func (m *ReqBLSPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBLSPublicKey.Merge(m, src)
}
func (m *ReqBLSPublicKey) XXX_Size() int {
	return xxx_messageInfo_ReqBLSPublicKey.Size(m)
}
func (m *ReqBLSPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBLSPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBLSPublicKey proto.InternalMessageInfo

func (m *ReqBLSPublicKey) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ReqBLSPublicKey) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// get bp BLS public key
type RspBPBLSPublicKey struct {
	BpInfo               *ReqRegister `protobuf:"bytes,1,opt,name=bp_info,json=bpInfo,proto3" json:"bp_info,omitempty"`
	Code                 int64        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string       `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RspBPBLSPublicKey) Reset()         { *m = RspBPBLSPublicKey{} }
func (m *RspBPBLSPublicKey) String() string { return proto.CompactTextString(m) }
func (*RspBPBLSPublicKey) ProtoMessage()    {}
func (*RspBPBLSPublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{74}
}

func (m *RspBPBLSPublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBPBLSPublicKey.Unmarshal(m, b)
}
func (m *RspBPBLSPublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBPBLSPublicKey.Marshal(b, m, deterministic)
}
func (m *RspBPBLSPublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBPBLSPublicKey.Merge(m, src)
}
func (m *RspBPBLSPublicKey) XXX_Size() int {
	return xxx_messageInfo_RspBPBLSPublicKey.Size(m)
}
func (m *RspBPBLSPublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBPBLSPublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_RspBPBLSPublicKey proto.InternalMessageInfo

func (m *RspBPBLSPublicKey) GetBpInfo() *ReqRegister {
	if m != nil {
		return m.BpInfo
	}
	return nil
}

func (m *RspBPBLSPublicKey) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RspBPBLSPublicKey) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReqBalance struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBalance) Reset()         { *m = ReqBalance{} }
func (m *ReqBalance) String() string { return proto.CompactTextString(m) }
func (*ReqBalance) ProtoMessage()    {}
func (*ReqBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{75}
}

func (m *ReqBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBalance.Unmarshal(m, b)
}
func (m *ReqBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBalance.Marshal(b, m, deterministic)
}
func (m *ReqBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBalance.Merge(m, src)
}
func (m *ReqBalance) XXX_Size() int {
	return xxx_messageInfo_ReqBalance.Size(m)
}
func (m *ReqBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBalance.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBalance proto.InternalMessageInfo

func (m *ReqBalance) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqBalance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RspBalance struct {
	Balance              float32  `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Code                 int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspBalance) Reset()         { *m = RspBalance{} }
func (m *RspBalance) String() string { return proto.CompactTextString(m) }
func (*RspBalance) ProtoMessage()    {}
func (*RspBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{76}
}

func (m *RspBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBalance.Unmarshal(m, b)
}
func (m *RspBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBalance.Marshal(b, m, deterministic)
}
func (m *RspBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBalance.Merge(m, src)
}
func (m *RspBalance) XXX_Size() int {
	return xxx_messageInfo_RspBalance.Size(m)
}
func (m *RspBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBalance.DiscardUnknown(m)
}

var xxx_messageInfo_RspBalance proto.InternalMessageInfo

func (m *RspBalance) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *RspBalance) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RspBalance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReqTransaction struct {
	TransactionHash      string   `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	Code                 int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTransaction) Reset()         { *m = ReqTransaction{} }
func (m *ReqTransaction) String() string { return proto.CompactTextString(m) }
func (*ReqTransaction) ProtoMessage()    {}
func (*ReqTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{77}
}

func (m *ReqTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransaction.Unmarshal(m, b)
}
func (m *ReqTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransaction.Marshal(b, m, deterministic)
}
func (m *ReqTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransaction.Merge(m, src)
}
func (m *ReqTransaction) XXX_Size() int {
	return xxx_messageInfo_ReqTransaction.Size(m)
}
func (m *ReqTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransaction proto.InternalMessageInfo

func (m *ReqTransaction) GetTransactionHash() string {
	if m != nil {
		return m.TransactionHash
	}
	return ""
}

func (m *ReqTransaction) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReqTransaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RspTransaction struct {
	Rest                 string   `protobuf:"bytes,1,opt,name=rest,proto3" json:"rest,omitempty"`
	Code                 int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspTransaction) Reset()         { *m = RspTransaction{} }
func (m *RspTransaction) String() string { return proto.CompactTextString(m) }
func (*RspTransaction) ProtoMessage()    {}
func (*RspTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{78}
}

func (m *RspTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspTransaction.Unmarshal(m, b)
}
func (m *RspTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspTransaction.Marshal(b, m, deterministic)
}
func (m *RspTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspTransaction.Merge(m, src)
}
func (m *RspTransaction) XXX_Size() int {
	return xxx_messageInfo_RspTransaction.Size(m)
}
func (m *RspTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_RspTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_RspTransaction proto.InternalMessageInfo

func (m *RspTransaction) GetRest() string {
	if m != nil {
		return m.Rest
	}
	return ""
}

func (m *RspTransaction) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RspTransaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReqBlockInfo struct {
	BlockHash            string   `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBlockInfo) Reset()         { *m = ReqBlockInfo{} }
func (m *ReqBlockInfo) String() string { return proto.CompactTextString(m) }
func (*ReqBlockInfo) ProtoMessage()    {}
func (*ReqBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{79}
}

func (m *ReqBlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBlockInfo.Unmarshal(m, b)
}
func (m *ReqBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBlockInfo.Marshal(b, m, deterministic)
}
func (m *ReqBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBlockInfo.Merge(m, src)
}
func (m *ReqBlockInfo) XXX_Size() int {
	return xxx_messageInfo_ReqBlockInfo.Size(m)
}
func (m *ReqBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBlockInfo proto.InternalMessageInfo

func (m *ReqBlockInfo) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *ReqBlockInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RspBlockInfo struct {
	BlockInfo            []byte   `protobuf:"bytes,1,opt,name=block_info,json=blockInfo,proto3" json:"block_info,omitempty"`
	Code                 int64    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspBlockInfo) Reset()         { *m = RspBlockInfo{} }
func (m *RspBlockInfo) String() string { return proto.CompactTextString(m) }
func (*RspBlockInfo) ProtoMessage()    {}
func (*RspBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{80}
}

func (m *RspBlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBlockInfo.Unmarshal(m, b)
}
func (m *RspBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBlockInfo.Marshal(b, m, deterministic)
}
func (m *RspBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBlockInfo.Merge(m, src)
}
func (m *RspBlockInfo) XXX_Size() int {
	return xxx_messageInfo_RspBlockInfo.Size(m)
}
func (m *RspBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspBlockInfo proto.InternalMessageInfo

func (m *RspBlockInfo) GetBlockInfo() []byte {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

func (m *RspBlockInfo) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RspBlockInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReqBlockCheck struct {
	BlockHeight          int64    `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqBlockCheck) Reset()         { *m = ReqBlockCheck{} }
func (m *ReqBlockCheck) String() string { return proto.CompactTextString(m) }
func (*ReqBlockCheck) ProtoMessage()    {}
func (*ReqBlockCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{81}
}

func (m *ReqBlockCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBlockCheck.Unmarshal(m, b)
}
func (m *ReqBlockCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBlockCheck.Marshal(b, m, deterministic)
}
func (m *ReqBlockCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBlockCheck.Merge(m, src)
}
func (m *ReqBlockCheck) XXX_Size() int {
	return xxx_messageInfo_ReqBlockCheck.Size(m)
}
func (m *ReqBlockCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBlockCheck.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBlockCheck proto.InternalMessageInfo

func (m *ReqBlockCheck) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ReqBlockCheck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RspBlockCheck struct {
	BlockList            []*BlockCheckInfo `protobuf:"bytes,1,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`
	Code                 int64             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Id                   string            `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RspBlockCheck) Reset()         { *m = RspBlockCheck{} }
func (m *RspBlockCheck) String() string { return proto.CompactTextString(m) }
func (*RspBlockCheck) ProtoMessage()    {}
func (*RspBlockCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{82}
}

func (m *RspBlockCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspBlockCheck.Unmarshal(m, b)
}
func (m *RspBlockCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspBlockCheck.Marshal(b, m, deterministic)
}
func (m *RspBlockCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspBlockCheck.Merge(m, src)
}
func (m *RspBlockCheck) XXX_Size() int {
	return xxx_messageInfo_RspBlockCheck.Size(m)
}
func (m *RspBlockCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_RspBlockCheck.DiscardUnknown(m)
}

var xxx_messageInfo_RspBlockCheck proto.InternalMessageInfo

func (m *RspBlockCheck) GetBlockList() []*BlockCheckInfo {
	if m != nil {
		return m.BlockList
	}
	return nil
}

func (m *RspBlockCheck) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RspBlockCheck) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BlockCheckInfo struct {
	BlockHeight          int64    `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	BlockHash            string   `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockCheckInfo) Reset()         { *m = BlockCheckInfo{} }
func (m *BlockCheckInfo) String() string { return proto.CompactTextString(m) }
func (*BlockCheckInfo) ProtoMessage()    {}
func (*BlockCheckInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{83}
}

func (m *BlockCheckInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockCheckInfo.Unmarshal(m, b)
}
func (m *BlockCheckInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockCheckInfo.Marshal(b, m, deterministic)
}
func (m *BlockCheckInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockCheckInfo.Merge(m, src)
}
func (m *BlockCheckInfo) XXX_Size() int {
	return xxx_messageInfo_BlockCheckInfo.Size(m)
}
func (m *BlockCheckInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockCheckInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockCheckInfo proto.InternalMessageInfo

func (m *BlockCheckInfo) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BlockCheckInfo) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *BlockCheckInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//
type ReqDownloadTaskInfo struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDownloadTaskInfo) Reset()         { *m = ReqDownloadTaskInfo{} }
func (m *ReqDownloadTaskInfo) String() string { return proto.CompactTextString(m) }
func (*ReqDownloadTaskInfo) ProtoMessage()    {}
func (*ReqDownloadTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{84}
}

func (m *ReqDownloadTaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDownloadTaskInfo.Unmarshal(m, b)
}
func (m *ReqDownloadTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDownloadTaskInfo.Marshal(b, m, deterministic)
}
func (m *ReqDownloadTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDownloadTaskInfo.Merge(m, src)
}
func (m *ReqDownloadTaskInfo) XXX_Size() int {
	return xxx_messageInfo_ReqDownloadTaskInfo.Size(m)
}
func (m *ReqDownloadTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDownloadTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDownloadTaskInfo proto.InternalMessageInfo

func (m *ReqDownloadTaskInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqDownloadTaskInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RspDownloadTaskInfo struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SliceSize            uint64   `protobuf:"varint,2,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	SliceHash            string   `protobuf:"bytes,3,opt,name=slice_hash,json=sliceHash,proto3" json:"slice_hash,omitempty"`
	SliceNumber          uint64   `protobuf:"varint,4,opt,name=slice_number,json=sliceNumber,proto3" json:"slice_number,omitempty"`
	StorageP2PAddress    string   `protobuf:"bytes,5,opt,name=storage_p2p_address,json=storageP2pAddress,proto3" json:"storage_p2p_address,omitempty"`
	P2PAddressList       []string `protobuf:"bytes,6,rep,name=p2p_address_list,json=p2pAddressList,proto3" json:"p2p_address_list,omitempty"`
	Time                 uint64   `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	Result               *Result  `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Id                   string   `protobuf:"bytes,9,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDownloadTaskInfo) Reset()         { *m = RspDownloadTaskInfo{} }
func (m *RspDownloadTaskInfo) String() string { return proto.CompactTextString(m) }
func (*RspDownloadTaskInfo) ProtoMessage()    {}
func (*RspDownloadTaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{85}
}

func (m *RspDownloadTaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDownloadTaskInfo.Unmarshal(m, b)
}
func (m *RspDownloadTaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDownloadTaskInfo.Marshal(b, m, deterministic)
}
func (m *RspDownloadTaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDownloadTaskInfo.Merge(m, src)
}
func (m *RspDownloadTaskInfo) XXX_Size() int {
	return xxx_messageInfo_RspDownloadTaskInfo.Size(m)
}
func (m *RspDownloadTaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDownloadTaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RspDownloadTaskInfo proto.InternalMessageInfo

func (m *RspDownloadTaskInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *RspDownloadTaskInfo) GetSliceSize() uint64 {
	if m != nil {
		return m.SliceSize
	}
	return 0
}

func (m *RspDownloadTaskInfo) GetSliceHash() string {
	if m != nil {
		return m.SliceHash
	}
	return ""
}

func (m *RspDownloadTaskInfo) GetSliceNumber() uint64 {
	if m != nil {
		return m.SliceNumber
	}
	return 0
}

func (m *RspDownloadTaskInfo) GetStorageP2PAddress() string {
	if m != nil {
		return m.StorageP2PAddress
	}
	return ""
}

func (m *RspDownloadTaskInfo) GetP2PAddressList() []string {
	if m != nil {
		return m.P2PAddressList
	}
	return nil
}

func (m *RspDownloadTaskInfo) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *RspDownloadTaskInfo) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspDownloadTaskInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReqShareLink struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqShareLink) Reset()         { *m = ReqShareLink{} }
func (m *ReqShareLink) String() string { return proto.CompactTextString(m) }
func (*ReqShareLink) ProtoMessage()    {}
func (*ReqShareLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{86}
}

func (m *ReqShareLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqShareLink.Unmarshal(m, b)
}
func (m *ReqShareLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqShareLink.Marshal(b, m, deterministic)
}
func (m *ReqShareLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqShareLink.Merge(m, src)
}
func (m *ReqShareLink) XXX_Size() int {
	return xxx_messageInfo_ReqShareLink.Size(m)
}
func (m *ReqShareLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqShareLink.DiscardUnknown(m)
}

var xxx_messageInfo_ReqShareLink proto.InternalMessageInfo

func (m *ReqShareLink) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqShareLink) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqShareLink) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspShareLink struct {
	ShareInfo            []*ShareLinkInfo `protobuf:"bytes,1,rep,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
	ReqId                string           `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string           `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string           `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Result               *Result          `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RspShareLink) Reset()         { *m = RspShareLink{} }
func (m *RspShareLink) String() string { return proto.CompactTextString(m) }
func (*RspShareLink) ProtoMessage()    {}
func (*RspShareLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{87}
}

func (m *RspShareLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspShareLink.Unmarshal(m, b)
}
func (m *RspShareLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspShareLink.Marshal(b, m, deterministic)
}
func (m *RspShareLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspShareLink.Merge(m, src)
}
func (m *RspShareLink) XXX_Size() int {
	return xxx_messageInfo_RspShareLink.Size(m)
}
func (m *RspShareLink) XXX_DiscardUnknown() {
	xxx_messageInfo_RspShareLink.DiscardUnknown(m)
}

var xxx_messageInfo_RspShareLink proto.InternalMessageInfo

func (m *RspShareLink) GetShareInfo() []*ShareLinkInfo {
	if m != nil {
		return m.ShareInfo
	}
	return nil
}

func (m *RspShareLink) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspShareLink) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspShareLink) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspShareLink) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqShareFile struct {
	FileHash             string   `protobuf:"bytes,1,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	IsPrivate            bool     `protobuf:"varint,2,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	ShareTime            int64    `protobuf:"varint,3,opt,name=share_time,json=shareTime,proto3" json:"share_time,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,5,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,6,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	PathHash             string   `protobuf:"bytes,7,opt,name=path_hash,json=pathHash,proto3" json:"path_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqShareFile) Reset()         { *m = ReqShareFile{} }
func (m *ReqShareFile) String() string { return proto.CompactTextString(m) }
func (*ReqShareFile) ProtoMessage()    {}
func (*ReqShareFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{88}
}

func (m *ReqShareFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqShareFile.Unmarshal(m, b)
}
func (m *ReqShareFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqShareFile.Marshal(b, m, deterministic)
}
func (m *ReqShareFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqShareFile.Merge(m, src)
}
func (m *ReqShareFile) XXX_Size() int {
	return xxx_messageInfo_ReqShareFile.Size(m)
}
func (m *ReqShareFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqShareFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqShareFile proto.InternalMessageInfo

func (m *ReqShareFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqShareFile) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

func (m *ReqShareFile) GetShareTime() int64 {
	if m != nil {
		return m.ShareTime
	}
	return 0
}

func (m *ReqShareFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqShareFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqShareFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqShareFile) GetPathHash() string {
	if m != nil {
		return m.PathHash
	}
	return ""
}

type RspShareFile struct {
	ShareLink            string   `protobuf:"bytes,1,opt,name=share_link,json=shareLink,proto3" json:"share_link,omitempty"`
	SharePassword        string   `protobuf:"bytes,2,opt,name=share_password,json=sharePassword,proto3" json:"share_password,omitempty"`
	P2PAddress           string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ShareId              string   `protobuf:"bytes,5,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	ReqId                string   `protobuf:"bytes,6,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspShareFile) Reset()         { *m = RspShareFile{} }
func (m *RspShareFile) String() string { return proto.CompactTextString(m) }
func (*RspShareFile) ProtoMessage()    {}
func (*RspShareFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{89}
}

func (m *RspShareFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspShareFile.Unmarshal(m, b)
}
func (m *RspShareFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspShareFile.Marshal(b, m, deterministic)
}
func (m *RspShareFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspShareFile.Merge(m, src)
}
func (m *RspShareFile) XXX_Size() int {
	return xxx_messageInfo_RspShareFile.Size(m)
}
func (m *RspShareFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RspShareFile.DiscardUnknown(m)
}

var xxx_messageInfo_RspShareFile proto.InternalMessageInfo

func (m *RspShareFile) GetShareLink() string {
	if m != nil {
		return m.ShareLink
	}
	return ""
}

func (m *RspShareFile) GetSharePassword() string {
	if m != nil {
		return m.SharePassword
	}
	return ""
}

func (m *RspShareFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspShareFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspShareFile) GetShareId() string {
	if m != nil {
		return m.ShareId
	}
	return ""
}

func (m *RspShareFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspShareFile) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqDeleteShare struct {
	ShareId              string   `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteShare) Reset()         { *m = ReqDeleteShare{} }
func (m *ReqDeleteShare) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteShare) ProtoMessage()    {}
func (*ReqDeleteShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{90}
}

func (m *ReqDeleteShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteShare.Unmarshal(m, b)
}
func (m *ReqDeleteShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteShare.Marshal(b, m, deterministic)
}
func (m *ReqDeleteShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteShare.Merge(m, src)
}
func (m *ReqDeleteShare) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteShare.Size(m)
}
func (m *ReqDeleteShare) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteShare.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteShare proto.InternalMessageInfo

func (m *ReqDeleteShare) GetShareId() string {
	if m != nil {
		return m.ShareId
	}
	return ""
}

func (m *ReqDeleteShare) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDeleteShare) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDeleteShare) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspDeleteShare struct {
	ShareId              string   `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeleteShare) Reset()         { *m = RspDeleteShare{} }
func (m *RspDeleteShare) String() string { return proto.CompactTextString(m) }
func (*RspDeleteShare) ProtoMessage()    {}
func (*RspDeleteShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{91}
}

func (m *RspDeleteShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeleteShare.Unmarshal(m, b)
}
func (m *RspDeleteShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeleteShare.Marshal(b, m, deterministic)
}
func (m *RspDeleteShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeleteShare.Merge(m, src)
}
func (m *RspDeleteShare) XXX_Size() int {
	return xxx_messageInfo_RspDeleteShare.Size(m)
}
func (m *RspDeleteShare) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeleteShare.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeleteShare proto.InternalMessageInfo

func (m *RspDeleteShare) GetShareId() string {
	if m != nil {
		return m.ShareId
	}
	return ""
}

func (m *RspDeleteShare) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDeleteShare) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDeleteShare) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspDeleteShare) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqGetShareFile struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	SharePassword        string   `protobuf:"bytes,5,opt,name=share_password,json=sharePassword,proto3" json:"share_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetShareFile) Reset()         { *m = ReqGetShareFile{} }
func (m *ReqGetShareFile) String() string { return proto.CompactTextString(m) }
func (*ReqGetShareFile) ProtoMessage()    {}
func (*ReqGetShareFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{92}
}

func (m *ReqGetShareFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetShareFile.Unmarshal(m, b)
}
func (m *ReqGetShareFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetShareFile.Marshal(b, m, deterministic)
}
func (m *ReqGetShareFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetShareFile.Merge(m, src)
}
func (m *ReqGetShareFile) XXX_Size() int {
	return xxx_messageInfo_ReqGetShareFile.Size(m)
}
func (m *ReqGetShareFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetShareFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetShareFile proto.InternalMessageInfo

func (m *ReqGetShareFile) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ReqGetShareFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqGetShareFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqGetShareFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqGetShareFile) GetSharePassword() string {
	if m != nil {
		return m.SharePassword
	}
	return ""
}

type RspGetShareFile struct {
	P2PAddress           string      `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result     `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	IsPrivate            bool        `protobuf:"varint,5,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	FileInfo             []*FileInfo `protobuf:"bytes,6,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspGetShareFile) Reset()         { *m = RspGetShareFile{} }
func (m *RspGetShareFile) String() string { return proto.CompactTextString(m) }
func (*RspGetShareFile) ProtoMessage()    {}
func (*RspGetShareFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{93}
}

func (m *RspGetShareFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGetShareFile.Unmarshal(m, b)
}
func (m *RspGetShareFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGetShareFile.Marshal(b, m, deterministic)
}
func (m *RspGetShareFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGetShareFile.Merge(m, src)
}
func (m *RspGetShareFile) XXX_Size() int {
	return xxx_messageInfo_RspGetShareFile.Size(m)
}
func (m *RspGetShareFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGetShareFile.DiscardUnknown(m)
}

var xxx_messageInfo_RspGetShareFile proto.InternalMessageInfo

func (m *RspGetShareFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspGetShareFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspGetShareFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspGetShareFile) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspGetShareFile) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

func (m *RspGetShareFile) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

//
type ReqSaveFile struct {
	FileHash               string   `protobuf:"bytes,1,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileOwnerWalletAddress string   `protobuf:"bytes,2,opt,name=file_owner_wallet_address,json=fileOwnerWalletAddress,proto3" json:"file_owner_wallet_address,omitempty"`
	P2PAddress             string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress          string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                  string   `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ReqSaveFile) Reset()         { *m = ReqSaveFile{} }
func (m *ReqSaveFile) String() string { return proto.CompactTextString(m) }
func (*ReqSaveFile) ProtoMessage()    {}
func (*ReqSaveFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{94}
}

func (m *ReqSaveFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSaveFile.Unmarshal(m, b)
}
func (m *ReqSaveFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSaveFile.Marshal(b, m, deterministic)
}
func (m *ReqSaveFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSaveFile.Merge(m, src)
}
func (m *ReqSaveFile) XXX_Size() int {
	return xxx_messageInfo_ReqSaveFile.Size(m)
}
func (m *ReqSaveFile) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSaveFile.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSaveFile proto.InternalMessageInfo

func (m *ReqSaveFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

func (m *ReqSaveFile) GetFileOwnerWalletAddress() string {
	if m != nil {
		return m.FileOwnerWalletAddress
	}
	return ""
}

func (m *ReqSaveFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqSaveFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqSaveFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspSaveFile struct {
	FilePath             string   `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	FileHash             string   `protobuf:"bytes,6,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspSaveFile) Reset()         { *m = RspSaveFile{} }
func (m *RspSaveFile) String() string { return proto.CompactTextString(m) }
func (*RspSaveFile) ProtoMessage()    {}
func (*RspSaveFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{95}
}

func (m *RspSaveFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspSaveFile.Unmarshal(m, b)
}
func (m *RspSaveFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspSaveFile.Marshal(b, m, deterministic)
}
func (m *RspSaveFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspSaveFile.Merge(m, src)
}
func (m *RspSaveFile) XXX_Size() int {
	return xxx_messageInfo_RspSaveFile.Size(m)
}
func (m *RspSaveFile) XXX_DiscardUnknown() {
	xxx_messageInfo_RspSaveFile.DiscardUnknown(m)
}

var xxx_messageInfo_RspSaveFile proto.InternalMessageInfo

func (m *RspSaveFile) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *RspSaveFile) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspSaveFile) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspSaveFile) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspSaveFile) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspSaveFile) GetFileHash() string {
	if m != nil {
		return m.FileHash
	}
	return ""
}

//
type ReqSaveFolder struct {
	FolderHash               string   `protobuf:"bytes,1,opt,name=folder_hash,json=folderHash,proto3" json:"folder_hash,omitempty"`
	FolderOwnerWalletAddress string   `protobuf:"bytes,2,opt,name=folder_owner_wallet_address,json=folderOwnerWalletAddress,proto3" json:"folder_owner_wallet_address,omitempty"`
	P2PAddress               string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress            string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                    string   `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ReqSaveFolder) Reset()         { *m = ReqSaveFolder{} }
func (m *ReqSaveFolder) String() string { return proto.CompactTextString(m) }
func (*ReqSaveFolder) ProtoMessage()    {}
func (*ReqSaveFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{96}
}

func (m *ReqSaveFolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSaveFolder.Unmarshal(m, b)
}
func (m *ReqSaveFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSaveFolder.Marshal(b, m, deterministic)
}
func (m *ReqSaveFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSaveFolder.Merge(m, src)
}
func (m *ReqSaveFolder) XXX_Size() int {
	return xxx_messageInfo_ReqSaveFolder.Size(m)
}
func (m *ReqSaveFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSaveFolder.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSaveFolder proto.InternalMessageInfo

func (m *ReqSaveFolder) GetFolderHash() string {
	if m != nil {
		return m.FolderHash
	}
	return ""
}

func (m *ReqSaveFolder) GetFolderOwnerWalletAddress() string {
	if m != nil {
		return m.FolderOwnerWalletAddress
	}
	return ""
}

func (m *ReqSaveFolder) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqSaveFolder) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqSaveFolder) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspSaveFolder struct {
	FolderPath           string   `protobuf:"bytes,1,opt,name=folder_path,json=folderPath,proto3" json:"folder_path,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	FolderHash           string   `protobuf:"bytes,6,opt,name=folder_hash,json=folderHash,proto3" json:"folder_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspSaveFolder) Reset()         { *m = RspSaveFolder{} }
func (m *RspSaveFolder) String() string { return proto.CompactTextString(m) }
func (*RspSaveFolder) ProtoMessage()    {}
func (*RspSaveFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{97}
}

func (m *RspSaveFolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspSaveFolder.Unmarshal(m, b)
}
func (m *RspSaveFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspSaveFolder.Marshal(b, m, deterministic)
}
func (m *RspSaveFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspSaveFolder.Merge(m, src)
}
func (m *RspSaveFolder) XXX_Size() int {
	return xxx_messageInfo_RspSaveFolder.Size(m)
}
func (m *RspSaveFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_RspSaveFolder.DiscardUnknown(m)
}

var xxx_messageInfo_RspSaveFolder proto.InternalMessageInfo

func (m *RspSaveFolder) GetFolderPath() string {
	if m != nil {
		return m.FolderPath
	}
	return ""
}

func (m *RspSaveFolder) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspSaveFolder) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspSaveFolder) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspSaveFolder) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspSaveFolder) GetFolderHash() string {
	if m != nil {
		return m.FolderHash
	}
	return ""
}

//
type ReqCreateAlbum struct {
	P2PAddress           string      `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	FileInfo             []*FileInfo `protobuf:"bytes,4,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	AlbumName            string      `protobuf:"bytes,5,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	AlbumBlurb           string      `protobuf:"bytes,6,opt,name=album_blurb,json=albumBlurb,proto3" json:"album_blurb,omitempty"`
	AlbumCoverHash       string      `protobuf:"bytes,7,opt,name=album_cover_hash,json=albumCoverHash,proto3" json:"album_cover_hash,omitempty"`
	AlbumType            AlbumType   `protobuf:"varint,8,opt,name=album_type,json=albumType,proto3,enum=protos.AlbumType" json:"album_type,omitempty"`
	IsPrivate            bool        `protobuf:"varint,9,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqCreateAlbum) Reset()         { *m = ReqCreateAlbum{} }
func (m *ReqCreateAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqCreateAlbum) ProtoMessage()    {}
func (*ReqCreateAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{98}
}

func (m *ReqCreateAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCreateAlbum.Unmarshal(m, b)
}
func (m *ReqCreateAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCreateAlbum.Marshal(b, m, deterministic)
}
func (m *ReqCreateAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCreateAlbum.Merge(m, src)
}
func (m *ReqCreateAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqCreateAlbum.Size(m)
}
func (m *ReqCreateAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCreateAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCreateAlbum proto.InternalMessageInfo

func (m *ReqCreateAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqCreateAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqCreateAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqCreateAlbum) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *ReqCreateAlbum) GetAlbumName() string {
	if m != nil {
		return m.AlbumName
	}
	return ""
}

func (m *ReqCreateAlbum) GetAlbumBlurb() string {
	if m != nil {
		return m.AlbumBlurb
	}
	return ""
}

func (m *ReqCreateAlbum) GetAlbumCoverHash() string {
	if m != nil {
		return m.AlbumCoverHash
	}
	return ""
}

func (m *ReqCreateAlbum) GetAlbumType() AlbumType {
	if m != nil {
		return m.AlbumType
	}
	return AlbumType_ALL
}

func (m *ReqCreateAlbum) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

type RspCreateAlbum struct {
	AlbumId              string   `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspCreateAlbum) Reset()         { *m = RspCreateAlbum{} }
func (m *RspCreateAlbum) String() string { return proto.CompactTextString(m) }
func (*RspCreateAlbum) ProtoMessage()    {}
func (*RspCreateAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{99}
}

func (m *RspCreateAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspCreateAlbum.Unmarshal(m, b)
}
func (m *RspCreateAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspCreateAlbum.Marshal(b, m, deterministic)
}
func (m *RspCreateAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspCreateAlbum.Merge(m, src)
}
func (m *RspCreateAlbum) XXX_Size() int {
	return xxx_messageInfo_RspCreateAlbum.Size(m)
}
func (m *RspCreateAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspCreateAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspCreateAlbum proto.InternalMessageInfo

func (m *RspCreateAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *RspCreateAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspCreateAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspCreateAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspCreateAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqEditAlbum struct {
	P2PAddress           string      `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string      `protobuf:"bytes,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	IsPrivate            bool        `protobuf:"varint,5,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	ChangeFiles          []*FileInfo `protobuf:"bytes,6,rep,name=change_files,json=changeFiles,proto3" json:"change_files,omitempty"`
	AlbumCoverHash       string      `protobuf:"bytes,7,opt,name=album_cover_hash,json=albumCoverHash,proto3" json:"album_cover_hash,omitempty"`
	AlbumName            string      `protobuf:"bytes,8,opt,name=album_name,json=albumName,proto3" json:"album_name,omitempty"`
	AlbumBlurb           string      `protobuf:"bytes,9,opt,name=album_blurb,json=albumBlurb,proto3" json:"album_blurb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqEditAlbum) Reset()         { *m = ReqEditAlbum{} }
func (m *ReqEditAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqEditAlbum) ProtoMessage()    {}
func (*ReqEditAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{100}
}

func (m *ReqEditAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqEditAlbum.Unmarshal(m, b)
}
func (m *ReqEditAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqEditAlbum.Marshal(b, m, deterministic)
}
func (m *ReqEditAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqEditAlbum.Merge(m, src)
}
func (m *ReqEditAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqEditAlbum.Size(m)
}
func (m *ReqEditAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqEditAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqEditAlbum proto.InternalMessageInfo

func (m *ReqEditAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqEditAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqEditAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqEditAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *ReqEditAlbum) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

func (m *ReqEditAlbum) GetChangeFiles() []*FileInfo {
	if m != nil {
		return m.ChangeFiles
	}
	return nil
}

func (m *ReqEditAlbum) GetAlbumCoverHash() string {
	if m != nil {
		return m.AlbumCoverHash
	}
	return ""
}

func (m *ReqEditAlbum) GetAlbumName() string {
	if m != nil {
		return m.AlbumName
	}
	return ""
}

func (m *ReqEditAlbum) GetAlbumBlurb() string {
	if m != nil {
		return m.AlbumBlurb
	}
	return ""
}

type RspEditAlbum struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string   `protobuf:"bytes,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspEditAlbum) Reset()         { *m = RspEditAlbum{} }
func (m *RspEditAlbum) String() string { return proto.CompactTextString(m) }
func (*RspEditAlbum) ProtoMessage()    {}
func (*RspEditAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{101}
}

func (m *RspEditAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspEditAlbum.Unmarshal(m, b)
}
func (m *RspEditAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspEditAlbum.Marshal(b, m, deterministic)
}
func (m *RspEditAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspEditAlbum.Merge(m, src)
}
func (m *RspEditAlbum) XXX_Size() int {
	return xxx_messageInfo_RspEditAlbum.Size(m)
}
func (m *RspEditAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspEditAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspEditAlbum proto.InternalMessageInfo

func (m *RspEditAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspEditAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspEditAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspEditAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *RspEditAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqAlbumContent struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string   `protobuf:"bytes,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAlbumContent) Reset()         { *m = ReqAlbumContent{} }
func (m *ReqAlbumContent) String() string { return proto.CompactTextString(m) }
func (*ReqAlbumContent) ProtoMessage()    {}
func (*ReqAlbumContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{102}
}

func (m *ReqAlbumContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAlbumContent.Unmarshal(m, b)
}
func (m *ReqAlbumContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAlbumContent.Marshal(b, m, deterministic)
}
func (m *ReqAlbumContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAlbumContent.Merge(m, src)
}
func (m *ReqAlbumContent) XXX_Size() int {
	return xxx_messageInfo_ReqAlbumContent.Size(m)
}
func (m *ReqAlbumContent) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAlbumContent.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAlbumContent proto.InternalMessageInfo

func (m *ReqAlbumContent) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqAlbumContent) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqAlbumContent) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqAlbumContent) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

type RspAlbumContent struct {
	P2PAddress           string      `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	OwnerWalletAddress   string      `protobuf:"bytes,3,opt,name=owner_wallet_address,json=ownerWalletAddress,proto3" json:"owner_wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string      `protobuf:"bytes,5,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	AlbumInfo            *AlbumInfo  `protobuf:"bytes,6,opt,name=album_info,json=albumInfo,proto3" json:"album_info,omitempty"`
	FileInfo             []*FileInfo `protobuf:"bytes,7,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	IsCollection         bool        `protobuf:"varint,8,opt,name=is_collection,json=isCollection,proto3" json:"is_collection,omitempty"`
	Result               *Result     `protobuf:"bytes,9,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspAlbumContent) Reset()         { *m = RspAlbumContent{} }
func (m *RspAlbumContent) String() string { return proto.CompactTextString(m) }
func (*RspAlbumContent) ProtoMessage()    {}
func (*RspAlbumContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{103}
}

func (m *RspAlbumContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspAlbumContent.Unmarshal(m, b)
}
func (m *RspAlbumContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspAlbumContent.Marshal(b, m, deterministic)
}
func (m *RspAlbumContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspAlbumContent.Merge(m, src)
}
func (m *RspAlbumContent) XXX_Size() int {
	return xxx_messageInfo_RspAlbumContent.Size(m)
}
func (m *RspAlbumContent) XXX_DiscardUnknown() {
	xxx_messageInfo_RspAlbumContent.DiscardUnknown(m)
}

var xxx_messageInfo_RspAlbumContent proto.InternalMessageInfo

func (m *RspAlbumContent) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspAlbumContent) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspAlbumContent) GetOwnerWalletAddress() string {
	if m != nil {
		return m.OwnerWalletAddress
	}
	return ""
}

func (m *RspAlbumContent) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspAlbumContent) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *RspAlbumContent) GetAlbumInfo() *AlbumInfo {
	if m != nil {
		return m.AlbumInfo
	}
	return nil
}

func (m *RspAlbumContent) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *RspAlbumContent) GetIsCollection() bool {
	if m != nil {
		return m.IsCollection
	}
	return false
}

func (m *RspAlbumContent) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqSearchAlbum struct {
	AlbumType            AlbumType     `protobuf:"varint,1,opt,name=album_type,json=albumType,proto3,enum=protos.AlbumType" json:"album_type,omitempty"`
	Keyword              string        `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	AlbumSortType        AlbumSortType `protobuf:"varint,3,opt,name=AlbumSortType,proto3,enum=protos.AlbumSortType" json:"AlbumSortType,omitempty"`
	P2PAddress           string        `protobuf:"bytes,4,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string        `protobuf:"bytes,5,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string        `protobuf:"bytes,6,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Page                 uint64        `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Number               uint64        `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqSearchAlbum) Reset()         { *m = ReqSearchAlbum{} }
func (m *ReqSearchAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqSearchAlbum) ProtoMessage()    {}
func (*ReqSearchAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{104}
}

func (m *ReqSearchAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSearchAlbum.Unmarshal(m, b)
}
func (m *ReqSearchAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSearchAlbum.Marshal(b, m, deterministic)
}
func (m *ReqSearchAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSearchAlbum.Merge(m, src)
}
func (m *ReqSearchAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqSearchAlbum.Size(m)
}
func (m *ReqSearchAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSearchAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSearchAlbum proto.InternalMessageInfo

func (m *ReqSearchAlbum) GetAlbumType() AlbumType {
	if m != nil {
		return m.AlbumType
	}
	return AlbumType_ALL
}

func (m *ReqSearchAlbum) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *ReqSearchAlbum) GetAlbumSortType() AlbumSortType {
	if m != nil {
		return m.AlbumSortType
	}
	return AlbumSortType_LATEST
}

func (m *ReqSearchAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqSearchAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqSearchAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqSearchAlbum) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ReqSearchAlbum) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type RspSearchAlbum struct {
	P2PAddress           string       `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string       `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumInfo            []*AlbumInfo `protobuf:"bytes,4,rep,name=album_info,json=albumInfo,proto3" json:"album_info,omitempty"`
	Result               *Result      `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Page                 uint64       `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Total                uint64       `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RspSearchAlbum) Reset()         { *m = RspSearchAlbum{} }
func (m *RspSearchAlbum) String() string { return proto.CompactTextString(m) }
func (*RspSearchAlbum) ProtoMessage()    {}
func (*RspSearchAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{105}
}

func (m *RspSearchAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspSearchAlbum.Unmarshal(m, b)
}
func (m *RspSearchAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspSearchAlbum.Marshal(b, m, deterministic)
}
func (m *RspSearchAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspSearchAlbum.Merge(m, src)
}
func (m *RspSearchAlbum) XXX_Size() int {
	return xxx_messageInfo_RspSearchAlbum.Size(m)
}
func (m *RspSearchAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspSearchAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspSearchAlbum proto.InternalMessageInfo

func (m *RspSearchAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspSearchAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspSearchAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspSearchAlbum) GetAlbumInfo() []*AlbumInfo {
	if m != nil {
		return m.AlbumInfo
	}
	return nil
}

func (m *RspSearchAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspSearchAlbum) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RspSearchAlbum) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ReqFindMyAlbum struct {
	P2PAddress           string    `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string    `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string    `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumType            AlbumType `protobuf:"varint,4,opt,name=album_type,json=albumType,proto3,enum=protos.AlbumType" json:"album_type,omitempty"`
	Page                 uint64    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Number               uint64    `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Keyword              string    `protobuf:"bytes,7,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqFindMyAlbum) Reset()         { *m = ReqFindMyAlbum{} }
func (m *ReqFindMyAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqFindMyAlbum) ProtoMessage()    {}
func (*ReqFindMyAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{106}
}

func (m *ReqFindMyAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFindMyAlbum.Unmarshal(m, b)
}
func (m *ReqFindMyAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFindMyAlbum.Marshal(b, m, deterministic)
}
func (m *ReqFindMyAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFindMyAlbum.Merge(m, src)
}
func (m *ReqFindMyAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqFindMyAlbum.Size(m)
}
func (m *ReqFindMyAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFindMyAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFindMyAlbum proto.InternalMessageInfo

func (m *ReqFindMyAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqFindMyAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqFindMyAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqFindMyAlbum) GetAlbumType() AlbumType {
	if m != nil {
		return m.AlbumType
	}
	return AlbumType_ALL
}

func (m *ReqFindMyAlbum) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ReqFindMyAlbum) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ReqFindMyAlbum) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type RspFindMyAlbum struct {
	P2PAddress           string       `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string       `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumInfo            []*AlbumInfo `protobuf:"bytes,4,rep,name=album_info,json=albumInfo,proto3" json:"album_info,omitempty"`
	Result               *Result      `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Total                uint64       `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RspFindMyAlbum) Reset()         { *m = RspFindMyAlbum{} }
func (m *RspFindMyAlbum) String() string { return proto.CompactTextString(m) }
func (*RspFindMyAlbum) ProtoMessage()    {}
func (*RspFindMyAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{107}
}

func (m *RspFindMyAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFindMyAlbum.Unmarshal(m, b)
}
func (m *RspFindMyAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFindMyAlbum.Marshal(b, m, deterministic)
}
func (m *RspFindMyAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFindMyAlbum.Merge(m, src)
}
func (m *RspFindMyAlbum) XXX_Size() int {
	return xxx_messageInfo_RspFindMyAlbum.Size(m)
}
func (m *RspFindMyAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFindMyAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspFindMyAlbum proto.InternalMessageInfo

func (m *RspFindMyAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFindMyAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFindMyAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFindMyAlbum) GetAlbumInfo() []*AlbumInfo {
	if m != nil {
		return m.AlbumInfo
	}
	return nil
}

func (m *RspFindMyAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspFindMyAlbum) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ReqCollectionAlbum struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string   `protobuf:"bytes,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	IsCollection         bool     `protobuf:"varint,5,opt,name=is_collection,json=isCollection,proto3" json:"is_collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCollectionAlbum) Reset()         { *m = ReqCollectionAlbum{} }
func (m *ReqCollectionAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqCollectionAlbum) ProtoMessage()    {}
func (*ReqCollectionAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{108}
}

func (m *ReqCollectionAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCollectionAlbum.Unmarshal(m, b)
}
func (m *ReqCollectionAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCollectionAlbum.Marshal(b, m, deterministic)
}
func (m *ReqCollectionAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCollectionAlbum.Merge(m, src)
}
func (m *ReqCollectionAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqCollectionAlbum.Size(m)
}
func (m *ReqCollectionAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCollectionAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCollectionAlbum proto.InternalMessageInfo

func (m *ReqCollectionAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqCollectionAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqCollectionAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqCollectionAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *ReqCollectionAlbum) GetIsCollection() bool {
	if m != nil {
		return m.IsCollection
	}
	return false
}

type RspCollectionAlbum struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumId              string   `protobuf:"bytes,4,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	IsCollection         bool     `protobuf:"varint,6,opt,name=is_collection,json=isCollection,proto3" json:"is_collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspCollectionAlbum) Reset()         { *m = RspCollectionAlbum{} }
func (m *RspCollectionAlbum) String() string { return proto.CompactTextString(m) }
func (*RspCollectionAlbum) ProtoMessage()    {}
func (*RspCollectionAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{109}
}

func (m *RspCollectionAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspCollectionAlbum.Unmarshal(m, b)
}
func (m *RspCollectionAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspCollectionAlbum.Marshal(b, m, deterministic)
}
func (m *RspCollectionAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspCollectionAlbum.Merge(m, src)
}
func (m *RspCollectionAlbum) XXX_Size() int {
	return xxx_messageInfo_RspCollectionAlbum.Size(m)
}
func (m *RspCollectionAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspCollectionAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspCollectionAlbum proto.InternalMessageInfo

func (m *RspCollectionAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspCollectionAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspCollectionAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspCollectionAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *RspCollectionAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspCollectionAlbum) GetIsCollection() bool {
	if m != nil {
		return m.IsCollection
	}
	return false
}

type ReqAbstractAlbum struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAbstractAlbum) Reset()         { *m = ReqAbstractAlbum{} }
func (m *ReqAbstractAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqAbstractAlbum) ProtoMessage()    {}
func (*ReqAbstractAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{110}
}

func (m *ReqAbstractAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAbstractAlbum.Unmarshal(m, b)
}
func (m *ReqAbstractAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAbstractAlbum.Marshal(b, m, deterministic)
}
func (m *ReqAbstractAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAbstractAlbum.Merge(m, src)
}
func (m *ReqAbstractAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqAbstractAlbum.Size(m)
}
func (m *ReqAbstractAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAbstractAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAbstractAlbum proto.InternalMessageInfo

func (m *ReqAbstractAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqAbstractAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqAbstractAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspAbstractAlbum struct {
	P2PAddress           string       `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string       `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	MyAlbum              *AlbumNumber `protobuf:"bytes,4,opt,name=my_album,json=myAlbum,proto3" json:"my_album,omitempty"`
	CollectionAlbum      *AlbumNumber `protobuf:"bytes,5,opt,name=collection_album,json=collectionAlbum,proto3" json:"collection_album,omitempty"`
	Result               *Result      `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RspAbstractAlbum) Reset()         { *m = RspAbstractAlbum{} }
func (m *RspAbstractAlbum) String() string { return proto.CompactTextString(m) }
func (*RspAbstractAlbum) ProtoMessage()    {}
func (*RspAbstractAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{111}
}

func (m *RspAbstractAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspAbstractAlbum.Unmarshal(m, b)
}
func (m *RspAbstractAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspAbstractAlbum.Marshal(b, m, deterministic)
}
func (m *RspAbstractAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspAbstractAlbum.Merge(m, src)
}
func (m *RspAbstractAlbum) XXX_Size() int {
	return xxx_messageInfo_RspAbstractAlbum.Size(m)
}
func (m *RspAbstractAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspAbstractAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspAbstractAlbum proto.InternalMessageInfo

func (m *RspAbstractAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspAbstractAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspAbstractAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspAbstractAlbum) GetMyAlbum() *AlbumNumber {
	if m != nil {
		return m.MyAlbum
	}
	return nil
}

func (m *RspAbstractAlbum) GetCollectionAlbum() *AlbumNumber {
	if m != nil {
		return m.CollectionAlbum
	}
	return nil
}

func (m *RspAbstractAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqMyCollectionAlbum struct {
	AlbumType            AlbumType `protobuf:"varint,1,opt,name=album_type,json=albumType,proto3,enum=protos.AlbumType" json:"album_type,omitempty"`
	P2PAddress           string    `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string    `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string    `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Page                 uint64    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Number               uint64    `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Keyword              string    `protobuf:"bytes,7,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReqMyCollectionAlbum) Reset()         { *m = ReqMyCollectionAlbum{} }
func (m *ReqMyCollectionAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqMyCollectionAlbum) ProtoMessage()    {}
func (*ReqMyCollectionAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{112}
}

func (m *ReqMyCollectionAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqMyCollectionAlbum.Unmarshal(m, b)
}
func (m *ReqMyCollectionAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqMyCollectionAlbum.Marshal(b, m, deterministic)
}
func (m *ReqMyCollectionAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqMyCollectionAlbum.Merge(m, src)
}
func (m *ReqMyCollectionAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqMyCollectionAlbum.Size(m)
}
func (m *ReqMyCollectionAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqMyCollectionAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqMyCollectionAlbum proto.InternalMessageInfo

func (m *ReqMyCollectionAlbum) GetAlbumType() AlbumType {
	if m != nil {
		return m.AlbumType
	}
	return AlbumType_ALL
}

func (m *ReqMyCollectionAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqMyCollectionAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqMyCollectionAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqMyCollectionAlbum) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ReqMyCollectionAlbum) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *ReqMyCollectionAlbum) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type RspMyCollectionAlbum struct {
	P2PAddress           string       `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string       `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	AlbumInfo            []*AlbumInfo `protobuf:"bytes,4,rep,name=album_info,json=albumInfo,proto3" json:"album_info,omitempty"`
	Result               *Result      `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	Page                 uint64       `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RspMyCollectionAlbum) Reset()         { *m = RspMyCollectionAlbum{} }
func (m *RspMyCollectionAlbum) String() string { return proto.CompactTextString(m) }
func (*RspMyCollectionAlbum) ProtoMessage()    {}
func (*RspMyCollectionAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{113}
}

func (m *RspMyCollectionAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspMyCollectionAlbum.Unmarshal(m, b)
}
func (m *RspMyCollectionAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspMyCollectionAlbum.Marshal(b, m, deterministic)
}
func (m *RspMyCollectionAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspMyCollectionAlbum.Merge(m, src)
}
func (m *RspMyCollectionAlbum) XXX_Size() int {
	return xxx_messageInfo_RspMyCollectionAlbum.Size(m)
}
func (m *RspMyCollectionAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspMyCollectionAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspMyCollectionAlbum proto.InternalMessageInfo

func (m *RspMyCollectionAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspMyCollectionAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspMyCollectionAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspMyCollectionAlbum) GetAlbumInfo() []*AlbumInfo {
	if m != nil {
		return m.AlbumInfo
	}
	return nil
}

func (m *RspMyCollectionAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspMyCollectionAlbum) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ReqDeleteAlbum struct {
	AlbumId              string   `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqDeleteAlbum) Reset()         { *m = ReqDeleteAlbum{} }
func (m *ReqDeleteAlbum) String() string { return proto.CompactTextString(m) }
func (*ReqDeleteAlbum) ProtoMessage()    {}
func (*ReqDeleteAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{114}
}

func (m *ReqDeleteAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqDeleteAlbum.Unmarshal(m, b)
}
func (m *ReqDeleteAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqDeleteAlbum.Marshal(b, m, deterministic)
}
func (m *ReqDeleteAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqDeleteAlbum.Merge(m, src)
}
func (m *ReqDeleteAlbum) XXX_Size() int {
	return xxx_messageInfo_ReqDeleteAlbum.Size(m)
}
func (m *ReqDeleteAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqDeleteAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_ReqDeleteAlbum proto.InternalMessageInfo

func (m *ReqDeleteAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *ReqDeleteAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqDeleteAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqDeleteAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspDeleteAlbum struct {
	AlbumId              string   `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspDeleteAlbum) Reset()         { *m = RspDeleteAlbum{} }
func (m *RspDeleteAlbum) String() string { return proto.CompactTextString(m) }
func (*RspDeleteAlbum) ProtoMessage()    {}
func (*RspDeleteAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{115}
}

func (m *RspDeleteAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspDeleteAlbum.Unmarshal(m, b)
}
func (m *RspDeleteAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspDeleteAlbum.Marshal(b, m, deterministic)
}
func (m *RspDeleteAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspDeleteAlbum.Merge(m, src)
}
func (m *RspDeleteAlbum) XXX_Size() int {
	return xxx_messageInfo_RspDeleteAlbum.Size(m)
}
func (m *RspDeleteAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_RspDeleteAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_RspDeleteAlbum proto.InternalMessageInfo

func (m *RspDeleteAlbum) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

func (m *RspDeleteAlbum) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspDeleteAlbum) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspDeleteAlbum) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspDeleteAlbum) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqConfig struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	NetworkAddress       string   `protobuf:"bytes,4,opt,name=network_address,json=networkAddress,proto3" json:"network_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqConfig) Reset()         { *m = ReqConfig{} }
func (m *ReqConfig) String() string { return proto.CompactTextString(m) }
func (*ReqConfig) ProtoMessage()    {}
func (*ReqConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{116}
}

func (m *ReqConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqConfig.Unmarshal(m, b)
}
func (m *ReqConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqConfig.Marshal(b, m, deterministic)
}
func (m *ReqConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqConfig.Merge(m, src)
}
func (m *ReqConfig) XXX_Size() int {
	return xxx_messageInfo_ReqConfig.Size(m)
}
func (m *ReqConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReqConfig proto.InternalMessageInfo

func (m *ReqConfig) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqConfig) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqConfig) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqConfig) GetNetworkAddress() string {
	if m != nil {
		return m.NetworkAddress
	}
	return ""
}

type RspConfig struct {
	InvitationCode       string   `protobuf:"bytes,1,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Invite               uint64   `protobuf:"varint,3,opt,name=invite,proto3" json:"invite,omitempty"`
	IsUpgrade            bool     `protobuf:"varint,4,opt,name=is_upgrade,json=isUpgrade,proto3" json:"is_upgrade,omitempty"`
	FreeCapacity         uint64   `protobuf:"varint,5,opt,name=free_capacity,json=freeCapacity,proto3" json:"free_capacity,omitempty"`
	Result               *Result  `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	P2PAddress           string   `protobuf:"bytes,7,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,8,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Capacity             uint64   `protobuf:"varint,9,opt,name=capacity,proto3" json:"capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspConfig) Reset()         { *m = RspConfig{} }
func (m *RspConfig) String() string { return proto.CompactTextString(m) }
func (*RspConfig) ProtoMessage()    {}
func (*RspConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{117}
}

func (m *RspConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspConfig.Unmarshal(m, b)
}
func (m *RspConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspConfig.Marshal(b, m, deterministic)
}
func (m *RspConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspConfig.Merge(m, src)
}
func (m *RspConfig) XXX_Size() int {
	return xxx_messageInfo_RspConfig.Size(m)
}
func (m *RspConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RspConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RspConfig proto.InternalMessageInfo

func (m *RspConfig) GetInvitationCode() string {
	if m != nil {
		return m.InvitationCode
	}
	return ""
}

func (m *RspConfig) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspConfig) GetInvite() uint64 {
	if m != nil {
		return m.Invite
	}
	return 0
}

func (m *RspConfig) GetIsUpgrade() bool {
	if m != nil {
		return m.IsUpgrade
	}
	return false
}

func (m *RspConfig) GetFreeCapacity() uint64 {
	if m != nil {
		return m.FreeCapacity
	}
	return 0
}

func (m *RspConfig) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspConfig) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspConfig) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspConfig) GetCapacity() uint64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

type ReqInvite struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	InvitationCode       string   `protobuf:"bytes,3,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqInvite) Reset()         { *m = ReqInvite{} }
func (m *ReqInvite) String() string { return proto.CompactTextString(m) }
func (*ReqInvite) ProtoMessage()    {}
func (*ReqInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{118}
}

func (m *ReqInvite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqInvite.Unmarshal(m, b)
}
func (m *ReqInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqInvite.Marshal(b, m, deterministic)
}
func (m *ReqInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqInvite.Merge(m, src)
}
func (m *ReqInvite) XXX_Size() int {
	return xxx_messageInfo_ReqInvite.Size(m)
}
func (m *ReqInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqInvite.DiscardUnknown(m)
}

var xxx_messageInfo_ReqInvite proto.InternalMessageInfo

func (m *ReqInvite) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqInvite) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqInvite) GetInvitationCode() string {
	if m != nil {
		return m.InvitationCode
	}
	return ""
}

func (m *ReqInvite) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspInvite struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	CapacityDelta        uint64   `protobuf:"varint,2,opt,name=capacity_delta,json=capacityDelta,proto3" json:"capacity_delta,omitempty"`
	CurrentCapacity      uint64   `protobuf:"varint,3,opt,name=current_capacity,json=currentCapacity,proto3" json:"current_capacity,omitempty"`
	ReqId                string   `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,5,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,6,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspInvite) Reset()         { *m = RspInvite{} }
func (m *RspInvite) String() string { return proto.CompactTextString(m) }
func (*RspInvite) ProtoMessage()    {}
func (*RspInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{119}
}

func (m *RspInvite) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspInvite.Unmarshal(m, b)
}
func (m *RspInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspInvite.Marshal(b, m, deterministic)
}
func (m *RspInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspInvite.Merge(m, src)
}
func (m *RspInvite) XXX_Size() int {
	return xxx_messageInfo_RspInvite.Size(m)
}
func (m *RspInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_RspInvite.DiscardUnknown(m)
}

var xxx_messageInfo_RspInvite proto.InternalMessageInfo

func (m *RspInvite) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspInvite) GetCapacityDelta() uint64 {
	if m != nil {
		return m.CapacityDelta
	}
	return 0
}

func (m *RspInvite) GetCurrentCapacity() uint64 {
	if m != nil {
		return m.CurrentCapacity
	}
	return 0
}

func (m *RspInvite) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspInvite) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspInvite) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

type ReqGetReward struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetReward) Reset()         { *m = ReqGetReward{} }
func (m *ReqGetReward) String() string { return proto.CompactTextString(m) }
func (*ReqGetReward) ProtoMessage()    {}
func (*ReqGetReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{120}
}

func (m *ReqGetReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetReward.Unmarshal(m, b)
}
func (m *ReqGetReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetReward.Marshal(b, m, deterministic)
}
func (m *ReqGetReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetReward.Merge(m, src)
}
func (m *ReqGetReward) XXX_Size() int {
	return xxx_messageInfo_ReqGetReward.Size(m)
}
func (m *ReqGetReward) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetReward.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetReward proto.InternalMessageInfo

func (m *ReqGetReward) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqGetReward) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqGetReward) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspGetReward struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	CurrentCapacity      uint64   `protobuf:"varint,5,opt,name=current_capacity,json=currentCapacity,proto3" json:"current_capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspGetReward) Reset()         { *m = RspGetReward{} }
func (m *RspGetReward) String() string { return proto.CompactTextString(m) }
func (*RspGetReward) ProtoMessage()    {}
func (*RspGetReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{121}
}

func (m *RspGetReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGetReward.Unmarshal(m, b)
}
func (m *RspGetReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGetReward.Marshal(b, m, deterministic)
}
func (m *RspGetReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGetReward.Merge(m, src)
}
func (m *RspGetReward) XXX_Size() int {
	return xxx_messageInfo_RspGetReward.Size(m)
}
func (m *RspGetReward) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGetReward.DiscardUnknown(m)
}

var xxx_messageInfo_RspGetReward proto.InternalMessageInfo

func (m *RspGetReward) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspGetReward) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspGetReward) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspGetReward) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspGetReward) GetCurrentCapacity() uint64 {
	if m != nil {
		return m.CurrentCapacity
	}
	return 0
}

type ReqGetCapacity struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqGetCapacity) Reset()         { *m = ReqGetCapacity{} }
func (m *ReqGetCapacity) String() string { return proto.CompactTextString(m) }
func (*ReqGetCapacity) ProtoMessage()    {}
func (*ReqGetCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{122}
}

func (m *ReqGetCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqGetCapacity.Unmarshal(m, b)
}
func (m *ReqGetCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqGetCapacity.Marshal(b, m, deterministic)
}
func (m *ReqGetCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqGetCapacity.Merge(m, src)
}
func (m *ReqGetCapacity) XXX_Size() int {
	return xxx_messageInfo_ReqGetCapacity.Size(m)
}
func (m *ReqGetCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqGetCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_ReqGetCapacity proto.InternalMessageInfo

func (m *ReqGetCapacity) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqGetCapacity) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqGetCapacity) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspGetCapacity struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Capacity             uint64   `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	FreeCapacity         uint64   `protobuf:"varint,6,opt,name=free_capacity,json=freeCapacity,proto3" json:"free_capacity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspGetCapacity) Reset()         { *m = RspGetCapacity{} }
func (m *RspGetCapacity) String() string { return proto.CompactTextString(m) }
func (*RspGetCapacity) ProtoMessage()    {}
func (*RspGetCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{123}
}

func (m *RspGetCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspGetCapacity.Unmarshal(m, b)
}
func (m *RspGetCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspGetCapacity.Marshal(b, m, deterministic)
}
func (m *RspGetCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspGetCapacity.Merge(m, src)
}
func (m *RspGetCapacity) XXX_Size() int {
	return xxx_messageInfo_RspGetCapacity.Size(m)
}
func (m *RspGetCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_RspGetCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_RspGetCapacity proto.InternalMessageInfo

func (m *RspGetCapacity) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *RspGetCapacity) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspGetCapacity) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspGetCapacity) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspGetCapacity) GetCapacity() uint64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *RspGetCapacity) GetFreeCapacity() uint64 {
	if m != nil {
		return m.FreeCapacity
	}
	return 0
}

type ReqFileSort struct {
	Files                []*FileInfo `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	ReqId                string      `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string      `protobuf:"bytes,3,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	AlbumId              string      `protobuf:"bytes,5,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReqFileSort) Reset()         { *m = ReqFileSort{} }
func (m *ReqFileSort) String() string { return proto.CompactTextString(m) }
func (*ReqFileSort) ProtoMessage()    {}
func (*ReqFileSort) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{124}
}

func (m *ReqFileSort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFileSort.Unmarshal(m, b)
}
func (m *ReqFileSort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFileSort.Marshal(b, m, deterministic)
}
func (m *ReqFileSort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFileSort.Merge(m, src)
}
func (m *ReqFileSort) XXX_Size() int {
	return xxx_messageInfo_ReqFileSort.Size(m)
}
func (m *ReqFileSort) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFileSort.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFileSort proto.InternalMessageInfo

func (m *ReqFileSort) GetFiles() []*FileInfo {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *ReqFileSort) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqFileSort) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqFileSort) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqFileSort) GetAlbumId() string {
	if m != nil {
		return m.AlbumId
	}
	return ""
}

type RspFileSort struct {
	ReqId                string   `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	P2PAddress           string   `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Result               *Result  `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspFileSort) Reset()         { *m = RspFileSort{} }
func (m *RspFileSort) String() string { return proto.CompactTextString(m) }
func (*RspFileSort) ProtoMessage()    {}
func (*RspFileSort) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{125}
}

func (m *RspFileSort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFileSort.Unmarshal(m, b)
}
func (m *RspFileSort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFileSort.Marshal(b, m, deterministic)
}
func (m *RspFileSort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFileSort.Merge(m, src)
}
func (m *RspFileSort) XXX_Size() int {
	return xxx_messageInfo_RspFileSort.Size(m)
}
func (m *RspFileSort) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFileSort.DiscardUnknown(m)
}

var xxx_messageInfo_RspFileSort proto.InternalMessageInfo

func (m *RspFileSort) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFileSort) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFileSort) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFileSort) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqFindDirectory struct {
	P2PAddress           string   `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string   `protobuf:"bytes,2,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,3,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqFindDirectory) Reset()         { *m = ReqFindDirectory{} }
func (m *ReqFindDirectory) String() string { return proto.CompactTextString(m) }
func (*ReqFindDirectory) ProtoMessage()    {}
func (*ReqFindDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{126}
}

func (m *ReqFindDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqFindDirectory.Unmarshal(m, b)
}
func (m *ReqFindDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqFindDirectory.Marshal(b, m, deterministic)
}
func (m *ReqFindDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqFindDirectory.Merge(m, src)
}
func (m *ReqFindDirectory) XXX_Size() int {
	return xxx_messageInfo_ReqFindDirectory.Size(m)
}
func (m *ReqFindDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqFindDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_ReqFindDirectory proto.InternalMessageInfo

func (m *ReqFindDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqFindDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqFindDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

type RspFindDirectory struct {
	FileInfo             []*FileInfo `protobuf:"bytes,1,rep,name=file_info,json=fileInfo,proto3" json:"file_info,omitempty"`
	P2PAddress           string      `protobuf:"bytes,2,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	WalletAddress        string      `protobuf:"bytes,3,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string      `protobuf:"bytes,4,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result     `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RspFindDirectory) Reset()         { *m = RspFindDirectory{} }
func (m *RspFindDirectory) String() string { return proto.CompactTextString(m) }
func (*RspFindDirectory) ProtoMessage()    {}
func (*RspFindDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{127}
}

func (m *RspFindDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspFindDirectory.Unmarshal(m, b)
}
func (m *RspFindDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspFindDirectory.Marshal(b, m, deterministic)
}
func (m *RspFindDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspFindDirectory.Merge(m, src)
}
func (m *RspFindDirectory) XXX_Size() int {
	return xxx_messageInfo_RspFindDirectory.Size(m)
}
func (m *RspFindDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_RspFindDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_RspFindDirectory proto.InternalMessageInfo

func (m *RspFindDirectory) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

func (m *RspFindDirectory) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *RspFindDirectory) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspFindDirectory) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspFindDirectory) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqCustomerAddVolume struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Volume               uint64   `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCustomerAddVolume) Reset()         { *m = ReqCustomerAddVolume{} }
func (m *ReqCustomerAddVolume) String() string { return proto.CompactTextString(m) }
func (*ReqCustomerAddVolume) ProtoMessage()    {}
func (*ReqCustomerAddVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{128}
}

func (m *ReqCustomerAddVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCustomerAddVolume.Unmarshal(m, b)
}
func (m *ReqCustomerAddVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCustomerAddVolume.Marshal(b, m, deterministic)
}
func (m *ReqCustomerAddVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCustomerAddVolume.Merge(m, src)
}
func (m *ReqCustomerAddVolume) XXX_Size() int {
	return xxx_messageInfo_ReqCustomerAddVolume.Size(m)
}
func (m *ReqCustomerAddVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCustomerAddVolume.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCustomerAddVolume proto.InternalMessageInfo

func (m *ReqCustomerAddVolume) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqCustomerAddVolume) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqCustomerAddVolume) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ReqCustomerAddVolume) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type RspCustomerAddVolume struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspCustomerAddVolume) Reset()         { *m = RspCustomerAddVolume{} }
func (m *RspCustomerAddVolume) String() string { return proto.CompactTextString(m) }
func (*RspCustomerAddVolume) ProtoMessage()    {}
func (*RspCustomerAddVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{129}
}

func (m *RspCustomerAddVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspCustomerAddVolume.Unmarshal(m, b)
}
func (m *RspCustomerAddVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspCustomerAddVolume.Marshal(b, m, deterministic)
}
func (m *RspCustomerAddVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspCustomerAddVolume.Merge(m, src)
}
func (m *RspCustomerAddVolume) XXX_Size() int {
	return xxx_messageInfo_RspCustomerAddVolume.Size(m)
}
func (m *RspCustomerAddVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_RspCustomerAddVolume.DiscardUnknown(m)
}

var xxx_messageInfo_RspCustomerAddVolume proto.InternalMessageInfo

func (m *RspCustomerAddVolume) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspCustomerAddVolume) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspCustomerAddVolume) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReqCustomerUseVolume struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	RequiredVolume       uint64   `protobuf:"varint,3,opt,name=required_volume,json=requiredVolume,proto3" json:"required_volume,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqCustomerUseVolume) Reset()         { *m = ReqCustomerUseVolume{} }
func (m *ReqCustomerUseVolume) String() string { return proto.CompactTextString(m) }
func (*ReqCustomerUseVolume) ProtoMessage()    {}
func (*ReqCustomerUseVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{130}
}

func (m *ReqCustomerUseVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqCustomerUseVolume.Unmarshal(m, b)
}
func (m *ReqCustomerUseVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqCustomerUseVolume.Marshal(b, m, deterministic)
}
func (m *ReqCustomerUseVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqCustomerUseVolume.Merge(m, src)
}
func (m *ReqCustomerUseVolume) XXX_Size() int {
	return xxx_messageInfo_ReqCustomerUseVolume.Size(m)
}
func (m *ReqCustomerUseVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqCustomerUseVolume.DiscardUnknown(m)
}

var xxx_messageInfo_ReqCustomerUseVolume proto.InternalMessageInfo

func (m *ReqCustomerUseVolume) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *ReqCustomerUseVolume) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ReqCustomerUseVolume) GetRequiredVolume() uint64 {
	if m != nil {
		return m.RequiredVolume
	}
	return 0
}

func (m *ReqCustomerUseVolume) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type RspCustomerUseVolume struct {
	WalletAddress        string   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ReqId                string   `protobuf:"bytes,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Result               *Result  `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspCustomerUseVolume) Reset()         { *m = RspCustomerUseVolume{} }
func (m *RspCustomerUseVolume) String() string { return proto.CompactTextString(m) }
func (*RspCustomerUseVolume) ProtoMessage()    {}
func (*RspCustomerUseVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{131}
}

func (m *RspCustomerUseVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspCustomerUseVolume.Unmarshal(m, b)
}
func (m *RspCustomerUseVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspCustomerUseVolume.Marshal(b, m, deterministic)
}
func (m *RspCustomerUseVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspCustomerUseVolume.Merge(m, src)
}
func (m *RspCustomerUseVolume) XXX_Size() int {
	return xxx_messageInfo_RspCustomerUseVolume.Size(m)
}
func (m *RspCustomerUseVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_RspCustomerUseVolume.DiscardUnknown(m)
}

var xxx_messageInfo_RspCustomerUseVolume proto.InternalMessageInfo

func (m *RspCustomerUseVolume) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *RspCustomerUseVolume) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *RspCustomerUseVolume) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type RelayMessage struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayMessage) Reset()         { *m = RelayMessage{} }
func (m *RelayMessage) String() string { return proto.CompactTextString(m) }
func (*RelayMessage) ProtoMessage()    {}
func (*RelayMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{132}
}

func (m *RelayMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayMessage.Unmarshal(m, b)
}
func (m *RelayMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayMessage.Marshal(b, m, deterministic)
}
func (m *RelayMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayMessage.Merge(m, src)
}
func (m *RelayMessage) XXX_Size() int {
	return xxx_messageInfo_RelayMessage.Size(m)
}
func (m *RelayMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RelayMessage proto.InternalMessageInfo

func (m *RelayMessage) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RelayMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReqTransferAggregateTraffic struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTransferAggregateTraffic) Reset()         { *m = ReqTransferAggregateTraffic{} }
func (m *ReqTransferAggregateTraffic) String() string { return proto.CompactTextString(m) }
func (*ReqTransferAggregateTraffic) ProtoMessage()    {}
func (*ReqTransferAggregateTraffic) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{133}
}

func (m *ReqTransferAggregateTraffic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransferAggregateTraffic.Unmarshal(m, b)
}
func (m *ReqTransferAggregateTraffic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransferAggregateTraffic.Marshal(b, m, deterministic)
}
func (m *ReqTransferAggregateTraffic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransferAggregateTraffic.Merge(m, src)
}
func (m *ReqTransferAggregateTraffic) XXX_Size() int {
	return xxx_messageInfo_ReqTransferAggregateTraffic.Size(m)
}
func (m *ReqTransferAggregateTraffic) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransferAggregateTraffic.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransferAggregateTraffic proto.InternalMessageInfo

func (m *ReqTransferAggregateTraffic) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type ReqTransferRecordTraffic struct {
	ProviderP2PAddress    string   `protobuf:"bytes,1,opt,name=provider_p2p_address,json=providerP2pAddress,proto3" json:"provider_p2p_address,omitempty"`
	ProviderWalletAddress string   `protobuf:"bytes,2,opt,name=provider_wallet_address,json=providerWalletAddress,proto3" json:"provider_wallet_address,omitempty"`
	ConsumerWalletAddress string   `protobuf:"bytes,3,opt,name=consumer_wallet_address,json=consumerWalletAddress,proto3" json:"consumer_wallet_address,omitempty"`
	TaskId                string   `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType              int64    `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Volume                uint64   `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`
	DeliveryTime          int64    `protobuf:"varint,7,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	ResponseTime          int64    `protobuf:"varint,8,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ReqTransferRecordTraffic) Reset()         { *m = ReqTransferRecordTraffic{} }
func (m *ReqTransferRecordTraffic) String() string { return proto.CompactTextString(m) }
func (*ReqTransferRecordTraffic) ProtoMessage()    {}
func (*ReqTransferRecordTraffic) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{134}
}

func (m *ReqTransferRecordTraffic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTransferRecordTraffic.Unmarshal(m, b)
}
func (m *ReqTransferRecordTraffic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTransferRecordTraffic.Marshal(b, m, deterministic)
}
func (m *ReqTransferRecordTraffic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTransferRecordTraffic.Merge(m, src)
}
func (m *ReqTransferRecordTraffic) XXX_Size() int {
	return xxx_messageInfo_ReqTransferRecordTraffic.Size(m)
}
func (m *ReqTransferRecordTraffic) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTransferRecordTraffic.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTransferRecordTraffic proto.InternalMessageInfo

func (m *ReqTransferRecordTraffic) GetProviderP2PAddress() string {
	if m != nil {
		return m.ProviderP2PAddress
	}
	return ""
}

func (m *ReqTransferRecordTraffic) GetProviderWalletAddress() string {
	if m != nil {
		return m.ProviderWalletAddress
	}
	return ""
}

func (m *ReqTransferRecordTraffic) GetConsumerWalletAddress() string {
	if m != nil {
		return m.ConsumerWalletAddress
	}
	return ""
}

func (m *ReqTransferRecordTraffic) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *ReqTransferRecordTraffic) GetTaskType() int64 {
	if m != nil {
		return m.TaskType
	}
	return 0
}

func (m *ReqTransferRecordTraffic) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ReqTransferRecordTraffic) GetDeliveryTime() int64 {
	if m != nil {
		return m.DeliveryTime
	}
	return 0
}

func (m *ReqTransferRecordTraffic) GetResponseTime() int64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

type ReqReportNodeStatus struct {
	P2PAddress           string        `protobuf:"bytes,1,opt,name=p2p_address,json=p2pAddress,proto3" json:"p2p_address,omitempty"`
	Cpu                  *CpuStat      `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               *MemoryStat   `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk                 *DiskStat     `protobuf:"bytes,4,opt,name=disk,proto3" json:"disk,omitempty"`
	Bandwidth            *BandwithStat `protobuf:"bytes,5,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqReportNodeStatus) Reset()         { *m = ReqReportNodeStatus{} }
func (m *ReqReportNodeStatus) String() string { return proto.CompactTextString(m) }
func (*ReqReportNodeStatus) ProtoMessage()    {}
func (*ReqReportNodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_796f3901df86e73f, []int{135}
}

func (m *ReqReportNodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqReportNodeStatus.Unmarshal(m, b)
}
func (m *ReqReportNodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqReportNodeStatus.Marshal(b, m, deterministic)
}
func (m *ReqReportNodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqReportNodeStatus.Merge(m, src)
}
func (m *ReqReportNodeStatus) XXX_Size() int {
	return xxx_messageInfo_ReqReportNodeStatus.Size(m)
}
func (m *ReqReportNodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqReportNodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ReqReportNodeStatus proto.InternalMessageInfo

func (m *ReqReportNodeStatus) GetP2PAddress() string {
	if m != nil {
		return m.P2PAddress
	}
	return ""
}

func (m *ReqReportNodeStatus) GetCpu() *CpuStat {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ReqReportNodeStatus) GetMemory() *MemoryStat {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ReqReportNodeStatus) GetDisk() *DiskStat {
	if m != nil {
		return m.Disk
	}
	return nil
}

func (m *ReqReportNodeStatus) GetBandwidth() *BandwithStat {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqGetPPList)(nil), "protos.ReqGetPPList")
	proto.RegisterType((*RspGetPPList)(nil), "protos.RspGetPPList")
	proto.RegisterType((*ReqRegister)(nil), "protos.ReqRegister")
	proto.RegisterType((*RspRegister)(nil), "protos.RspRegister")
	proto.RegisterType((*ReqMining)(nil), "protos.ReqMining")
	proto.RegisterType((*RspMining)(nil), "protos.RspMining")
	proto.RegisterType((*ReqUploadFile)(nil), "protos.ReqUploadFile")
	proto.RegisterType((*RspUploadFile)(nil), "protos.RspUploadFile")
	proto.RegisterType((*ReqUploadFileSlice)(nil), "protos.ReqUploadFileSlice")
	proto.RegisterType((*RspUploadFileSlice)(nil), "protos.RspUploadFileSlice")
	proto.RegisterType((*UploadSpeedOfProgress)(nil), "protos.UploadSpeedOfProgress")
	proto.RegisterType((*ReportUploadSliceResult)(nil), "protos.ReportUploadSliceResult")
	proto.RegisterType((*RspReportUploadSliceResult)(nil), "protos.RspReportUploadSliceResult")
	proto.RegisterType((*Uploaded)(nil), "protos.Uploaded")
	proto.RegisterType((*ReqFindMyFileList)(nil), "protos.ReqFindMyFileList")
	proto.RegisterType((*RspFindMyFileList)(nil), "protos.RspFindMyFileList")
	proto.RegisterType((*ReqFindDirectoryTree)(nil), "protos.ReqFindDirectoryTree")
	proto.RegisterType((*RspFindDirectoryTree)(nil), "protos.RspFindDirectoryTree")
	proto.RegisterType((*ReqFileStorageInfo)(nil), "protos.ReqFileStorageInfo")
	proto.RegisterType((*RspFileStorageInfo)(nil), "protos.RspFileStorageInfo")
	proto.RegisterType((*ReqDownloadSlice)(nil), "protos.ReqDownloadSlice")
	proto.RegisterType((*RspDownloadSlice)(nil), "protos.RspDownloadSlice")
	proto.RegisterType((*ReqDownloadSliceWrong)(nil), "protos.ReqDownloadSliceWrong")
	proto.RegisterType((*RspDownloadSliceWrong)(nil), "protos.RspDownloadSliceWrong")
	proto.RegisterType((*ReqDownloadSlicePause)(nil), "protos.ReqDownloadSlicePause")
	proto.RegisterType((*RspDownloadSlicePause)(nil), "protos.RspDownloadSlicePause")
	proto.RegisterType((*ReqReportDownloadResult)(nil), "protos.ReqReportDownloadResult")
	proto.RegisterType((*RspReportDownloadResult)(nil), "protos.RspReportDownloadResult")
	proto.RegisterType((*ReqReportTaskBP)(nil), "protos.ReqReportTaskBP")
	proto.RegisterType((*ReqRegisterNewPP)(nil), "protos.ReqRegisterNewPP")
	proto.RegisterType((*RspRegisterNewPP)(nil), "protos.RspRegisterNewPP")
	proto.RegisterType((*ReqActivatePP)(nil), "protos.ReqActivatePP")
	proto.RegisterType((*RspActivatePP)(nil), "protos.RspActivatePP")
	proto.RegisterType((*ReqActivatedPP)(nil), "protos.ReqActivatedPP")
	proto.RegisterType((*ReqActivatedSP)(nil), "protos.ReqActivatedSP")
	proto.RegisterType((*RspActivatedPP)(nil), "protos.RspActivatedPP")
	proto.RegisterType((*ReqDeactivatePP)(nil), "protos.ReqDeactivatePP")
	proto.RegisterType((*RspDeactivatePP)(nil), "protos.RspDeactivatePP")
	proto.RegisterType((*ReqUnbondingPP)(nil), "protos.ReqUnbondingPP")
	proto.RegisterType((*RspUnbondingPP)(nil), "protos.RspUnbondingPP")
	proto.RegisterType((*ReqDeactivatedPP)(nil), "protos.ReqDeactivatedPP")
	proto.RegisterType((*RspDeactivatedPP)(nil), "protos.RspDeactivatedPP")
	proto.RegisterType((*ReqUnbondingSP)(nil), "protos.ReqUnbondingSP")
	proto.RegisterType((*RspUnbondingSP)(nil), "protos.RspUnbondingSP")
	proto.RegisterType((*ReqDeactivatedSP)(nil), "protos.ReqDeactivatedSP")
	proto.RegisterType((*RspDeactivatedSP)(nil), "protos.RspDeactivatedSP")
	proto.RegisterType((*ReqPrepay)(nil), "protos.ReqPrepay")
	proto.RegisterType((*RspPrepay)(nil), "protos.RspPrepay")
	proto.RegisterType((*ReqPrepaid)(nil), "protos.ReqPrepaid")
	proto.RegisterType((*RspPrepaid)(nil), "protos.RspPrepaid")
	proto.RegisterType((*ReqDeleteFile)(nil), "protos.ReqDeleteFile")
	proto.RegisterType((*RspDeleteFile)(nil), "protos.RspDeleteFile")
	proto.RegisterType((*ReqTransferNotice)(nil), "protos.ReqTransferNotice")
	proto.RegisterType((*RspTransferNotice)(nil), "protos.RspTransferNotice")
	proto.RegisterType((*ReqValidateTransferCer)(nil), "protos.ReqValidateTransferCer")
	proto.RegisterType((*RspValidateTransferCer)(nil), "protos.RspValidateTransferCer")
	proto.RegisterType((*ReqTransferDownload)(nil), "protos.ReqTransferDownload")
	proto.RegisterType((*RspTransferDownload)(nil), "protos.RspTransferDownload")
	proto.RegisterType((*RspTransferDownloadResult)(nil), "protos.RspTransferDownloadResult")
	proto.RegisterType((*ReqReportTransferResult)(nil), "protos.ReqReportTransferResult")
	proto.RegisterType((*RspReportTransferResult)(nil), "protos.RspReportTransferResult")
	proto.RegisterType((*ReqGetHDInfo)(nil), "protos.ReqGetHDInfo")
	proto.RegisterType((*RspGetHDInfo)(nil), "protos.RspGetHDInfo")
	proto.RegisterType((*ReqSendChatMessages)(nil), "protos.ReqSendChatMessages")
	proto.RegisterType((*RspSendChatMessages)(nil), "protos.RspSendChatMessages")
	proto.RegisterType((*ReqDeleteSlice)(nil), "protos.ReqDeleteSlice")
	proto.RegisterType((*RspDeleteSlice)(nil), "protos.RspDeleteSlice")
	proto.RegisterType((*ReqMakeDirectory)(nil), "protos.ReqMakeDirectory")
	proto.RegisterType((*RspMakeDirectory)(nil), "protos.RspMakeDirectory")
	proto.RegisterType((*ReqRemoveDirectory)(nil), "protos.ReqRemoveDirectory")
	proto.RegisterType((*RspRemoveDirectory)(nil), "protos.RspRemoveDirectory")
	proto.RegisterType((*ReqMoveFileDirectory)(nil), "protos.ReqMoveFileDirectory")
	proto.RegisterType((*RspMoveFileDirectory)(nil), "protos.RspMoveFileDirectory")
	proto.RegisterType((*ReqBLSPublicKey)(nil), "protos.ReqBLSPublicKey")
	proto.RegisterType((*RspBPBLSPublicKey)(nil), "protos.RspBPBLSPublicKey")
	proto.RegisterType((*ReqBalance)(nil), "protos.ReqBalance")
	proto.RegisterType((*RspBalance)(nil), "protos.RspBalance")
	proto.RegisterType((*ReqTransaction)(nil), "protos.ReqTransaction")
	proto.RegisterType((*RspTransaction)(nil), "protos.RspTransaction")
	proto.RegisterType((*ReqBlockInfo)(nil), "protos.ReqBlockInfo")
	proto.RegisterType((*RspBlockInfo)(nil), "protos.RspBlockInfo")
	proto.RegisterType((*ReqBlockCheck)(nil), "protos.ReqBlockCheck")
	proto.RegisterType((*RspBlockCheck)(nil), "protos.RspBlockCheck")
	proto.RegisterType((*BlockCheckInfo)(nil), "protos.BlockCheckInfo")
	proto.RegisterType((*ReqDownloadTaskInfo)(nil), "protos.ReqDownloadTaskInfo")
	proto.RegisterType((*RspDownloadTaskInfo)(nil), "protos.RspDownloadTaskInfo")
	proto.RegisterType((*ReqShareLink)(nil), "protos.ReqShareLink")
	proto.RegisterType((*RspShareLink)(nil), "protos.RspShareLink")
	proto.RegisterType((*ReqShareFile)(nil), "protos.ReqShareFile")
	proto.RegisterType((*RspShareFile)(nil), "protos.RspShareFile")
	proto.RegisterType((*ReqDeleteShare)(nil), "protos.ReqDeleteShare")
	proto.RegisterType((*RspDeleteShare)(nil), "protos.RspDeleteShare")
	proto.RegisterType((*ReqGetShareFile)(nil), "protos.ReqGetShareFile")
	proto.RegisterType((*RspGetShareFile)(nil), "protos.RspGetShareFile")
	proto.RegisterType((*ReqSaveFile)(nil), "protos.ReqSaveFile")
	proto.RegisterType((*RspSaveFile)(nil), "protos.RspSaveFile")
	proto.RegisterType((*ReqSaveFolder)(nil), "protos.ReqSaveFolder")
	proto.RegisterType((*RspSaveFolder)(nil), "protos.RspSaveFolder")
	proto.RegisterType((*ReqCreateAlbum)(nil), "protos.ReqCreateAlbum")
	proto.RegisterType((*RspCreateAlbum)(nil), "protos.RspCreateAlbum")
	proto.RegisterType((*ReqEditAlbum)(nil), "protos.ReqEditAlbum")
	proto.RegisterType((*RspEditAlbum)(nil), "protos.RspEditAlbum")
	proto.RegisterType((*ReqAlbumContent)(nil), "protos.ReqAlbumContent")
	proto.RegisterType((*RspAlbumContent)(nil), "protos.RspAlbumContent")
	proto.RegisterType((*ReqSearchAlbum)(nil), "protos.ReqSearchAlbum")
	proto.RegisterType((*RspSearchAlbum)(nil), "protos.RspSearchAlbum")
	proto.RegisterType((*ReqFindMyAlbum)(nil), "protos.ReqFindMyAlbum")
	proto.RegisterType((*RspFindMyAlbum)(nil), "protos.RspFindMyAlbum")
	proto.RegisterType((*ReqCollectionAlbum)(nil), "protos.ReqCollectionAlbum")
	proto.RegisterType((*RspCollectionAlbum)(nil), "protos.RspCollectionAlbum")
	proto.RegisterType((*ReqAbstractAlbum)(nil), "protos.ReqAbstractAlbum")
	proto.RegisterType((*RspAbstractAlbum)(nil), "protos.RspAbstractAlbum")
	proto.RegisterType((*ReqMyCollectionAlbum)(nil), "protos.ReqMyCollectionAlbum")
	proto.RegisterType((*RspMyCollectionAlbum)(nil), "protos.RspMyCollectionAlbum")
	proto.RegisterType((*ReqDeleteAlbum)(nil), "protos.ReqDeleteAlbum")
	proto.RegisterType((*RspDeleteAlbum)(nil), "protos.RspDeleteAlbum")
	proto.RegisterType((*ReqConfig)(nil), "protos.ReqConfig")
	proto.RegisterType((*RspConfig)(nil), "protos.RspConfig")
	proto.RegisterType((*ReqInvite)(nil), "protos.ReqInvite")
	proto.RegisterType((*RspInvite)(nil), "protos.RspInvite")
	proto.RegisterType((*ReqGetReward)(nil), "protos.ReqGetReward")
	proto.RegisterType((*RspGetReward)(nil), "protos.RspGetReward")
	proto.RegisterType((*ReqGetCapacity)(nil), "protos.ReqGetCapacity")
	proto.RegisterType((*RspGetCapacity)(nil), "protos.RspGetCapacity")
	proto.RegisterType((*ReqFileSort)(nil), "protos.ReqFileSort")
	proto.RegisterType((*RspFileSort)(nil), "protos.RspFileSort")
	proto.RegisterType((*ReqFindDirectory)(nil), "protos.ReqFindDirectory")
	proto.RegisterType((*RspFindDirectory)(nil), "protos.RspFindDirectory")
	proto.RegisterType((*ReqCustomerAddVolume)(nil), "protos.ReqCustomerAddVolume")
	proto.RegisterType((*RspCustomerAddVolume)(nil), "protos.RspCustomerAddVolume")
	proto.RegisterType((*ReqCustomerUseVolume)(nil), "protos.ReqCustomerUseVolume")
	proto.RegisterType((*RspCustomerUseVolume)(nil), "protos.RspCustomerUseVolume")
	proto.RegisterType((*RelayMessage)(nil), "protos.RelayMessage")
	proto.RegisterType((*ReqTransferAggregateTraffic)(nil), "protos.ReqTransferAggregateTraffic")
	proto.RegisterType((*ReqTransferRecordTraffic)(nil), "protos.ReqTransferRecordTraffic")
	proto.RegisterType((*ReqReportNodeStatus)(nil), "protos.ReqReportNodeStatus")
}

func init() { proto.RegisterFile("sds.proto", fileDescriptor_796f3901df86e73f) }

var fileDescriptor_796f3901df86e73f = []byte{
	// 4443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5c, 0x4d, 0x90, 0xdc, 0x48,
	0x56, 0x0e, 0xd5, 0x7f, 0xbd, 0xae, 0xae, 0x6e, 0xab, 0xdd, 0x76, 0x7b, 0xbc, 0x66, 0x66, 0xe4,
	0x9d, 0x1f, 0x2f, 0x3b, 0x8e, 0x19, 0x7b, 0x70, 0xcc, 0x0e, 0x31, 0x0b, 0xee, 0x36, 0xf3, 0x03,
	0x63, 0xbb, 0x50, 0xb5, 0x3d, 0xdc, 0x14, 0x2a, 0x29, 0xab, 0x5a, 0xdb, 0x55, 0x92, 0x5a, 0xa9,
	0xea, 0x76, 0x79, 0x21, 0x62, 0x39, 0xc2, 0x06, 0x2c, 0xec, 0xc2, 0x01, 0x86, 0x88, 0xbd, 0x70,
	0xe3, 0xc0, 0xcf, 0xc0, 0x01, 0xb8, 0x70, 0x20, 0x08, 0x08, 0x82, 0x3d, 0xed, 0x61, 0x09, 0x0e,
	0x43, 0xc4, 0xf2, 0x13, 0xc1, 0xcf, 0x89, 0x00, 0x2e, 0x1c, 0x08, 0xbd, 0xcc, 0x94, 0x52, 0x2a,
	0x55, 0x95, 0xec, 0xa9, 0x6a, 0xf7, 0x9c, 0xaa, 0x94, 0x99, 0xca, 0x7c, 0xef, 0x7b, 0x2f, 0x5f,
	0xbe, 0x7c, 0xf9, 0x52, 0xd0, 0xa4, 0x36, 0xbd, 0xee, 0x07, 0x5e, 0xe8, 0xa9, 0x35, 0xfc, 0xa1,
	0xcf, 0xb5, 0xa9, 0x4d, 0x0d, 0xcb, 0x1b, 0x8d, 0x58, 0xb9, 0x76, 0x1b, 0x5a, 0x3a, 0x39, 0x7a,
	0x8f, 0x84, 0x9d, 0xce, 0x87, 0x0e, 0x0d, 0xd5, 0x37, 0x00, 0x46, 0x13, 0xc3, 0xb4, 0xed, 0x80,
	0x50, 0xba, 0xa3, 0xbc, 0xa0, 0xbc, 0xba, 0x76, 0x43, 0x65, 0x6d, 0xe9, 0xf5, 0x4e, 0x67, 0xd7,
	0xa4, 0xe4, 0x03, 0xb7, 0xef, 0xe9, 0xcd, 0xd1, 0xe4, 0x36, 0x6b, 0xa4, 0x59, 0xd0, 0xd2, 0xa9,
	0x9f, 0x74, 0xf1, 0xa3, 0x50, 0xf7, 0x7d, 0x63, 0xe8, 0xd0, 0x70, 0x47, 0x79, 0xa1, 0x3c, 0xe3,
	0xfd, 0x9a, 0xef, 0x63, 0xe3, 0x97, 0xa1, 0x16, 0x10, 0x3a, 0x1e, 0x86, 0x3b, 0x25, 0x1c, 0xab,
	0x2d, 0xda, 0xea, 0x58, 0xaa, 0xf3, 0x5a, 0xed, 0x57, 0x14, 0x58, 0xd3, 0xc9, 0x91, 0x4e, 0x06,
	0x0e, 0x0d, 0x49, 0xa0, 0x7e, 0x19, 0xea, 0x8b, 0x89, 0x14, 0x4d, 0xd4, 0x2b, 0x00, 0xfe, 0xb8,
	0x37, 0x74, 0x2c, 0xe3, 0x90, 0x4c, 0x70, 0xa4, 0x96, 0xde, 0x64, 0x25, 0x3f, 0x43, 0x26, 0x19,
	0xa6, 0xcb, 0x45, 0x98, 0xfe, 0x1a, 0xac, 0xe9, 0xd4, 0x8f, 0xc9, 0x49, 0xd8, 0x50, 0xe6, 0xb1,
	0xa1, 0x3e, 0x0f, 0x6b, 0xfe, 0x0d, 0x3f, 0x1e, 0x2a, 0xa2, 0xa4, 0xa9, 0x83, 0x7f, 0xc3, 0xe7,
	0xfd, 0xaa, 0x2a, 0x54, 0x1c, 0xda, 0xe9, 0x20, 0x11, 0x0d, 0x1d, 0xff, 0x6b, 0x43, 0x68, 0xea,
	0xe4, 0xe8, 0xae, 0xe3, 0x3a, 0xee, 0x60, 0xb9, 0x8c, 0xab, 0x50, 0xa1, 0xce, 0xc0, 0xc5, 0xd1,
	0x5a, 0x3a, 0xfe, 0xd7, 0x6e, 0x42, 0x53, 0xa7, 0x3e, 0x1f, 0xad, 0x20, 0x5f, 0xda, 0xa7, 0x0a,
	0xac, 0xeb, 0xe4, 0xe8, 0x81, 0x3f, 0xf4, 0x4c, 0xfb, 0x5d, 0x67, 0x48, 0xd4, 0xd7, 0xa0, 0xd9,
	0x77, 0x86, 0xc4, 0x70, 0xdc, 0xbe, 0xc7, 0x5f, 0xde, 0x14, 0x2f, 0x47, 0x0d, 0x90, 0xce, 0x46,
	0x9f, 0xff, 0xcb, 0x88, 0xa0, 0x54, 0x40, 0x04, 0x79, 0xc4, 0xab, 0xdb, 0x11, 0xbd, 0x47, 0x86,
	0x63, 0xef, 0x54, 0x10, 0xda, 0x6a, 0x40, 0x8e, 0x3e, 0xb0, 0xd5, 0x4b, 0xd0, 0x70, 0x22, 0xb5,
	0x3f, 0x26, 0xc1, 0x4e, 0x15, 0x91, 0xad, 0x3b, 0x74, 0x2f, 0x7a, 0x54, 0x5f, 0x86, 0x0d, 0x87,
	0x1a, 0xc7, 0x8e, 0x4d, 0x3c, 0x83, 0x86, 0x01, 0x31, 0x47, 0x3b, 0x35, 0x6c, 0xb1, 0xee, 0xd0,
	0x87, 0x51, 0x69, 0x17, 0x0b, 0xb5, 0x5f, 0x2c, 0xc3, 0xba, 0x4e, 0x7d, 0x89, 0xc3, 0xe7, 0x61,
	0x8d, 0x86, 0x5e, 0x60, 0x0e, 0x88, 0x61, 0x91, 0x00, 0x79, 0x6c, 0xea, 0xc0, 0x8b, 0xf6, 0x48,
	0xa0, 0xbe, 0x96, 0x4c, 0x84, 0x12, 0x4e, 0x84, 0xf3, 0x82, 0xa1, 0xee, 0xd0, 0xb1, 0xc8, 0xbd,
	0xf1, 0x28, 0x62, 0x25, 0x9e, 0x0a, 0x97, 0x39, 0x62, 0x07, 0x26, 0x3d, 0x40, 0xa6, 0x9a, 0x0c,
	0x9f, 0xf7, 0x4d, 0x7a, 0xa0, 0x5e, 0x84, 0x7a, 0x68, 0xd2, 0xc3, 0x84, 0xb3, 0x5a, 0xf4, 0xf8,
	0x81, 0x1d, 0x51, 0x11, 0x7a, 0xa1, 0x39, 0x34, 0x68, 0xd4, 0x27, 0x72, 0x57, 0xd6, 0x01, 0x8b,
	0x70, 0x14, 0x49, 0x84, 0xb5, 0xb9, 0xaa, 0x99, 0x40, 0x57, 0x97, 0xa1, 0x7b, 0x1d, 0xce, 0x7b,
	0x27, 0x2e, 0x09, 0x8c, 0x13, 0x73, 0x38, 0x24, 0x61, 0x2c, 0xa2, 0x06, 0x36, 0x52, 0xb1, 0xee,
	0x23, 0xac, 0x12, 0x72, 0xc9, 0x41, 0xb4, 0x99, 0x83, 0x68, 0xd4, 0x33, 0x6f, 0x14, 0xd1, 0x69,
	0xd8, 0xe3, 0xc0, 0x0c, 0x1d, 0xcf, 0xdd, 0x81, 0x17, 0x94, 0x57, 0x2b, 0xba, 0x8a, 0x75, 0xc8,
	0xc2, 0x1d, 0x5e, 0xa3, 0x7d, 0xbf, 0x04, 0x6a, 0x4a, 0xcb, 0x18, 0x87, 0x6f, 0x43, 0x9b, 0x75,
	0xe1, 0x8e, 0x47, 0x48, 0x1f, 0xd7, 0xb7, 0x7c, 0xb8, 0x5b, 0x54, 0x7a, 0x8a, 0x34, 0x03, 0x41,
	0xb7, 0x02, 0x0b, 0xb5, 0x6e, 0x5d, 0xaf, 0x47, 0xcf, 0x7b, 0x81, 0xa5, 0xde, 0x02, 0x60, 0xdd,
	0xa2, 0x0a, 0x33, 0xab, 0x70, 0x31, 0xd5, 0xe5, 0xfd, 0x7e, 0x9f, 0x92, 0x90, 0xe9, 0x25, 0x36,
	0x45, 0x55, 0x56, 0xa1, 0x62, 0x9b, 0xa1, 0x89, 0x72, 0x6a, 0xe9, 0xf8, 0x3f, 0x2d, 0xdb, 0x6a,
	0x46, 0xb6, 0x19, 0xa3, 0x50, 0x9b, 0x32, 0x0a, 0x2f, 0x41, 0x3b, 0x83, 0x3e, 0x13, 0xd1, 0xfa,
	0x49, 0x0a, 0x78, 0x49, 0x47, 0x1a, 0x29, 0x1d, 0xb9, 0x22, 0x38, 0xa1, 0xce, 0x63, 0x82, 0xc2,
	0xa8, 0x70, 0x82, 0xbb, 0xce, 0x63, 0xa2, 0xfd, 0x71, 0x04, 0xab, 0xac, 0xda, 0x59, 0xc5, 0x99,
	0x6f, 0xd3, 0xa6, 0xe1, 0x2f, 0x15, 0x86, 0x7f, 0xae, 0xce, 0xc7, 0x64, 0x63, 0x2d, 0x53, 0x7b,
	0x46, 0x76, 0x1e, 0x6c, 0xd5, 0x02, 0xb0, 0xd5, 0xf2, 0x60, 0x4b, 0xa3, 0x53, 0xcf, 0xa0, 0x33,
	0x13, 0x55, 0xad, 0x0b, 0xdb, 0x0c, 0xb2, 0xae, 0x4f, 0x88, 0x7d, 0xbf, 0xdf, 0x09, 0xbc, 0x01,
	0x76, 0x98, 0x62, 0x4a, 0x99, 0xc5, 0x14, 0x8e, 0x56, 0xca, 0xca, 0xe2, 0x1f, 0x4b, 0x70, 0x51,
	0x27, 0xbe, 0x17, 0x84, 0xbc, 0xef, 0xa8, 0x46, 0x9f, 0x05, 0x74, 0x71, 0x3d, 0x4f, 0x63, 0x59,
	0xca, 0x62, 0x39, 0x57, 0x0e, 0x2f, 0x41, 0x7b, 0x8c, 0xc4, 0x18, 0x74, 0x6c, 0x59, 0x11, 0x8e,
	0x15, 0x36, 0x9f, 0x59, 0x69, 0x97, 0x15, 0xc6, 0x4b, 0x57, 0x35, 0x59, 0xba, 0x32, 0xdc, 0xd6,
	0xb2, 0xd8, 0x0a, 0x13, 0x5e, 0x97, 0x4c, 0xf8, 0x4c, 0x2d, 0xce, 0xc8, 0xbb, 0x59, 0x40, 0xde,
	0x90, 0x23, 0x6f, 0xed, 0x1b, 0x0a, 0x3c, 0x87, 0x6b, 0x77, 0x3e, 0xca, 0xa7, 0xa0, 0xf6, 0xda,
	0x2f, 0x40, 0x83, 0x0d, 0x4c, 0x6c, 0xf5, 0x1a, 0x6c, 0x06, 0x48, 0x0a, 0x09, 0x52, 0x7e, 0x57,
	0x53, 0xdf, 0x10, 0xe5, 0x82, 0xc1, 0x6b, 0xb0, 0xc9, 0x20, 0x97, 0x9a, 0x32, 0x51, 0x6e, 0x88,
	0x72, 0xd1, 0x74, 0x9e, 0x40, 0xb5, 0x6f, 0x95, 0xe0, 0x9c, 0x4e, 0x8e, 0xde, 0x75, 0x5c, 0xfb,
	0xee, 0x24, 0x9a, 0xf0, 0xb8, 0xfe, 0x64, 0xf0, 0x55, 0x0a, 0xe0, 0x5b, 0xca, 0x9b, 0x4f, 0x62,
	0x68, 0xd7, 0x1c, 0x11, 0x79, 0xe8, 0x7b, 0xe6, 0x88, 0xa8, 0x5f, 0x80, 0xa6, 0xed, 0x04, 0xc4,
	0x0a, 0xbd, 0x60, 0x22, 0xa6, 0x74, 0x5c, 0x20, 0xad, 0x41, 0x55, 0x79, 0x0d, 0x7a, 0x83, 0xf7,
	0x18, 0x4e, 0x7c, 0xa6, 0x44, 0xed, 0x04, 0x65, 0xb4, 0x57, 0x5e, 0x10, 0xee, 0x4f, 0x7c, 0xc2,
	0xc6, 0x89, 0xfe, 0xa9, 0x5b, 0x50, 0x75, 0xa8, 0x31, 0xf6, 0x51, 0xb5, 0x50, 0x1b, 0x1f, 0xf8,
	0xea, 0x0e, 0xd4, 0x0f, 0xc9, 0xe4, 0xc4, 0x0b, 0x84, 0x6a, 0x89, 0x47, 0xed, 0x6f, 0x14, 0x38,
	0xa7, 0x53, 0x3f, 0x83, 0x48, 0xc6, 0x87, 0x29, 0x2f, 0xf0, 0x61, 0x16, 0x3a, 0x77, 0xd3, 0x00,
	0x96, 0xf3, 0x00, 0x9c, 0xe1, 0xc4, 0x24, 0x8a, 0x59, 0x9d, 0xeb, 0x8b, 0x7d, 0x5b, 0x81, 0xf3,
	0x5c, 0xba, 0x77, 0x04, 0xb2, 0xfb, 0x01, 0x21, 0xcb, 0x14, 0xb0, 0x6f, 0x86, 0x07, 0x29, 0xdd,
	0x8a, 0x0a, 0xd0, 0x58, 0xe4, 0x13, 0xaf, 0xfd, 0x5b, 0x44, 0x14, 0x03, 0x78, 0x35, 0x44, 0xa5,
	0x14, 0xab, 0x9c, 0x55, 0xac, 0x94, 0x24, 0x2b, 0x0b, 0x25, 0x39, 0x43, 0x0f, 0x0b, 0xba, 0x52,
	0xda, 0x77, 0x15, 0xf4, 0x53, 0x50, 0x35, 0x99, 0x3b, 0x88, 0xbd, 0xde, 0x82, 0x16, 0x27, 0xc2,
	0x26, 0x8f, 0x88, 0xf0, 0xdf, 0xb7, 0xd2, 0x74, 0x60, 0x95, 0xbe, 0xd6, 0x4f, 0x1e, 0x62, 0x2b,
	0x59, 0xca, 0x75, 0x74, 0xcb, 0x69, 0x0a, 0xa7, 0x7c, 0xaf, 0x4a, 0x9e, 0x37, 0xfb, 0xab, 0x65,
	0x5c, 0xf2, 0xb3, 0x14, 0x5e, 0x86, 0xe6, 0xb1, 0x43, 0x9d, 0x50, 0x72, 0x68, 0x1b, 0x58, 0x10,
	0xb9, 0xb3, 0xcb, 0x52, 0xef, 0xb7, 0x52, 0x7e, 0x15, 0x13, 0xc6, 0x25, 0x01, 0xc2, 0x1d, 0xef,
	0xc4, 0x8d, 0x2d, 0x72, 0xd6, 0xb3, 0x9a, 0xeb, 0x45, 0xa5, 0xcc, 0x4e, 0x2d, 0x63, 0x76, 0x12,
	0xc9, 0xd5, 0x0b, 0x3a, 0xc1, 0x0d, 0x19, 0xd6, 0xcb, 0xd0, 0xa4, 0xe6, 0x31, 0x31, 0x22, 0x2d,
	0xe7, 0x0b, 0x4f, 0x23, 0x2a, 0xe8, 0x98, 0x61, 0x32, 0x30, 0x2e, 0x71, 0xcc, 0x79, 0xc5, 0x81,
	0x71, 0x85, 0xcb, 0x11, 0xc8, 0x5a, 0x9e, 0x40, 0xfe, 0x4f, 0x81, 0x4d, 0x9d, 0x1c, 0xa5, 0xd8,
	0xcf, 0x78, 0xa0, 0x4a, 0x61, 0x0f, 0x74, 0x59, 0x92, 0x4a, 0xe1, 0x5d, 0x99, 0xbd, 0x23, 0xa9,
	0xa6, 0xd6, 0xe9, 0x14, 0x58, 0xb5, 0x0c, 0x58, 0xf9, 0xbb, 0x0c, 0xed, 0xdb, 0x65, 0xd8, 0xd4,
	0xa9, 0xbf, 0x1c, 0xf6, 0xe7, 0xf8, 0xf4, 0x73, 0xfd, 0x9c, 0x3c, 0xc7, 0x7d, 0x59, 0x4e, 0xa6,
	0x84, 0x56, 0x7d, 0x8e, 0x6f, 0xde, 0xc8, 0x7a, 0x48, 0x3f, 0x02, 0xe0, 0x12, 0x62, 0x33, 0x67,
	0x85, 0xef, 0xa3, 0xa4, 0x92, 0x34, 0xd8, 0x90, 0x01, 0x3b, 0xd1, 0xfa, 0xb5, 0x82, 0x5a, 0xdf,
	0x92, 0x85, 0xf2, 0x43, 0x05, 0xb6, 0xb3, 0x3a, 0xf9, 0x51, 0xe0, 0xb9, 0x83, 0xa5, 0x19, 0x6d,
	0x09, 0x95, 0x72, 0x3e, 0x2a, 0xf9, 0xae, 0xff, 0x6b, 0x50, 0x41, 0x5f, 0xa0, 0x8a, 0xbe, 0xc0,
	0x94, 0xf1, 0x40, 0x22, 0xd1, 0x21, 0xc0, 0x66, 0x73, 0x35, 0x52, 0xfb, 0xb8, 0x04, 0xdb, 0x59,
	0xd5, 0x5b, 0x2e, 0x97, 0x4f, 0xb7, 0xb1, 0xff, 0x09, 0x68, 0xbb, 0xe4, 0xc4, 0x90, 0x66, 0x00,
	0x5b, 0xf6, 0xe7, 0x98, 0xca, 0x96, 0x4b, 0x4e, 0xba, 0xb2, 0xb5, 0x9c, 0x3d, 0x0f, 0x0b, 0x1a,
	0x44, 0xed, 0x3b, 0x39, 0x3a, 0xd0, 0x31, 0xc7, 0x94, 0x9c, 0x0e, 0x3a, 0x33, 0xbc, 0x89, 0x3f,
	0x57, 0xa6, 0x65, 0xf6, 0xcc, 0xa9, 0x2a, 0xec, 0xa0, 0xfd, 0x37, 0xee, 0xf1, 0x8e, 0xd8, 0x0c,
	0x16, 0x3c, 0xf0, 0xdd, 0x87, 0xd8, 0x44, 0x29, 0xd2, 0x26, 0x2a, 0xbd, 0x60, 0x96, 0x16, 0x69,
	0xc1, 0xac, 0x05, 0x33, 0xcb, 0xc5, 0x9b, 0x70, 0xc1, 0xe6, 0x2f, 0x93, 0xc0, 0x90, 0x51, 0x63,
	0x5c, 0x9d, 0x4f, 0x6a, 0x3b, 0x09, 0x7e, 0x6f, 0xc3, 0x25, 0xe9, 0xad, 0x0c, 0x94, 0xcc, 0x3c,
	0x5e, 0x4c, 0x1a, 0xa4, 0x23, 0x43, 0x5f, 0x84, 0xf6, 0x68, 0x62, 0x4c, 0xc7, 0x3a, 0x5a, 0xa3,
	0x89, 0x34, 0xc2, 0x97, 0xe0, 0xdc, 0x68, 0x62, 0xe4, 0x06, 0x3c, 0x36, 0x46, 0x93, 0x74, 0x8f,
	0xc2, 0x35, 0x6a, 0xe4, 0x6f, 0x20, 0x9b, 0xa9, 0x0d, 0xfb, 0xd7, 0xe1, 0x62, 0xbc, 0xef, 0xcb,
	0xc0, 0x5e, 0x74, 0xd3, 0xf7, 0xd4, 0xa2, 0xd0, 0x42, 0xd8, 0x88, 0x65, 0xbe, 0x6f, 0xd2, 0xc3,
	0xdd, 0x8e, 0x4c, 0xa8, 0x92, 0x9a, 0xfa, 0xd7, 0xa1, 0x21, 0xb6, 0x7e, 0x73, 0x42, 0xa1, 0x71,
	0x9b, 0x68, 0x5f, 0x13, 0x06, 0x66, 0xbf, 0xef, 0x58, 0x28, 0xe4, 0x8a, 0x2e, 0x1e, 0xb5, 0x3f,
	0x2d, 0xa1, 0x5b, 0x21, 0xe2, 0xd4, 0xf7, 0xc8, 0x49, 0xa7, 0xb3, 0xcc, 0x39, 0x62, 0x3b, 0xf4,
	0x90, 0xad, 0x5c, 0x6c, 0xe0, 0x46, 0x54, 0x80, 0x0b, 0xd7, 0xf3, 0xb0, 0x36, 0x22, 0x23, 0x2f,
	0x98, 0xb0, 0xea, 0x0a, 0x56, 0x03, 0x2b, 0xc2, 0x06, 0x5f, 0x00, 0xf0, 0xa8, 0x61, 0xba, 0xb6,
	0x21, 0xa2, 0xb2, 0x4d, 0xbd, 0xe1, 0xd1, 0xdb, 0xae, 0xfd, 0x90, 0x60, 0x5c, 0xce, 0xf2, 0xc7,
	0x0c, 0x66, 0xa6, 0x24, 0x75, 0xcb, 0x1f, 0x0b, 0xef, 0x66, 0x64, 0x5a, 0x19, 0xcd, 0x80, 0x91,
	0x69, 0x09, 0xba, 0x76, 0xa0, 0x7e, 0x4c, 0x02, 0xea, 0x78, 0x4c, 0x2f, 0xd6, 0x75, 0xf1, 0x18,
	0x21, 0xee, 0x8f, 0x7b, 0x18, 0x0b, 0x6f, 0xa2, 0xc6, 0xd4, 0xfc, 0x71, 0x4f, 0x0e, 0x84, 0x83,
	0x14, 0x08, 0x7f, 0x1b, 0x5d, 0x92, 0x34, 0x74, 0x45, 0xe3, 0xe1, 0x3f, 0x89, 0xe1, 0xf0, 0xdb,
	0x56, 0xe8, 0x1c, 0x9b, 0x21, 0xe9, 0x74, 0xd4, 0x36, 0x94, 0xc2, 0x47, 0xf8, 0x52, 0x4b, 0x2f,
	0x85, 0x8f, 0x16, 0xba, 0x68, 0x5a, 0x0f, 0xc3, 0xcd, 0x52, 0x0f, 0x45, 0x55, 0xf4, 0x1a, 0x6c,
	0x9a, 0xec, 0x2d, 0xc7, 0x73, 0x0d, 0x1a, 0x9a, 0x21, 0xe1, 0x5e, 0xd0, 0x46, 0x52, 0xde, 0x8d,
	0x8a, 0xb5, 0x6f, 0x28, 0xd0, 0x96, 0xc8, 0xb4, 0x8b, 0xe8, 0xc6, 0x15, 0x88, 0x9e, 0x0c, 0x7f,
	0xdc, 0x13, 0x27, 0x0a, 0x4d, 0xbd, 0xe9, 0xdf, 0xf0, 0x3b, 0x58, 0xa0, 0x5e, 0x87, 0x2d, 0xef,
	0xb1, 0xe7, 0x12, 0x63, 0xe8, 0x8c, 0xa2, 0x7d, 0xc4, 0x81, 0xe9, 0x0e, 0x88, 0x70, 0x2f, 0xcf,
	0x61, 0xd5, 0x87, 0x51, 0xcd, 0x1e, 0xab, 0xd0, 0xcc, 0x34, 0x05, 0xdd, 0x02, 0x14, 0xcc, 0x18,
	0xa2, 0x34, 0x6b, 0x88, 0xb7, 0xa0, 0x2d, 0x21, 0x69, 0x3f, 0x81, 0x14, 0x77, 0x71, 0xce, 0xde,
	0x21, 0xe6, 0x67, 0x90, 0xe3, 0x57, 0x60, 0x23, 0x5a, 0xa9, 0xe4, 0x3e, 0x8a, 0x0e, 0xff, 0x9b,
	0x4c, 0x3c, 0x0f, 0xdc, 0x9e, 0xe7, 0xda, 0x8e, 0x3b, 0xe8, 0x2c, 0x1f, 0x1c, 0xf5, 0x06, 0x6c,
	0x8f, 0x45, 0xff, 0xc6, 0xc8, 0x0c, 0xc7, 0x01, 0x31, 0x42, 0x27, 0x0e, 0xdc, 0x6c, 0xc5, 0x95,
	0x77, 0xb1, 0x6e, 0xdf, 0x19, 0x11, 0x0e, 0xa8, 0x4c, 0x56, 0x51, 0x8e, 0x6e, 0xb2, 0x4d, 0x4e,
	0x0c, 0x46, 0x11, 0x8d, 0xe3, 0xf3, 0x30, 0xfd, 0xd2, 0xd3, 0x42, 0xd8, 0x3d, 0x9b, 0x10, 0x76,
	0x3f, 0x03, 0x84, 0xdd, 0xa7, 0x81, 0xf0, 0x09, 0x06, 0xb4, 0xf0, 0xf4, 0xb1, 0x13, 0x10, 0xdf,
	0x9c, 0x3c, 0xb1, 0xfa, 0x17, 0xdc, 0x69, 0xf2, 0x43, 0x47, 0x3e, 0x48, 0x51, 0xca, 0x7e, 0x0e,
	0x40, 0x50, 0xe6, 0xd8, 0x39, 0x23, 0x29, 0x79, 0x8b, 0xd6, 0x55, 0x58, 0xf7, 0xc7, 0x81, 0x75,
	0x60, 0x52, 0x62, 0x1b, 0x63, 0xef, 0x31, 0xa7, 0xb9, 0x15, 0x17, 0x3e, 0xf0, 0x1e, 0x6b, 0x6f,
	0x02, 0x08, 0x72, 0x1c, 0xbb, 0x30, 0x3d, 0xdf, 0x65, 0x87, 0xa0, 0x77, 0xc8, 0x90, 0x84, 0x44,
	0x1c, 0x11, 0xae, 0xde, 0x1b, 0x15, 0x6b, 0x57, 0x25, 0x37, 0x3c, 0x24, 0x07, 0xb0, 0xb4, 0x4f,
	0x14, 0x5c, 0x55, 0x4e, 0x9b, 0xc2, 0x04, 0xc0, 0x4a, 0xc1, 0x7d, 0x68, 0x8a, 0xea, 0xff, 0x55,
	0x30, 0x5c, 0xbd, 0x1f, 0x98, 0x2e, 0xed, 0x93, 0xe0, 0x9e, 0x17, 0x3a, 0x16, 0x51, 0xdf, 0x05,
	0x95, 0x6f, 0x9c, 0xf9, 0x21, 0xac, 0x14, 0x25, 0xd8, 0x49, 0x45, 0x09, 0xa4, 0x08, 0x97, 0xbe,
	0x49, 0x33, 0x25, 0xea, 0x8b, 0xd0, 0x0a, 0x79, 0xcf, 0x18, 0xf6, 0x62, 0xec, 0xad, 0x89, 0xb2,
	0x3d, 0x12, 0x44, 0x6e, 0x43, 0x3f, 0xf0, 0x46, 0x06, 0xf5, 0xf9, 0xb9, 0x7c, 0x2d, 0x7a, 0xec,
	0xfa, 0xea, 0xdb, 0xb0, 0x21, 0x46, 0xf7, 0x7d, 0x11, 0xcf, 0x9a, 0xe5, 0xaf, 0xad, 0xf3, 0xa6,
	0x1d, 0x1f, 0xc7, 0xd5, 0xa0, 0x65, 0xa3, 0x1c, 0xee, 0x07, 0xce, 0xc0, 0x71, 0xf9, 0xb1, 0x49,
	0xaa, 0x4c, 0xfb, 0x6d, 0x16, 0x96, 0xce, 0x70, 0x5e, 0xd4, 0x13, 0x28, 0xc0, 0x59, 0x0e, 0x03,
	0xe5, 0x82, 0x0c, 0x68, 0x1f, 0x2b, 0x70, 0x41, 0x27, 0x47, 0x0f, 0xcd, 0xa1, 0x63, 0x9b, 0x21,
	0xd9, 0x97, 0xba, 0xcd, 0x8e, 0xac, 0x4c, 0x8f, 0x7c, 0x0d, 0x6a, 0xd1, 0xf6, 0xd6, 0xf7, 0xe7,
	0x78, 0xb8, 0x55, 0x97, 0x9c, 0x74, 0x7c, 0xf5, 0x26, 0xac, 0x79, 0x88, 0x87, 0x39, 0x8c, 0xda,
	0xcf, 0x26, 0x10, 0x44, 0xb3, 0x8e, 0xaf, 0x59, 0x70, 0x41, 0xa7, 0x7e, 0x1e, 0x71, 0xcb, 0x83,
	0x4f, 0x7b, 0x0b, 0xb6, 0x24, 0xc5, 0x14, 0xfe, 0x7f, 0x01, 0xf6, 0xb5, 0xdf, 0x53, 0x60, 0x4b,
	0x92, 0xec, 0x13, 0xbc, 0x1a, 0x87, 0xa9, 0x4a, 0x52, 0x98, 0xea, 0x02, 0xd4, 0x3c, 0x8c, 0x85,
	0x71, 0x3f, 0x9c, 0x3f, 0x65, 0xa2, 0x4b, 0x95, 0x6c, 0x74, 0xa9, 0xe8, 0x8e, 0xb5, 0x0f, 0x97,
	0x72, 0x88, 0xd5, 0xf3, 0x71, 0xca, 0x21, 0xb9, 0x68, 0x96, 0xcf, 0xdf, 0x29, 0xd2, 0xce, 0x58,
	0x0c, 0x57, 0x7c, 0x98, 0x27, 0xd0, 0xa9, 0x84, 0xa2, 0xf2, 0x22, 0x93, 0xe4, 0x50, 0xc3, 0x25,
	0x27, 0x3c, 0x8e, 0x5e, 0x75, 0xe8, 0x3d, 0x72, 0x12, 0x59, 0x45, 0xa6, 0x6b, 0x06, 0x9b, 0xaf,
	0x36, 0x9f, 0xbe, 0xeb, 0xac, 0x94, 0x19, 0x58, 0x5b, 0xb3, 0xa5, 0x1d, 0x67, 0x86, 0x9d, 0x25,
	0x6a, 0xe1, 0x43, 0x91, 0xc3, 0xf5, 0xfe, 0x9d, 0xbc, 0xf0, 0xef, 0xd3, 0xda, 0x74, 0xed, 0xd7,
	0x14, 0x91, 0xd9, 0xc5, 0x3b, 0x4e, 0x6d, 0xf8, 0x94, 0xcc, 0x86, 0x4f, 0x54, 0xf6, 0x03, 0x22,
	0xce, 0xb5, 0xb1, 0xf2, 0xdd, 0x9c, 0x53, 0x9e, 0x72, 0x01, 0x92, 0x2a, 0x79, 0x24, 0x7d, 0x1d,
	0x27, 0x5c, 0x97, 0xb8, 0xf6, 0xde, 0x81, 0x19, 0xde, 0x25, 0x94, 0x9a, 0x91, 0x0b, 0x56, 0x70,
	0xed, 0xdf, 0x81, 0xfa, 0x88, 0xbd, 0xc2, 0x19, 0x16, 0x8f, 0xea, 0x55, 0x1e, 0x50, 0x2c, 0x63,
	0x40, 0x71, 0x43, 0xc8, 0xe2, 0x2e, 0x95, 0xc2, 0x88, 0xda, 0x3b, 0x38, 0x65, 0xa7, 0x06, 0x2f,
	0xea, 0x1e, 0x74, 0xd0, 0x15, 0x65, 0xaa, 0xc1, 0x02, 0xdc, 0x45, 0x36, 0x5b, 0x73, 0x4e, 0xed,
	0xb5, 0x47, 0xe8, 0x45, 0x2e, 0xb1, 0xc7, 0xa2, 0xd3, 0x42, 0xfb, 0x16, 0x3b, 0xae, 0xb8, 0x6b,
	0x1e, 0x92, 0xf8, 0x38, 0xef, 0x94, 0x8e, 0xf2, 0x66, 0x84, 0x04, 0x7f, 0x4b, 0x41, 0x1f, 0x77,
	0x35, 0x14, 0xcd, 0x3c, 0x6d, 0x2b, 0xe4, 0xd7, 0x68, 0xbf, 0xce, 0xce, 0x03, 0x75, 0x32, 0xf2,
	0x8e, 0xcf, 0x0a, 0x5e, 0x1f, 0x2b, 0x78, 0x02, 0xb8, 0x2a, 0x9a, 0x3e, 0x23, 0x62, 0xff, 0xc1,
	0xce, 0xb0, 0xef, 0x7a, 0xc7, 0xe8, 0xa6, 0x9e, 0x1a, 0x7d, 0xd7, 0x60, 0x33, 0x46, 0xce, 0x08,
	0xcd, 0x60, 0x40, 0x42, 0x0e, 0xdb, 0x46, 0x5c, 0xbe, 0x8f, 0xc5, 0xea, 0x6b, 0xa0, 0x26, 0x4d,
	0x85, 0xe3, 0xc1, 0x1d, 0xd7, 0x73, 0x71, 0xcd, 0x7d, 0x5e, 0x91, 0x76, 0x90, 0x6b, 0x99, 0x84,
	0x8c, 0x3f, 0x63, 0xa7, 0xe3, 0xa7, 0xce, 0xae, 0x20, 0x0a, 0x8f, 0x08, 0xa4, 0x03, 0xbe, 0xcc,
	0x11, 0x41, 0x75, 0xc1, 0x8e, 0x74, 0x43, 0x27, 0x47, 0xbb, 0x1f, 0x76, 0x3b, 0x71, 0x5e, 0xe9,
	0x26, 0x94, 0x47, 0x74, 0xc0, 0xc9, 0x8d, 0xfe, 0x46, 0x1b, 0x47, 0xc7, 0xe6, 0xb4, 0x95, 0x1c,
	0x5b, 0x23, 0xe8, 0xd8, 0xee, 0x76, 0x52, 0xaf, 0x7d, 0x19, 0xea, 0x3d, 0x5f, 0xf6, 0xe3, 0xb7,
	0x92, 0x21, 0xe3, 0x18, 0xa6, 0x5e, 0xeb, 0xf9, 0x22, 0xcf, 0xce, 0xf2, 0x6c, 0x66, 0xca, 0xcb,
	0x3a, 0xfe, 0xe7, 0xc3, 0x94, 0xe3, 0x61, 0xf6, 0x70, 0x8b, 0xb8, 0x6b, 0x0e, 0x4d, 0xd7, 0x22,
	0x45, 0x97, 0x89, 0x2c, 0xad, 0x3f, 0x8d, 0xbb, 0x41, 0xd1, 0xc9, 0x0e, 0xd4, 0x7b, 0xec, 0x2f,
	0xbe, 0x5d, 0xd2, 0xc5, 0x63, 0x21, 0x82, 0x0c, 0x5c, 0x04, 0xd0, 0x17, 0x88, 0x36, 0xe3, 0x9e,
	0x1b, 0xa9, 0x5c, 0x98, 0x3c, 0xca, 0x49, 0x63, 0x1b, 0x52, 0xb9, 0xd8, 0xe9, 0x2d, 0x1c, 0xe0,
	0x7d, 0x5c, 0x13, 0xe4, 0x01, 0x54, 0xa8, 0x04, 0x84, 0x86, 0xbc, 0x53, 0xfc, 0x5f, 0xa8, 0xa7,
	0x77, 0xd0, 0xad, 0xd8, 0x1d, 0x7a, 0xd6, 0x21, 0xe2, 0x7d, 0x05, 0xa0, 0x17, 0x3d, 0xc8, 0x24,
	0x36, 0xb1, 0x04, 0x89, 0xcb, 0xbe, 0xfe, 0xb3, 0xe8, 0x3c, 0xe4, 0xbc, 0x1e, 0xcb, 0xb7, 0xc5,
	0x5f, 0x2f, 0x2c, 0xcd, 0x5d, 0xdc, 0x5f, 0x63, 0x97, 0x7b, 0x07, 0xc4, 0x3a, 0x8c, 0x9c, 0x23,
	0x4e, 0x12, 0x71, 0x06, 0x07, 0x8c, 0xc5, 0xb2, 0xbe, 0xc6, 0x88, 0xc2, 0xa2, 0xa9, 0x3e, 0xbe,
	0x86, 0x3b, 0x60, 0xa9, 0x8f, 0x1f, 0x13, 0x74, 0x49, 0x19, 0xeb, 0x17, 0x84, 0xde, 0x25, 0xed,
	0x58, 0x3c, 0x1f, 0x5b, 0x62, 0x6e, 0x50, 0x11, 0x7a, 0x7b, 0xd0, 0x4e, 0x77, 0x50, 0x84, 0xe0,
	0x34, 0xcc, 0xa5, 0x45, 0x30, 0x7f, 0x15, 0x3d, 0x22, 0xe1, 0x92, 0xef, 0x9b, 0x94, 0x0d, 0x34,
	0xf3, 0x6c, 0x21, 0xab, 0xdc, 0x7f, 0x52, 0x42, 0xaf, 0xa6, 0x78, 0x07, 0xf3, 0x13, 0x18, 0x33,
	0x0e, 0x46, 0x39, 0xeb, 0x60, 0xbc, 0x08, 0xad, 0x38, 0x6b, 0xae, 0x47, 0x02, 0xbe, 0x25, 0x59,
	0x13, 0xd9, 0x71, 0x3d, 0x12, 0xa8, 0xd7, 0x61, 0x2b, 0xde, 0x93, 0x4e, 0x1d, 0xbd, 0x9f, 0x13,
	0x7b, 0xd0, 0xc4, 0x04, 0xbe, 0x0a, 0x9b, 0x52, 0x3b, 0x26, 0xc6, 0xda, 0x0b, 0xe5, 0x57, 0x9b,
	0x7a, 0x3b, 0x31, 0x94, 0x42, 0x66, 0x18, 0x98, 0x63, 0x39, 0x9e, 0xf8, 0x5f, 0xb2, 0x72, 0x8d,
	0xb9, 0x7e, 0x38, 0xc3, 0xad, 0x19, 0xe3, 0x36, 0xc2, 0xd9, 0xd1, 0x3d, 0x30, 0x03, 0xf2, 0xa1,
	0xe3, 0x1e, 0xae, 0xd8, 0x52, 0x6b, 0x7f, 0xcb, 0x7c, 0xf1, 0x64, 0xbc, 0x37, 0x01, 0x68, 0xf4,
	0x20, 0x27, 0xa7, 0x6d, 0xc7, 0x61, 0x0f, 0xd1, 0x8c, 0x9f, 0x42, 0x45, 0x8f, 0x99, 0xc4, 0xa6,
	0x92, 0xbc, 0x0e, 0x2c, 0xc9, 0x3d, 0x2f, 0xbc, 0x64, 0xfc, 0xb3, 0x92, 0xa0, 0x87, 0x61, 0xa8,
	0x45, 0x29, 0xb3, 0x0e, 0x35, 0xfc, 0x00, 0x43, 0x97, 0x48, 0x78, 0x43, 0x6f, 0x3a, 0xb4, 0xc3,
	0x0a, 0x50, 0xe3, 0x10, 0x89, 0x38, 0xe8, 0x5a, 0xe6, 0x2c, 0xef, 0x47, 0x02, 0x9e, 0x71, 0x58,
	0xbb, 0xac, 0xc4, 0x8e, 0x54, 0x32, 0x5c, 0x3d, 0x9d, 0x0c, 0xa7, 0xfd, 0x8f, 0x24, 0x35, 0xe4,
	0x33, 0xa6, 0x75, 0xe8, 0xb8, 0x87, 0xc2, 0x86, 0xd2, 0x58, 0xa8, 0x2f, 0x41, 0x9b, 0x55, 0xfb,
	0x26, 0xa5, 0x98, 0xa7, 0xc8, 0x75, 0x04, 0x4b, 0x3b, 0xbc, 0x70, 0x69, 0xe2, 0xba, 0x04, 0x0d,
	0xae, 0x43, 0x22, 0xe2, 0x56, 0x67, 0xaa, 0x62, 0x4b, 0xa8, 0xd5, 0xf2, 0xfd, 0xb7, 0xf9, 0x69,
	0x03, 0xbf, 0xac, 0xc8, 0x9b, 0x9d, 0xa8, 0xcf, 0xd4, 0x60, 0x4a, 0x7a, 0xb0, 0xd5, 0x26, 0x4e,
	0x6a, 0x7f, 0xa4, 0xc8, 0xfb, 0xa4, 0x67, 0x4b, 0x4c, 0xe1, 0x29, 0xf2, 0x87, 0x0a, 0xba, 0x55,
	0xef, 0x91, 0x30, 0xd1, 0x1e, 0x29, 0x7f, 0x55, 0x49, 0xe5, 0xaf, 0xae, 0x9a, 0xe8, 0x69, 0xbd,
	0xac, 0xe6, 0xe8, 0xa5, 0xf6, 0x2f, 0x0a, 0x1e, 0x76, 0xa5, 0x68, 0x3e, 0x1b, 0x1b, 0x8a, 0x8c,
	0x0d, 0xa9, 0x66, 0x6d, 0x48, 0x2a, 0x3f, 0xb4, 0xb6, 0x28, 0x3f, 0x54, 0xfb, 0x4b, 0x76, 0x1b,
	0xad, 0x6b, 0x1e, 0x17, 0x30, 0x5f, 0x5f, 0x81, 0x4b, 0x58, 0x99, 0x7b, 0x8d, 0x86, 0xf1, 0x7a,
	0x21, 0x6a, 0x70, 0x7f, 0xfa, 0x2a, 0xcd, 0xb2, 0x26, 0xfa, 0x8c, 0xc0, 0xfa, 0xf7, 0x14, 0xbc,
	0xc5, 0x36, 0xc5, 0x06, 0x6e, 0x07, 0x94, 0xcc, 0x76, 0xe0, 0x6c, 0xcc, 0x8b, 0xf9, 0xfb, 0xa8,
	0xef, 0xb1, 0x13, 0x18, 0x64, 0xc8, 0x1b, 0xda, 0x2c, 0x69, 0xb5, 0x8f, 0xff, 0x64, 0xd9, 0x00,
	0x2b, 0x42, 0xe9, 0xbc, 0x03, 0x97, 0x79, 0x83, 0x39, 0xf2, 0xd9, 0x61, 0x4d, 0x4e, 0x5f, 0x42,
	0x3f, 0x60, 0x07, 0x36, 0xb9, 0x0c, 0x49, 0x52, 0xe2, 0x0c, 0x9d, 0x25, 0x39, 0x65, 0x80, 0xaf,
	0x65, 0x81, 0xd7, 0xfe, 0xbe, 0x84, 0x4b, 0xc4, 0x5e, 0x40, 0xcc, 0x90, 0xdc, 0x1e, 0xf6, 0xc6,
	0xa3, 0x55, 0xdb, 0x8a, 0x27, 0x4c, 0x02, 0xbf, 0x02, 0x60, 0x46, 0x64, 0xb1, 0x8c, 0x62, 0x26,
	0x96, 0x26, 0x96, 0x60, 0x4a, 0xf1, 0xf3, 0xb0, 0xc6, 0xaa, 0x7b, 0xc3, 0x71, 0xd0, 0x13, 0x0c,
	0x62, 0xd1, 0x6e, 0x54, 0x12, 0xf9, 0xa5, 0xac, 0x01, 0xde, 0x3b, 0x94, 0x1d, 0x84, 0x36, 0x96,
	0xe3, 0xfd, 0x43, 0xd4, 0xc1, 0xd7, 0xc5, 0x48, 0x18, 0x83, 0x6c, 0x60, 0x0c, 0xf2, 0x9c, 0xa0,
	0x0c, 0xa1, 0xc1, 0x28, 0x24, 0x1b, 0x1c, 0xaf, 0x37, 0xa4, 0xcd, 0x59, 0x33, 0x63, 0xce, 0xc4,
	0x8a, 0x27, 0x63, 0x7b, 0x09, 0x1a, 0x6c, 0x8c, 0x64, 0xc5, 0xc3, 0xe7, 0xb3, 0xb3, 0xe2, 0xfd,
	0x55, 0x09, 0x9d, 0xc2, 0x9f, 0xb2, 0x9d, 0xf0, 0x54, 0xd4, 0x41, 0x46, 0xa4, 0x92, 0x46, 0x64,
	0xc1, 0x6a, 0x71, 0x13, 0x5a, 0x2c, 0x2b, 0xc0, 0x88, 0x94, 0x85, 0xce, 0x5c, 0x30, 0xd6, 0x58,
	0xab, 0xe8, 0x99, 0x3e, 0x81, 0x3a, 0xa4, 0x15, 0xaf, 0xb1, 0x40, 0xf1, 0x9a, 0x59, 0xc5, 0xd3,
	0xfe, 0x80, 0x79, 0x9d, 0x67, 0x01, 0xc8, 0xa2, 0xb2, 0xff, 0x26, 0xf3, 0x76, 0x6e, 0x33, 0x20,
	0xdc, 0x90, 0xb8, 0xe1, 0xb3, 0xa3, 0x5a, 0xfb, 0xf7, 0x12, 0xfa, 0x31, 0x2b, 0xa1, 0x66, 0xd6,
	0x7d, 0xda, 0xf2, 0xcc, 0xfb, 0xb4, 0xb3, 0xef, 0x34, 0xc7, 0xf4, 0x57, 0xd3, 0xa8, 0xc7, 0xf6,
	0x24, 0x4e, 0x9f, 0x5b, 0xcb, 0xd8, 0x13, 0xb6, 0x2f, 0x34, 0xc5, 0xdf, 0xb4, 0x69, 0xac, 0x2f,
	0x34, 0x8d, 0x57, 0x61, 0x1d, 0xef, 0x53, 0x0f, 0x87, 0x04, 0x63, 0x4c, 0xa8, 0xa4, 0x0d, 0xbd,
	0xe5, 0xd0, 0xbd, 0xb8, 0x4c, 0x92, 0x7d, 0x73, 0xae, 0xec, 0x7f, 0x97, 0x2d, 0x04, 0x5d, 0x62,
	0x06, 0xd6, 0x01, 0x53, 0xd8, 0xb4, 0x41, 0x54, 0x0a, 0x18, 0x44, 0xc9, 0x35, 0x2e, 0xa5, 0x5d,
	0xe3, 0x1f, 0x87, 0x75, 0x7c, 0x43, 0x5c, 0x12, 0xe3, 0x67, 0x3c, 0xdb, 0xa9, 0xee, 0xe2, 0x1b,
	0x64, 0xe9, 0xb6, 0x59, 0xa9, 0x57, 0x0a, 0x48, 0xbd, 0x3a, 0x5f, 0x07, 0x53, 0xdb, 0x29, 0x15,
	0x2a, 0xbe, 0x39, 0x88, 0x03, 0x12, 0xd1, 0x7f, 0xf5, 0x02, 0xd4, 0x78, 0x6c, 0x84, 0x5d, 0x06,
	0xe0, 0x4f, 0xda, 0x7f, 0x31, 0x9b, 0x2e, 0xc3, 0xb4, 0xe2, 0x19, 0x92, 0x56, 0x23, 0xb6, 0x60,
	0xce, 0x57, 0xa3, 0xa2, 0xce, 0x81, 0xe0, 0xbb, 0x26, 0xf1, 0x7d, 0x1e, 0xaa, 0x78, 0x6b, 0x9d,
	0x83, 0xc1, 0x1e, 0xb4, 0x7f, 0x65, 0x1b, 0x49, 0x76, 0x31, 0xef, 0x74, 0xb9, 0x46, 0xdd, 0xab,
	0x14, 0xd0, 0x3d, 0xc1, 0x4d, 0x35, 0x57, 0x8a, 0x35, 0x59, 0x8a, 0xb2, 0x9e, 0xd6, 0xd3, 0x57,
	0x10, 0x3f, 0x65, 0xf2, 0x7d, 0x16, 0x9c, 0x2e, 0x5d, 0xbe, 0xb1, 0x2c, 0x6b, 0xb2, 0x2c, 0x3f,
	0x61, 0xc7, 0x60, 0x89, 0x89, 0x78, 0xd6, 0xab, 0xd3, 0x94, 0x19, 0xab, 0x4e, 0x9b, 0x31, 0xed,
	0x1f, 0xd8, 0x41, 0xd9, 0xd9, 0xa1, 0xba, 0xa8, 0x10, 0xa6, 0xb8, 0xab, 0xe5, 0x70, 0x77, 0x84,
	0xe7, 0xb8, 0xb7, 0x7b, 0x34, 0x0c, 0x4c, 0xeb, 0x54, 0xdc, 0x05, 0xed, 0x97, 0x4a, 0x78, 0x52,
	0x7b, 0x9a, 0x63, 0xaa, 0xd7, 0xa1, 0x31, 0x9a, 0x18, 0x88, 0x20, 0x0f, 0x14, 0x6c, 0xa5, 0x14,
	0x9d, 0x85, 0x9e, 0xf5, 0xfa, 0x88, 0xcf, 0xbc, 0xaf, 0xc2, 0x66, 0x02, 0x1c, 0x7f, 0xaf, 0x3a,
	0xfb, 0xbd, 0x0d, 0x2b, 0xa3, 0x1d, 0x45, 0x6f, 0x8a, 0xfe, 0x27, 0x3f, 0xe7, 0x9c, 0x64, 0xd5,
	0xeb, 0xc9, 0x57, 0xc0, 0x15, 0x7b, 0xf1, 0xcb, 0x31, 0x72, 0x3f, 0xe4, 0x07, 0x9d, 0x93, 0x53,
	0x9e, 0x4e, 0xa7, 0xba, 0x94, 0xa5, 0xa3, 0x9f, 0xcf, 0x78, 0xfb, 0x95, 0x8e, 0x7e, 0x7e, 0x5e,
	0xf6, 0x82, 0xdf, 0x51, 0x30, 0xeb, 0x78, 0xcf, 0x73, 0xfb, 0xce, 0x60, 0xd5, 0xca, 0xf1, 0x0a,
	0x6c, 0xb8, 0x24, 0x3c, 0xf1, 0x82, 0xc3, 0x8c, 0xa3, 0xd7, 0xe6, 0xc5, 0x22, 0xfb, 0xe8, 0x93,
	0x12, 0xa6, 0x29, 0x73, 0xaa, 0x5e, 0x81, 0x0d, 0xc7, 0x3d, 0x76, 0x42, 0x76, 0xd1, 0x02, 0x0f,
	0x03, 0x19, 0x65, 0xed, 0xa4, 0x78, 0xcf, 0xb3, 0xc9, 0xac, 0x43, 0x97, 0x0b, 0x50, 0xc3, 0x86,
	0xe2, 0xee, 0x0c, 0x7f, 0xe2, 0x9b, 0xcf, 0xb1, 0x3f, 0x08, 0x4c, 0x9b, 0xf0, 0xb4, 0xb3, 0xa6,
	0x43, 0x1f, 0xb0, 0x82, 0xc8, 0xac, 0xf7, 0x03, 0x42, 0x0c, 0xcb, 0xf4, 0x4d, 0xcb, 0x09, 0x27,
	0x7c, 0x46, 0xb6, 0xa2, 0xc2, 0x3d, 0x5e, 0x56, 0xf8, 0xa3, 0x3f, 0x19, 0x64, 0xeb, 0x05, 0x90,
	0x6d, 0xe4, 0x21, 0xfb, 0x1c, 0x34, 0x62, 0x7a, 0xd8, 0xf7, 0x65, 0xe2, 0x67, 0x21, 0xcb, 0x0f,
	0x18, 0x77, 0xcb, 0x92, 0x65, 0x0e, 0xfa, 0xe5, 0x05, 0xe8, 0xa7, 0xa6, 0xc5, 0x3f, 0x29, 0x28,
	0x4b, 0x4e, 0x55, 0xd1, 0x6c, 0xbc, 0x97, 0xa0, 0x2d, 0xf8, 0x32, 0x6c, 0x32, 0xe4, 0x59, 0x98,
	0x15, 0x7d, 0x5d, 0x94, 0xde, 0x89, 0x0a, 0xd5, 0x6b, 0xb0, 0x69, 0x8d, 0x83, 0x80, 0xb8, 0x61,
	0x22, 0x26, 0x26, 0xe4, 0x0d, 0x5e, 0x1e, 0x4b, 0x6a, 0xb5, 0xc7, 0x53, 0xfc, 0x98, 0xf2, 0x3d,
	0x12, 0xea, 0xe4, 0xc4, 0x9c, 0x3e, 0x28, 0x58, 0xf6, 0xda, 0xfe, 0x17, 0x71, 0xca, 0x20, 0x1f,
	0xaf, 0x28, 0xb0, 0x2b, 0x3e, 0x98, 0xcc, 0x13, 0x48, 0x35, 0x57, 0x20, 0x9a, 0x87, 0xb6, 0xfb,
	0x3d, 0x92, 0x88, 0x68, 0xc5, 0x98, 0xfd, 0x80, 0x19, 0x68, 0x79, 0xc4, 0x33, 0x82, 0x9a, 0x3c,
	0xab, 0xab, 0xe9, 0x59, 0x3d, 0x6d, 0x86, 0x6a, 0xd3, 0x66, 0x48, 0xfb, 0x7d, 0x76, 0x4e, 0x22,
	0xbe, 0xd1, 0xa2, 0xbe, 0x0c, 0x55, 0x16, 0x31, 0x9b, 0xf5, 0x31, 0x15, 0x56, 0xbd, 0x6a, 0xbe,
	0x66, 0x87, 0x4e, 0xb4, 0xdf, 0x60, 0x47, 0x22, 0x31, 0xc5, 0x09, 0x25, 0xca, 0x1c, 0x4a, 0x9e,
	0x7a, 0x99, 0x2c, 0x9a, 0x0f, 0xc7, 0xdc, 0xf4, 0xd4, 0xd7, 0x53, 0x56, 0xad, 0x96, 0x7f, 0xcd,
	0x12, 0x2a, 0xd3, 0x63, 0x7e, 0x3e, 0xbf, 0x88, 0xf3, 0x4d, 0xe6, 0x65, 0xef, 0x8d, 0x69, 0xe8,
	0x8d, 0xf0, 0x1b, 0x49, 0x0f, 0xbd, 0xe1, 0x78, 0x54, 0x38, 0x21, 0x6c, 0xf6, 0x02, 0x7e, 0x8c,
	0xfd, 0x88, 0x05, 0x9c, 0x3d, 0x65, 0x3e, 0xba, 0x58, 0xc9, 0x7c, 0x74, 0x51, 0xfb, 0x79, 0x74,
	0x81, 0x97, 0x4d, 0x4c, 0xd1, 0xcc, 0xdd, 0xdf, 0x49, 0x63, 0xf1, 0x80, 0x92, 0xa5, 0x0c, 0xff,
	0x0a, 0x6c, 0x04, 0xe4, 0x68, 0xec, 0x04, 0xc4, 0x36, 0x52, 0xa0, 0xb4, 0x45, 0xf1, 0xc3, 0xa7,
	0x00, 0x67, 0x59, 0xd4, 0x15, 0x05, 0xe7, 0x56, 0xb4, 0x5a, 0x0e, 0xcd, 0x09, 0xcf, 0xed, 0xc6,
	0x84, 0x21, 0xb1, 0xff, 0x6a, 0xf2, 0x8f, 0x49, 0xe4, 0x5c, 0xbf, 0xd0, 0xde, 0x80, 0xcb, 0xd2,
	0x3d, 0x90, 0xdb, 0x83, 0x41, 0x40, 0x06, 0xec, 0xd6, 0x49, 0xbf, 0xef, 0x58, 0x71, 0xde, 0x11,
	0xcb, 0xf6, 0xc2, 0xff, 0xda, 0xf7, 0x4b, 0xb0, 0x23, 0xbd, 0xa3, 0x13, 0xcb, 0x0b, 0x6c, 0xf1,
	0xc2, 0xeb, 0x70, 0xde, 0x0f, 0xbc, 0x63, 0x27, 0x7b, 0x31, 0x9f, 0xd1, 0xa1, 0x8a, 0x3a, 0x29,
	0x09, 0xea, 0x16, 0x5c, 0x8c, 0xdf, 0xc8, 0x9d, 0xf4, 0xdb, 0xa2, 0x3a, 0x1d, 0x5c, 0xbe, 0x05,
	0x17, 0x2d, 0xcf, 0xa5, 0xe3, 0xd1, 0xac, 0x88, 0xf4, 0xb6, 0xa8, 0xfe, 0x68, 0xd6, 0x97, 0x3b,
	0x2a, 0xd9, 0xaf, 0xbf, 0x60, 0x45, 0xfc, 0x7d, 0x8e, 0xb2, 0xde, 0x88, 0x0a, 0x70, 0x8f, 0x9a,
	0xcc, 0x98, 0x5a, 0x6a, 0xc6, 0x5c, 0x85, 0x75, 0x9b, 0x0c, 0x9d, 0x63, 0x12, 0x4c, 0x8c, 0x38,
	0x43, 0xab, 0x8c, 0x97, 0xa1, 0xb0, 0x10, 0x13, 0x79, 0xae, 0xc2, 0x7a, 0x40, 0xa8, 0xef, 0xb9,
	0x94, 0xa7, 0xfa, 0x34, 0x58, 0x23, 0x51, 0x88, 0x17, 0x2b, 0x3f, 0x55, 0x30, 0x1f, 0x8e, 0x5d,
	0xb9, 0xb8, 0xe7, 0xd9, 0xa4, 0x1b, 0x9a, 0xe1, 0x98, 0x2e, 0x36, 0x96, 0x2f, 0x42, 0xd9, 0xf2,
	0xc7, 0xfc, 0xe2, 0x48, 0x7c, 0x01, 0x60, 0xcf, 0x1f, 0x47, 0x1d, 0xe8, 0x51, 0x9d, 0xfa, 0x25,
	0xa8, 0xb1, 0xfb, 0xeb, 0xd9, 0x2b, 0x48, 0x77, 0xd9, 0xad, 0xf6, 0xa8, 0x21, 0x6f, 0xa1, 0x7e,
	0x11, 0x2a, 0xb6, 0x43, 0x0f, 0xb9, 0x59, 0x8f, 0x6d, 0xe4, 0x1d, 0x87, 0x1e, 0x62, 0x3b, 0xac,
	0x55, 0x6f, 0x40, 0xb3, 0x67, 0xba, 0xf6, 0x89, 0x63, 0x87, 0x07, 0xdc, 0x86, 0xc5, 0x1f, 0x36,
	0xdb, 0xc5, 0x8a, 0xf0, 0x00, 0x9b, 0x27, 0xcd, 0x7a, 0xec, 0x4b, 0xbe, 0x37, 0xff, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0xef, 0x71, 0x8d, 0xe6, 0xdd, 0x57, 0x00, 0x00,
}
